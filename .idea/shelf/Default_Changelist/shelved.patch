Index: service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/PermissionMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/PermissionMapper.xml b/service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/PermissionMapper.xml
new file mode 100644
--- /dev/null	(date 1611317124861)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/PermissionMapper.xml	(date 1611317124861)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.acl.mapper.PermissionMapper">
+
+</mapper>
Index: service/service_statistics/src/main/java/com/atguigu/statistics/controller/DailyController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_statistics/src/main/java/com/atguigu/statistics/controller/DailyController.java b/service/service_statistics/src/main/java/com/atguigu/statistics/controller/DailyController.java
new file mode 100644
--- /dev/null	(date 1611142666214)
+++ b/service/service_statistics/src/main/java/com/atguigu/statistics/controller/DailyController.java	(date 1611142666214)
@@ -0,0 +1,53 @@
+package com.atguigu.statistics.controller;
+
+
+import com.atguigu.Result.R;
+import com.atguigu.Result.RandomUtil;
+import com.atguigu.statistics.client.memberClient;
+import com.atguigu.statistics.entity.Daily;
+import com.atguigu.statistics.service.DailyService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.scheduling.annotation.Scheduled;
+import org.springframework.scheduling.annotation.Schedules;
+import org.springframework.web.bind.annotation.*;
+
+import java.util.Map;
+import java.util.Random;
+
+/**
+ * <p>
+ * 网站统计日数据 前端控制器
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-19
+ */
+@RestController
+@RequestMapping("/statistics/daily")
+@CrossOrigin
+public class DailyController {
+    @Autowired
+    private com.atguigu.statistics.client.memberClient memberClient;
+    @Autowired
+    private DailyService dailyService;
+
+    @GetMapping("getStaInfo/{day}")
+    public R getStaInfo(@PathVariable String day){
+    dailyService.updateStaInfo(day);
+    return R.ok();
+    }
+
+    //echarts数据查询接口
+    //因为要返回数组类型，所以后端向前端返回集合数据模型
+    @GetMapping("getDiaryInfo/{type}/{start}/{end}")
+    public R getDiaryInfo(@PathVariable String type,
+                          @PathVariable String start,
+                          @PathVariable String end){
+        //返回echarts数据模型接口
+        Map map =  dailyService.getDiaryInfo(type,start,end);
+        return R.ok().data(map);
+    }
+
+
+}
+
Index: service/service_statistics/target/classes/com/atguigu/statistics/mapper/xml/DailyMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_statistics/target/classes/com/atguigu/statistics/mapper/xml/DailyMapper.xml b/service/service_statistics/target/classes/com/atguigu/statistics/mapper/xml/DailyMapper.xml
new file mode 100644
--- /dev/null	(date 1611051348318)
+++ b/service/service_statistics/target/classes/com/atguigu/statistics/mapper/xml/DailyMapper.xml	(date 1611051348318)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.statistics.mapper.DailyMapper">
+
+</mapper>
Index: service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/RoleMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/RoleMapper.xml b/service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/RoleMapper.xml
new file mode 100644
--- /dev/null	(date 1611317124890)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/RoleMapper.xml	(date 1611317124890)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.acl.mapper.RoleMapper">
+
+</mapper>
Index: service/service_edu/target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/target/classes/application.properties b/service/service_edu/target/classes/application.properties
new file mode 100644
--- /dev/null	(date 1611039146138)
+++ b/service/service_edu/target/classes/application.properties	(date 1611039146138)
@@ -0,0 +1,47 @@
+server.port=8001
+
+spring.application.name=service-edu
+#
+## \u73AF\u5883\u8BBE\u7F6E\uFF1Adev\u3001test\u3001prod
+spring.profiles.active=dev
+#
+## mysql\u6570\u636E\u5E93\u8FDE\u63A5
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+spring.datasource.url=jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8
+spring.datasource.username=root
+spring.datasource.password=Jinx1214
+#
+##\u8FD4\u56DEjson\u7684\u5168\u5C40\u65F6\u95F4\u683C\u5F0F
+spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
+spring.jackson.time-zone=GMT+8
+#
+##\u914D\u7F6Emapper xml\u6587\u4EF6\u7684\u8DEF\u5F84
+mybatis-plus.mapper-locations=classpath:com/atguigu/service/mapper/xml/*.xml
+#
+## nacos\u670D\u52A1\u5730\u5740
+
+spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
+
+#
+##\u5F00\u542F\u7194\u65AD\u673A\u5236
+feign.hystrix.enabled=true
+## \u8BBE\u7F6Ehystrix\u8D85\u65F6\u65F6\u95F4\uFF0C\u9ED8\u8BA41000ms
+hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=16000
+#
+##redis
+spring.redis.host=127.0.0.1
+spring.redis.port=6379
+spring.redis.database= 0
+spring.redis.timeout=1800000
+#
+spring.redis.lettuce.pool.max-active=20
+spring.redis.lettuce.pool.max-wait=-1
+##\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4(\u8D1F\u6570\u8868\u793A\u6CA1\u9650\u5236)
+spring.redis.lettuce.pool.max-idle=5
+spring.redis.lettuce.pool.min-idle=0
+#
+## \u8BBE\u7F6E\u65E5\u5FD7\u7EA7\u522B
+##logging.level.root=INFO
+#
+##mybatis\u65E5\u5FD7
+mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
\ No newline at end of file
Index: service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/UserRoleMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/UserRoleMapper.xml b/service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/UserRoleMapper.xml
new file mode 100644
--- /dev/null	(date 1611317124952)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/UserRoleMapper.xml	(date 1611317124952)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.acl.mapper.UserRoleMapper">
+
+</mapper>
Index: service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/UserMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/UserMapper.xml b/service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/UserMapper.xml
new file mode 100644
--- /dev/null	(date 1611317124932)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/UserMapper.xml	(date 1611317124932)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.acl.mapper.UserMapper">
+
+</mapper>
Index: service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/RolePermissionMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/RolePermissionMapper.xml b/service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/RolePermissionMapper.xml
new file mode 100644
--- /dev/null	(date 1611317124913)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/mapper/xml/RolePermissionMapper.xml	(date 1611317124913)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.acl.mapper.RolePermissionMapper">
+
+</mapper>
Index: service/service_acl/src/main/java/com/atguigu/acl/service/impl/RolePermissionServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/service/impl/RolePermissionServiceImpl.java b/service/service_acl/src/main/java/com/atguigu/acl/service/impl/RolePermissionServiceImpl.java
new file mode 100644
--- /dev/null	(date 1611317124917)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/service/impl/RolePermissionServiceImpl.java	(date 1611317124917)
@@ -0,0 +1,20 @@
+package com.atguigu.acl.service.impl;
+
+import com.atguigu.acl.entity.RolePermission;
+import com.atguigu.acl.mapper.RolePermissionMapper;
+import com.atguigu.acl.service.RolePermissionService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * 角色权限 服务实现类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+@Service
+public class RolePermissionServiceImpl extends ServiceImpl<RolePermissionMapper, RolePermission> implements RolePermissionService {
+
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/service/impl/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/service/impl/UserServiceImpl.java b/service/service_acl/src/main/java/com/atguigu/acl/service/impl/UserServiceImpl.java
new file mode 100644
--- /dev/null	(date 1611317124937)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/service/impl/UserServiceImpl.java	(date 1611317124937)
@@ -0,0 +1,20 @@
+package com.atguigu.acl.service.impl;
+
+import com.atguigu.acl.entity.User;
+import com.atguigu.acl.mapper.UserMapper;
+import com.atguigu.acl.service.UserService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * 用户表 服务实现类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+@Service
+public class UserServiceImpl extends ServiceImpl<UserMapper, User> implements UserService {
+
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/service/impl/RoleServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/service/impl/RoleServiceImpl.java b/service/service_acl/src/main/java/com/atguigu/acl/service/impl/RoleServiceImpl.java
new file mode 100644
--- /dev/null	(date 1611317124894)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/service/impl/RoleServiceImpl.java	(date 1611317124894)
@@ -0,0 +1,20 @@
+package com.atguigu.acl.service.impl;
+
+import com.atguigu.acl.entity.Role;
+import com.atguigu.acl.mapper.RoleMapper;
+import com.atguigu.acl.service.RoleService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ *  服务实现类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+@Service
+public class RoleServiceImpl extends ServiceImpl<RoleMapper, Role> implements RoleService {
+
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/service/impl/PermissionServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/service/impl/PermissionServiceImpl.java b/service/service_acl/src/main/java/com/atguigu/acl/service/impl/PermissionServiceImpl.java
new file mode 100644
--- /dev/null	(date 1611323579295)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/service/impl/PermissionServiceImpl.java	(date 1611323579295)
@@ -0,0 +1,97 @@
+package com.atguigu.acl.service.impl;
+
+import com.atguigu.acl.entity.Permission;
+import com.atguigu.acl.mapper.PermissionMapper;
+import com.atguigu.acl.service.PermissionService;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * <p>
+ * 权限 服务实现类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+@Service
+public class PermissionServiceImpl extends ServiceImpl<PermissionMapper, Permission> implements PermissionService {
+
+
+    @Override
+    public List<Permission> getAllPermission() {
+        //先获取所有的课程分类
+        QueryWrapper<Permission> wrapper = new QueryWrapper<>();
+        wrapper.orderByDesc("id");
+        List<Permission> permissions = baseMapper.selectList(wrapper);
+        List<Permission> finalAll = selectOne(permissions);
+        return finalAll;
+    }
+
+
+    private List<Permission> selectOne(List<Permission> permissions) {
+        List<Permission> permissionList = new ArrayList<>();
+        //获取一级菜单
+        for (Permission permission : permissions) {
+
+            if ("0".equals(permission.getPid())) {
+                permission.setLevel(1);
+                permissionList.add(selectNode(permission, permissions));
+
+            }
+        }
+        return permissionList;
+    }
+
+    private Permission selectNode(Permission permission, List<Permission> permissions) {
+        permission.setChildren(new ArrayList<Permission>());
+
+        //将子id与父id进行比较
+        for (Permission it : permissions) {
+            if (permission.getId().equals(it.getPid())) {
+                int level = permission.getLevel() + 1;
+                it.setLevel(level);
+                if (permission.getChildren() == null) {
+                    permission.setChildren(new ArrayList<Permission>());
+                }
+                permission.getChildren().add(selectNode(it, permissions));
+            }
+
+        }
+        return permission;
+    }
+
+
+    //删除菜单接口
+    @Override
+    public void removeChinderById(String id) {
+
+        List<String> ids = new ArrayList<>();
+        //利用递归获取所有子id
+        this.selectAllId(id, ids);
+        ids.add(id);
+        baseMapper.deleteBatchIds(ids);
+
+    }
+
+    private void selectAllId(String id, List<String> ids) {
+        QueryWrapper<Permission> wrapper = new QueryWrapper<>();
+
+        wrapper.eq("pid", id);
+        wrapper.select("id");
+        List<Permission> permissions = baseMapper.selectList(wrapper);
+        permissions.stream().forEach(item -> {
+                ids.add(item.getId());
+                this.selectAllId(item.getId(), ids);
+        });
+    }
+}
+
+
+
+
+
Index: service/service_crm/src/main/java/com/atguigu/crm/service/impl/BannerServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_crm/src/main/java/com/atguigu/crm/service/impl/BannerServiceImpl.java b/service/service_crm/src/main/java/com/atguigu/crm/service/impl/BannerServiceImpl.java
new file mode 100644
--- /dev/null	(date 1610099739979)
+++ b/service/service_crm/src/main/java/com/atguigu/crm/service/impl/BannerServiceImpl.java	(date 1610099739979)
@@ -0,0 +1,27 @@
+package com.atguigu.crm.service.impl;
+
+import com.atguigu.crm.entity.Banner;
+import com.atguigu.crm.mapper.BannerMapper;
+import com.atguigu.crm.service.BannerService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+import java.util.List;
+
+/**
+ * <p>
+ * 首页banner表 服务实现类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-07
+ */
+@Service
+public class BannerServiceImpl extends ServiceImpl<BannerMapper, Banner> implements BannerService {
+
+    @Override
+    public List<Banner> getAll() {
+        List<Banner> banners = baseMapper.selectList(null);
+        return banners;
+    }
+}
Index: service/service_msm/target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_msm/target/classes/application.properties b/service/service_msm/target/classes/application.properties
new file mode 100644
--- /dev/null	(date 1610507494158)
+++ b/service/service_msm/target/classes/application.properties	(date 1610507494158)
@@ -0,0 +1,47 @@
+server.port=8005
+
+spring.application.name=service-msm
+#
+## \u73AF\u5883\u8BBE\u7F6E\uFF1Adev\u3001test\u3001prod
+spring.profiles.active=dev
+#
+## mysql\u6570\u636E\u5E93\u8FDE\u63A5
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+spring.datasource.url=jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8
+spring.datasource.username=root
+spring.datasource.password=Jinx1214
+#
+##\u8FD4\u56DEjson\u7684\u5168\u5C40\u65F6\u95F4\u683C\u5F0F
+spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
+spring.jackson.time-zone=GMT+8
+#
+##\u914D\u7F6Emapper xml\u6587\u4EF6\u7684\u8DEF\u5F84
+mybatis-plus.mapper-locations=classpath:com/atguigu/msm/mapper/xml/*.xml
+#
+## nacos\u670D\u52A1\u5730\u5740
+
+spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
+
+#
+##\u5F00\u542F\u7194\u65AD\u673A\u5236
+feign.hystrix.enabled=true
+## \u8BBE\u7F6Ehystrix\u8D85\u65F6\u65F6\u95F4\uFF0C\u9ED8\u8BA41000ms
+hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=16000
+#
+##redis
+spring.redis.host=127.0.0.1
+spring.redis.port=6379
+spring.redis.database= 0
+spring.redis.timeout=1800000
+#
+spring.redis.lettuce.pool.max-active=20
+spring.redis.lettuce.pool.max-wait=-1
+##\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4(\u8D1F\u6570\u8868\u793A\u6CA1\u9650\u5236)
+spring.redis.lettuce.pool.max-idle=5
+spring.redis.lettuce.pool.min-idle=0
+#
+## \u8BBE\u7F6E\u65E5\u5FD7\u7EA7\u522B
+##logging.level.root=INFO
+#
+##mybatis\u65E5\u5FD7
+mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
\ No newline at end of file
Index: service/service_edu/src/main/java/com/atguigu/service/client/Impl/VodClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/client/Impl/VodClient.java b/service/service_edu/src/main/java/com/atguigu/service/client/Impl/VodClient.java
new file mode 100644
--- /dev/null	(date 1609940391501)
+++ b/service/service_edu/src/main/java/com/atguigu/service/client/Impl/VodClient.java	(date 1609940391501)
@@ -0,0 +1,18 @@
+package com.atguigu.service.client.Impl;
+
+import com.atguigu.Result.R;
+import org.springframework.stereotype.Component;
+
+import java.util.List;
+@Component
+public class VodClient implements com.atguigu.service.client.VodClient {
+    @Override
+    public R deleteFile(String id) {
+        return R.error().message("删除视频错误");
+    }
+
+    @Override
+    public R delete(List<String> videoIdList) {
+        return R.error().message("删除多个视频错误");
+    }
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/service/impl/UserRoleServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/service/impl/UserRoleServiceImpl.java b/service/service_acl/src/main/java/com/atguigu/acl/service/impl/UserRoleServiceImpl.java
new file mode 100644
--- /dev/null	(date 1611317124958)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/service/impl/UserRoleServiceImpl.java	(date 1611317124958)
@@ -0,0 +1,20 @@
+package com.atguigu.acl.service.impl;
+
+import com.atguigu.acl.entity.UserRole;
+import com.atguigu.acl.mapper.UserRoleMapper;
+import com.atguigu.acl.service.UserRoleService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ *  服务实现类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+@Service
+public class UserRoleServiceImpl extends ServiceImpl<UserRoleMapper, UserRole> implements UserRoleService {
+
+}
Index: service/service_crm/src/main/java/com/atguigu/crm/mapper/xml/BannerMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_crm/src/main/java/com/atguigu/crm/mapper/xml/BannerMapper.xml b/service/service_crm/src/main/java/com/atguigu/crm/mapper/xml/BannerMapper.xml
new file mode 100644
--- /dev/null	(date 1610019626991)
+++ b/service/service_crm/src/main/java/com/atguigu/crm/mapper/xml/BannerMapper.xml	(date 1610019626991)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.crm.mapper.BannerMapper">
+
+</mapper>
Index: service/service_edu/src/main/java/com/atguigu/service/entity/vo/CourseSearchVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/entity/vo/CourseSearchVO.java b/service/service_edu/src/main/java/com/atguigu/service/entity/vo/CourseSearchVO.java
new file mode 100644
--- /dev/null	(date 1610603211113)
+++ b/service/service_edu/src/main/java/com/atguigu/service/entity/vo/CourseSearchVO.java	(date 1610603211113)
@@ -0,0 +1,29 @@
+package com.atguigu.service.entity.vo;
+
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+
+@Data
+public class CourseSearchVO {
+    @ApiModelProperty(value = "课程名称")
+    private String title;
+
+    @ApiModelProperty(value = "讲师id")
+    private String teacherId;
+
+    @ApiModelProperty(value = "一级类别id")
+    private String subjectParentId;
+
+    @ApiModelProperty(value = "二级类别id")
+    private String subjectId;
+
+    @ApiModelProperty(value = "销量排序")
+    private String buyCountSort;
+
+    @ApiModelProperty(value = "最新时间排序")
+    private String gmtCreateSort;
+
+    @ApiModelProperty(value = "价格排序")
+    private String priceSort;
+}
+
Index: service/service_edu/src/main/java/com/atguigu/service/entity/vo/OneSubjectName.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/entity/vo/OneSubjectName.java b/service/service_edu/src/main/java/com/atguigu/service/entity/vo/OneSubjectName.java
new file mode 100644
--- /dev/null	(date 1609391958050)
+++ b/service/service_edu/src/main/java/com/atguigu/service/entity/vo/OneSubjectName.java	(date 1609391958050)
@@ -0,0 +1,15 @@
+package com.atguigu.service.entity.vo;
+
+import lombok.Data;
+
+import java.util.List;
+
+@Data
+public class OneSubjectName {
+
+    private String id;
+
+    private String title;
+
+    private List<TwoSubjectName> data;
+}
Index: service/service_edu/src/main/java/com/atguigu/service/entity/vo/TwoSubjectName.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/entity/vo/TwoSubjectName.java b/service/service_edu/src/main/java/com/atguigu/service/entity/vo/TwoSubjectName.java
new file mode 100644
--- /dev/null	(date 1609392278394)
+++ b/service/service_edu/src/main/java/com/atguigu/service/entity/vo/TwoSubjectName.java	(date 1609392278394)
@@ -0,0 +1,11 @@
+package com.atguigu.service.entity.vo;
+
+import lombok.Data;
+
+@Data
+public class TwoSubjectName {
+    private String title;
+
+    private String id;
+
+}
Index: service/service_edu/src/main/java/com/atguigu/service/entity/vo/VideoVo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/entity/vo/VideoVo.java b/service/service_edu/src/main/java/com/atguigu/service/entity/vo/VideoVo.java
new file mode 100644
--- /dev/null	(date 1610714363674)
+++ b/service/service_edu/src/main/java/com/atguigu/service/entity/vo/VideoVo.java	(date 1610714363674)
@@ -0,0 +1,11 @@
+package com.atguigu.service.entity.vo;
+
+import lombok.Data;
+
+@Data
+//小节VO类
+public class VideoVo {
+    private String id;
+    private String title;
+    private String videoSourceId;
+}
Index: service/service_edu/src/main/java/com/atguigu/service/entity/vo/CoursePublishVo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/entity/vo/CoursePublishVo.java b/service/service_edu/src/main/java/com/atguigu/service/entity/vo/CoursePublishVo.java
new file mode 100644
--- /dev/null	(date 1609767203410)
+++ b/service/service_edu/src/main/java/com/atguigu/service/entity/vo/CoursePublishVo.java	(date 1609767203410)
@@ -0,0 +1,24 @@
+package com.atguigu.service.entity.vo;
+
+import lombok.Data;
+
+import java.util.List;
+
+@Data
+public class CoursePublishVo {
+    private String id;
+
+    private String title;
+
+    private String cover;
+
+    private Integer lessonNum;
+
+    private String subjectLevelOne;
+
+    private String subjectLevelTwo;
+
+    private String teacherName;
+
+    private String price;//只用于显示
+}
Index: service/service_edu/src/main/java/com/atguigu/service/entity/vo/ChapterVo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/entity/vo/ChapterVo.java b/service/service_edu/src/main/java/com/atguigu/service/entity/vo/ChapterVo.java
new file mode 100644
--- /dev/null	(date 1609566891864)
+++ b/service/service_edu/src/main/java/com/atguigu/service/entity/vo/ChapterVo.java	(date 1609566891864)
@@ -0,0 +1,21 @@
+package com.atguigu.service.entity.vo;
+
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+
+import java.util.Date;
+import java.util.List;
+
+@Data
+//章节Vo类
+public class ChapterVo {
+    private String id;
+
+    private String title;
+
+
+    private List<VideoVo> list;
+
+}
Index: service/service_edu/src/main/java/com/atguigu/service/entity/vo/QueryCourseVo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/entity/vo/QueryCourseVo.java b/service/service_edu/src/main/java/com/atguigu/service/entity/vo/QueryCourseVo.java
new file mode 100644
--- /dev/null	(date 1609837124227)
+++ b/service/service_edu/src/main/java/com/atguigu/service/entity/vo/QueryCourseVo.java	(date 1609837124227)
@@ -0,0 +1,11 @@
+package com.atguigu.service.entity.vo;
+
+import lombok.Data;
+
+@Data
+public class QueryCourseVo {
+
+    private String title;
+
+    private String status;
+}
Index: service/service_oss/target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_oss/target/classes/application.properties b/service/service_oss/target/classes/application.properties
new file mode 100644
--- /dev/null	(date 1610515118877)
+++ b/service/service_oss/target/classes/application.properties	(date 1610515118877)
@@ -0,0 +1,13 @@
+server.port=8002
+
+spring.application.name=server-edu-oss
+
+
+#阿里云oss服务
+#OSS连接路径
+endpoint = oss-cn-hangzhou.aliyuncs.com
+#已经在控制台创建的bucket
+bucketName = edu-guli-1214
+#相应的id和key值，请填写你具体的值，这里不方便展示我自己的。
+accessKeyId =LTAI4GBMLqXNwtnWLVW9T3XZ
+accessKeySecret =mVvRcSGqKmwemGLV7phuh56nmZd8l5
\ No newline at end of file
Index: service/service_edu/src/main/java/com/atguigu/service/entity/vo/CourseWebVo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/entity/vo/CourseWebVo.java b/service/service_edu/src/main/java/com/atguigu/service/entity/vo/CourseWebVo.java
new file mode 100644
--- /dev/null	(date 1610629812189)
+++ b/service/service_edu/src/main/java/com/atguigu/service/entity/vo/CourseWebVo.java	(date 1610629812189)
@@ -0,0 +1,57 @@
+package com.atguigu.service.entity.vo;
+
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+
+import java.math.BigDecimal;
+
+@Data
+public class CourseWebVo {
+
+    private String id;
+
+    @ApiModelProperty(value = "课程标题")
+    private String title;
+
+    @ApiModelProperty(value = "课程销售价格，设置为0则可免费观看")
+    private BigDecimal price;
+
+    @ApiModelProperty(value = "总课时")
+    private Integer lessonNum;
+
+    @ApiModelProperty(value = "课程封面图片路径")
+    private String cover;
+
+    @ApiModelProperty(value = "销售数量")
+    private Long buyCount;
+
+    @ApiModelProperty(value = "浏览数量")
+    private Long viewCount;
+
+    @ApiModelProperty(value = "课程简介")
+    private String description;
+
+    @ApiModelProperty(value = "讲师ID")
+    private String teacherId;
+
+    @ApiModelProperty(value = "讲师姓名")
+    private String teacherName;
+
+    @ApiModelProperty(value = "讲师资历,一句话说明讲师")
+    private String intro;
+
+    @ApiModelProperty(value = "讲师头像")
+    private String avatar;
+
+    @ApiModelProperty(value = "课程一级类别ID")
+    private String subjectLevelOneId;
+
+    @ApiModelProperty(value = "类别一级名称")
+    private String subjectLevelOne;
+
+    @ApiModelProperty(value = "课程二级类别ID")
+    private String subjectLevelTwoId;
+
+    @ApiModelProperty(value = "类别二级名称")
+    private String subjectLevelTwo;
+}
Index: service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduSubjectMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduSubjectMapper.xml b/service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduSubjectMapper.xml
new file mode 100644
--- /dev/null	(date 1609325136690)
+++ b/service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduSubjectMapper.xml	(date 1609325136690)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.service.mapper.EduSubjectMapper">
+
+</mapper>
Index: service/service_vod/target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_vod/target/classes/application.properties b/service/service_vod/target/classes/application.properties
new file mode 100644
--- /dev/null	(date 1610713774669)
+++ b/service/service_vod/target/classes/application.properties	(date 1610713774669)
@@ -0,0 +1,17 @@
+
+server.port=8003
+
+spring.application.name=service-vod
+
+
+spring.profiles.active=dev
+
+
+aliyun.vod.file.keyid=LTAI4GBMLqXNwtnWLVW9T3XZ
+aliyun.vod.file.keysecret=mVvRcSGqKmwemGLV7phuh56nmZd8l5
+
+spring.servlet.multipart.max-file-size=1024MB
+
+spring.servlet.multipart.max-request-size=1024MB
+
+spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
\ No newline at end of file
Index: service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduVideoMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduVideoMapper.xml b/service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduVideoMapper.xml
new file mode 100644
--- /dev/null	(date 1609417219749)
+++ b/service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduVideoMapper.xml	(date 1609417219749)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.service.mapper.EduVideoMapper">
+
+</mapper>
Index: service/service_edu/src/main/java/com/atguigu/service/entity/vo/CourseInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/entity/vo/CourseInfo.java b/service/service_edu/src/main/java/com/atguigu/service/entity/vo/CourseInfo.java
new file mode 100644
--- /dev/null	(date 1609486613862)
+++ b/service/service_edu/src/main/java/com/atguigu/service/entity/vo/CourseInfo.java	(date 1609486613862)
@@ -0,0 +1,50 @@
+package com.atguigu.service.entity.vo;
+
+import com.baomidou.mybatisplus.annotation.FieldFill;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableField;
+import com.baomidou.mybatisplus.annotation.TableId;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
+import org.springframework.data.annotation.Id;
+
+import java.math.BigDecimal;
+import java.util.Date;
+
+@Data
+public class CourseInfo {
+
+    @ApiModelProperty(value = "课程ID")
+    private String id;
+
+    @ApiModelProperty(value = "课程讲师ID")
+    private String teacherId;
+
+    @ApiModelProperty(value = "课程专业ID")
+    private String subjectId;
+
+    @ApiModelProperty(value = "一级分类级ID")
+    private String subjectParentId;
+
+    @ApiModelProperty(value = "课程标题")
+    private String title;
+
+
+    @ApiModelProperty(value = "课程销售价格，设置为0则可免费观看")
+    // 0.01
+    private BigDecimal price;
+
+    @ApiModelProperty(value = "总课时")
+    private Integer lessonNum;
+
+    @ApiModelProperty(value = "课程封面图片路径")
+    private String cover;
+
+    @ApiModelProperty(value = "课程简介")
+    private String description;
+
+
+}
Index: service/service_edu/src/main/java/com/atguigu/service/entity/excel/EduSubectData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/entity/excel/EduSubectData.java b/service/service_edu/src/main/java/com/atguigu/service/entity/excel/EduSubectData.java
new file mode 100644
--- /dev/null	(date 1609326204512)
+++ b/service/service_edu/src/main/java/com/atguigu/service/entity/excel/EduSubectData.java	(date 1609326204512)
@@ -0,0 +1,12 @@
+package com.atguigu.service.entity.excel;
+
+import com.alibaba.excel.annotation.ExcelProperty;
+import lombok.Data;
+
+@Data
+public class EduSubectData {
+    @ExcelProperty(index = 0)
+    private String oneName;
+    @ExcelProperty(index = 1)
+    private String twoName;
+}
Index: service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduChapterMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduChapterMapper.xml b/service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduChapterMapper.xml
new file mode 100644
--- /dev/null	(date 1609417219664)
+++ b/service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduChapterMapper.xml	(date 1609417219664)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.service.mapper.EduChapterMapper">
+
+</mapper>
Index: service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduCourseMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduCourseMapper.xml b/service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduCourseMapper.xml
new file mode 100644
--- /dev/null	(date 1610631061412)
+++ b/service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduCourseMapper.xml	(date 1610631061412)
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.service.mapper.EduCourseMapper">
+
+    <select id="getCoursePublish" resultType="com.atguigu.service.entity.vo.CoursePublishVo">
+        SELECT ec.title,et.name as teacherName,es1.title as subjectLevelOne,es2.title as subjectLevelTwo,ec.cover,ec.price,ec.lesson_num as lessonNum from
+            edu_course  ec
+                     LEFT JOIN edu_teacher et ON ec.teacher_id = et.id
+                           LEFT JOIN edu_course_description ecd ON ec.id = ecd.id
+                           LEFT JOIN edu_subject es1 ON ec.subject_parent_id = es1.id
+                           LEFT JOIN edu_subject es2 on ec.subject_id = es2.id
+        WHERE ec.id = #{id}
+    </select>
+
+    <select id="getCourseInfo" resultType="com.atguigu.service.entity.vo.CourseWebVo">
+        SELECT ec.title as title,ec.price as price
+                ,ec.lesson_num as lessonNum,
+               ec.cover as cover,
+               ec.buy_count as buyCount,
+               ec.view_count as viewCount,
+               ecd.description as description,
+               et.id as teacherId,
+               et.name as teacherName,
+               et.intro as intro,
+               et.avatar as avatar,
+               es1.id as subjectLevelOneId,
+               es2.id AS subjectLevelTwoId,
+               es1.title as subjectLevelOne,
+               es2.title as subjectLevelTwo
+        from
+            edu_course  ec
+                LEFT JOIN edu_teacher et ON ec.teacher_id = et.id
+                LEFT JOIN edu_course_description ecd ON ec.id = ecd.id
+                LEFT JOIN edu_subject es1 ON ec.subject_parent_id = es1.id
+                LEFT JOIN edu_subject es2 on ec.subject_id = es2.id
+        WHERE ec.id = #{id}
+    </select>
+
+
+</mapper>
Index: service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduTeacherMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduTeacherMapper.xml b/service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduTeacherMapper.xml
new file mode 100644
--- /dev/null	(date 1608995078523)
+++ b/service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduTeacherMapper.xml	(date 1608995078523)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.service.mapper.EduTeacherMapper">
+
+</mapper>
Index: service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduCourseDescriptionMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduCourseDescriptionMapper.xml b/service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduCourseDescriptionMapper.xml
new file mode 100644
--- /dev/null	(date 1609417219714)
+++ b/service/service_edu/src/main/java/com/atguigu/service/mapper/xml/EduCourseDescriptionMapper.xml	(date 1609417219714)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.service.mapper.EduCourseDescriptionMapper">
+
+</mapper>
Index: service/service_edu/src/main/java/com/atguigu/service/service/impl/EduChapterServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/service/impl/EduChapterServiceImpl.java b/service/service_edu/src/main/java/com/atguigu/service/service/impl/EduChapterServiceImpl.java
new file mode 100644
--- /dev/null	(date 1609836237182)
+++ b/service/service_edu/src/main/java/com/atguigu/service/service/impl/EduChapterServiceImpl.java	(date 1609836237182)
@@ -0,0 +1,147 @@
+package com.atguigu.service.service.impl;
+
+import com.atguigu.service.entity.EduChapter;
+import com.atguigu.service.entity.EduCourse;
+import com.atguigu.service.entity.EduCourseDescription;
+import com.atguigu.service.entity.EduVideo;
+import com.atguigu.service.entity.vo.ChapterVo;
+import com.atguigu.service.entity.vo.CourseInfo;
+import com.atguigu.service.entity.vo.VideoVo;
+import com.atguigu.service.mapper.EduChapterMapper;
+import com.atguigu.service.service.EduChapterService;
+import com.atguigu.service.service.EduCourseDescriptionService;
+import com.atguigu.service.service.EduCourseService;
+import com.atguigu.service.service.EduVideoService;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.beans.BeanUtils;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * <p>
+ * 课程 服务实现类
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+@Service
+public class EduChapterServiceImpl extends ServiceImpl<EduChapterMapper, EduChapter> implements EduChapterService {
+    @Autowired
+    private EduVideoService videoService;
+
+    @Autowired
+    private EduCourseService courseService;
+
+    @Autowired
+    private EduCourseDescriptionService eduCourseDescriptionService;
+
+    @Autowired
+    private EduChapterService chapterService;
+
+
+    @Autowired
+    private EduCourseService  eduCourseService;
+
+    @Override
+    //根据课程ID获取课程大纲
+    public List<ChapterVo> getAllChapterList(String id) {
+        //先获取一级课程信息
+        QueryWrapper<EduChapter> eduChapterWrapper = new QueryWrapper<>();
+        eduChapterWrapper.eq("course_id",id);
+
+        List<EduChapter> eduChapters = baseMapper.selectList(eduChapterWrapper);
+
+
+        //获取二级课程信息
+        QueryWrapper<EduVideo> eduVideoWrapper = new QueryWrapper<>();
+        eduVideoWrapper.eq("course_id",id);
+        List<EduVideo> videoList = videoService.list(eduVideoWrapper);
+
+        List<ChapterVo> finalList = new ArrayList<>();
+
+
+        //封装一级课程
+        for (int i = 0; i < eduChapters.size(); i++) {
+            ChapterVo chapterVo = new ChapterVo();
+            EduChapter eduChapter = eduChapters.get(i);
+            BeanUtils.copyProperties(eduChapter,chapterVo);
+            finalList.add(chapterVo);
+            //封装二级课程
+            List<VideoVo> videoVos = new ArrayList<>();
+            for (int i1 = 0; i1 < videoList.size(); i1++) {
+                EduVideo eduVideo1 = videoList.get(i1);
+                //判断该小节是否是同一课程下
+                if(eduChapter.getId().equals(eduVideo1.getChapterId())){
+                    EduVideo eduVideo = videoList.get(i1);
+                    VideoVo videoVo = new VideoVo();
+                    BeanUtils.copyProperties(eduVideo,videoVo);
+
+                    videoVos.add(videoVo);
+                }
+            }
+            chapterVo.setList(videoVos);
+
+        }
+
+
+
+        return finalList;
+    }
+
+    @Override
+    //根据课程id查询课程信息
+    public CourseInfo getInfoByCourseId(String id) {
+        EduCourse course = courseService.getById(id);
+        //获取课程简介
+        EduCourseDescription description = eduCourseDescriptionService.getById(course);
+        //封装数据
+        CourseInfo courseInfo = new CourseInfo();
+
+        BeanUtils.copyProperties(course,courseInfo);
+        courseInfo.setDescription(description.getDescription());
+
+        return courseInfo;
+    }
+
+    @Override
+    public void updateByCourseId(CourseInfo courseInfo) {
+        EduCourse eduCourse = new EduCourse();
+        BeanUtils.copyProperties(courseInfo,eduCourse);
+
+        eduCourseService.update(eduCourse,null);
+
+        EduCourseDescription  eduCourseDescription = new EduCourseDescription();
+        eduCourseDescription.setDescription(courseInfo.getDescription());
+        eduCourseDescriptionService.update(eduCourseDescription,null);
+
+    }
+
+    @Override
+    public boolean deleteByVideoNumb(String id) {
+        //根据课程ID查询章节小节，如果章节下面有小节则不让删除
+        QueryWrapper<EduVideo> eduVideoQueryWrapper = new QueryWrapper<>();
+        eduVideoQueryWrapper.eq("chapter_id",id);
+        int count = videoService.count(eduVideoQueryWrapper);
+        if(count>0){
+            return false;
+        }else {
+            chapterService.removeById(id);
+            return true;
+        }
+
+
+
+    }
+
+    @Override
+    public void removeByCourseId(String id) {
+        QueryWrapper<EduChapter> queryWrapper = new QueryWrapper<>();
+        queryWrapper.eq("course_id",id);
+        baseMapper.delete(queryWrapper);
+    }
+}
Index: service/service_order/target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/target/classes/application.properties b/service/service_order/target/classes/application.properties
new file mode 100644
--- /dev/null	(date 1611048112366)
+++ b/service/service_order/target/classes/application.properties	(date 1611048112366)
@@ -0,0 +1,53 @@
+server.port=8007
+
+spring.application.name=service-order
+#
+## \u73AF\u5883\u8BBE\u7F6E\uFF1Adev\u3001test\u3001prod
+spring.profiles.active=dev
+#
+## mysql\u6570\u636E\u5E93\u8FDE\u63A5
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+spring.datasource.url=jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8
+spring.datasource.username=root
+spring.datasource.password=Jinx1214
+#
+##\u8FD4\u56DEjson\u7684\u5168\u5C40\u65F6\u95F4\u683C\u5F0F
+spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
+spring.jackson.time-zone=GMT+8
+#
+##\u914D\u7F6Emapper xml\u6587\u4EF6\u7684\u8DEF\u5F84
+mybatis-plus.mapper-locations=classpath:com/atguigu/order/mapper/xml/*.xml
+#
+## nacos\u670D\u52A1\u5730\u5740
+
+spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
+
+#
+##\u5F00\u542F\u7194\u65AD\u673A\u5236
+#feign.hystrix.enabled=true
+## \u8BBE\u7F6Ehystrix\u8D85\u65F6\u65F6\u95F4\uFF0C\u9ED8\u8BA41000ms
+hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=16000
+#
+##redis
+spring.redis.host=127.0.0.1
+spring.redis.port=6379
+spring.redis.database= 0
+spring.redis.timeout=1800000
+#
+spring.redis.lettuce.pool.max-active=20
+spring.redis.lettuce.pool.max-wait=-1
+##\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4(\u8D1F\u6570\u8868\u793A\u6CA1\u9650\u5236)
+spring.redis.lettuce.pool.max-idle=5
+spring.redis.lettuce.pool.min-idle=0
+#
+## \u8BBE\u7F6E\u65E5\u5FD7\u7EA7\u522B
+##logging.level.root=INFO
+#
+
+#微信扫码登陆
+
+wx.open.app_id=wxed9954c01bb89b47
+wx.open.app_secret=a7482517235173ddb4083788de60b90e
+wx.open.redirect_url=http://guli.shop/api/ucenter/wx/callback
+##mybatis\u65E5\u5FD7
+mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
\ No newline at end of file
Index: service/service_edu/src/main/java/com/atguigu/service/service/impl/EduCourseServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/service/impl/EduCourseServiceImpl.java b/service/service_edu/src/main/java/com/atguigu/service/service/impl/EduCourseServiceImpl.java
new file mode 100644
--- /dev/null	(date 1610629812178)
+++ b/service/service_edu/src/main/java/com/atguigu/service/service/impl/EduCourseServiceImpl.java	(date 1610629812178)
@@ -0,0 +1,161 @@
+package com.atguigu.service.service.impl;
+
+import com.atguigu.service.client.VodClient;
+import com.atguigu.service.entity.EduCourse;
+import com.atguigu.service.entity.EduCourseDescription;
+import com.atguigu.service.entity.EduVideo;
+import com.atguigu.service.entity.vo.*;
+import com.atguigu.service.mapper.EduCourseMapper;
+import com.atguigu.service.service.EduChapterService;
+import com.atguigu.service.service.EduCourseDescriptionService;
+import com.atguigu.service.service.EduCourseService;
+import com.atguigu.service.service.EduVideoService;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.beans.BeanUtils;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.util.StringUtils;
+
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+/**
+ * <p>
+ * 课程 服务实现类
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+@Service
+public class EduCourseServiceImpl extends ServiceImpl<EduCourseMapper, EduCourse> implements EduCourseService {
+
+    @Autowired
+    private EduCourseDescriptionService descriptionService;
+
+    @Autowired
+    private EduVideoService videoService;
+
+    @Autowired
+    private VodClient client;
+
+    @Autowired
+    private EduChapterService eduChapterService;
+
+
+    @Override
+    public String saveCourse(CourseInfo courseInfo) {
+        //获取传递过来的参数 将值赋值给Course对象进行保存
+        EduCourse eduCourse = new EduCourse();
+        BeanUtils.copyProperties(courseInfo,eduCourse);
+
+        baseMapper.insert(eduCourse);
+
+        //将课程描述的id设置为和课程一样的ID
+        String cid = eduCourse.getId();
+        EduCourseDescription description = new EduCourseDescription();
+        description.setDescription(courseInfo.getDescription());
+        description.setId(cid);
+        descriptionService.save(description);
+        return cid;
+    }
+
+    @Override
+    public CoursePublishVo getCourse(String id) {
+        CoursePublishVo coursePublish = baseMapper.getCoursePublish(id);
+        return coursePublish;
+    }
+
+    @Override
+    public void removeByCourseId(String id) {
+        //根据课程id获取所有视频id
+        QueryWrapper<EduVideo> wrapper = new QueryWrapper<>();
+        wrapper.eq("course_id",id);
+        //这个是为了只获取video_source_id字段的值
+        wrapper.select("video_source_id");
+        List<EduVideo> list = videoService.list(wrapper);
+        //将获取到的小节信息进行遍历 将视频id进行封装
+        List<String> Ids = new ArrayList<>();
+        for (EduVideo video : list) {
+            if(video.getVideoSourceId()!=null){
+                Ids.add(video.getVideoSourceId());
+            }
+        }
+        //调用远程服务进行删除
+        if(Ids!=null){
+            client.delete(Ids);
+        }
+
+        //根据课程ID删除小节信息
+        videoService.removeByCourseId(id);
+
+        //根据课程id删除描述信息
+        descriptionService.removeByCourseId(id);
+
+
+
+
+        //根据课程删除章节信息
+        eduChapterService.removeByCourseId(id);
+        //根据课程id删除课程
+        int i = baseMapper.deleteById(id);
+        if(i==0){
+            throw new RuntimeException();
+        }
+
+    }
+
+    @Override
+    public Map getCourseList(Page<EduCourse> page, CourseSearchVO courseSearchVO) {
+        System.out.println(courseSearchVO);
+
+
+        QueryWrapper<EduCourse> queryWrapper = new QueryWrapper<>();
+        //判断条件查询，动态拼接sql语句
+        if(!StringUtils.isEmpty(courseSearchVO.getSubjectParentId())){
+            queryWrapper.eq("subject_parent_id",courseSearchVO.getSubjectParentId());
+        }
+        if(!StringUtils.isEmpty(courseSearchVO.getSubjectId())){
+            queryWrapper.eq("subject_id",courseSearchVO.getSubjectId());
+        }
+        if(!StringUtils.isEmpty(courseSearchVO.getBuyCountSort())){
+            queryWrapper.orderByDesc("buy_count",courseSearchVO.getBuyCountSort());
+        }
+        if(!StringUtils.isEmpty(courseSearchVO.getGmtCreateSort())){
+            queryWrapper.orderByDesc("gmt_create",courseSearchVO.getGmtCreateSort());
+        }
+        if(!StringUtils.isEmpty(courseSearchVO.getPriceSort())){
+            queryWrapper.orderByDesc("price",courseSearchVO.getPriceSort());
+        }
+        baseMapper.selectPage(page,queryWrapper);
+
+        List<EduCourse> records = page.getRecords();
+        long current = page.getCurrent();
+        long total = page.getTotal();
+        long size = page.getSize();
+        boolean hasNext = page.hasNext();
+        boolean hasPrevious = page.hasPrevious();
+
+        Map<String,Object> map = new HashMap<>();
+        map.put("records",records);
+        map.put("current",current);
+        map.put("total",total);
+        map.put("size",size);
+        map.put("hasNext",hasNext);
+        map.put("hasPrevious",hasPrevious);
+
+        return map;
+    }
+
+    @Override
+    public CourseWebVo getCourseInfo(String id) {
+        CourseWebVo courseWebVo =  baseMapper.getCourseInfo(id);
+        return courseWebVo;
+    }
+
+}
Index: service/service_edu/src/main/java/com/atguigu/service/service/impl/EduTeacherServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/service/impl/EduTeacherServiceImpl.java b/service/service_edu/src/main/java/com/atguigu/service/service/impl/EduTeacherServiceImpl.java
new file mode 100644
--- /dev/null	(date 1610546026707)
+++ b/service/service_edu/src/main/java/com/atguigu/service/service/impl/EduTeacherServiceImpl.java	(date 1610546026707)
@@ -0,0 +1,57 @@
+package com.atguigu.service.service.impl;
+
+import com.atguigu.service.entity.EduTeacher;
+import com.atguigu.service.mapper.EduTeacherMapper;
+import com.atguigu.service.service.EduTeacherService;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.core.metadata.IPage;
+import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+/**
+ * <p>
+ * 讲师 服务实现类
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-26
+ */
+@Service
+public class EduTeacherServiceImpl extends ServiceImpl<EduTeacherMapper, EduTeacher> implements EduTeacherService {
+
+    @Override
+    public Map<String, Object> findByPage(Page<EduTeacher> page) {
+        //进行分页
+        QueryWrapper<EduTeacher> eduTeacherQueryWrapper = new QueryWrapper<>();
+
+        baseMapper.selectPage(page,eduTeacherQueryWrapper);
+        boolean hasNext = page.hasNext();
+        long total = page.getTotal();
+        List<EduTeacher> records = page.getRecords();
+        long current = page.getCurrent();
+        long size = page.getSize();
+        long pages = page.getPages();
+        boolean hasPrevious = page.hasPrevious();
+        Map<String,Object> map = new HashMap<>();
+        map.put("items", records);
+
+        map.put("current", current);
+
+        map.put("pages", pages);
+
+        map.put("size", size);
+
+        map.put("total", total);
+
+        map.put("hasNext", hasNext);
+        map.put("hasPrevious", hasPrevious);
+
+
+        return map;
+    }
+}
Index: service/service_edu/src/main/java/com/atguigu/service/service/impl/EduSubjectServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/service/impl/EduSubjectServiceImpl.java b/service/service_edu/src/main/java/com/atguigu/service/service/impl/EduSubjectServiceImpl.java
new file mode 100644
--- /dev/null	(date 1609395624101)
+++ b/service/service_edu/src/main/java/com/atguigu/service/service/impl/EduSubjectServiceImpl.java	(date 1609395624101)
@@ -0,0 +1,88 @@
+package com.atguigu.service.service.impl;
+
+import com.alibaba.excel.EasyExcel;
+import com.atguigu.service.entity.EduSubject;
+import com.atguigu.service.entity.excel.EduSubectData;
+import com.atguigu.service.entity.vo.OneSubjectName;
+import com.atguigu.service.entity.vo.TwoSubjectName;
+import com.atguigu.service.mapper.EduSubjectMapper;
+import com.atguigu.service.service.EduSubjectService;
+import com.atguigu.service.service.listener.SubjectListener;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.beans.BeanUtils;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.web.multipart.MultipartFile;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * <p>
+ * 课程科目 服务实现类
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-30
+ */
+@Service
+public class EduSubjectServiceImpl extends ServiceImpl<EduSubjectMapper, EduSubject> implements EduSubjectService {
+
+    @Autowired
+    private EduSubjectService service;
+    @Override
+    public void addSubject(MultipartFile file) {
+        //读取上传来的文件
+        //获取文件的输入流
+        try {
+            InputStream in = file.getInputStream();
+            //进行文件的读取
+            EasyExcel.read(in, EduSubectData.class,new SubjectListener(service)).sheet().doRead();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+    }
+
+    @Override
+    //获取所有一级标签和子标签
+    public List<OneSubjectName> getAllSubjectList() {
+        //获取所有一级分类
+        List<OneSubjectName> oneSubjectNames = new ArrayList<>();
+        QueryWrapper<EduSubject> oneWrapper = new QueryWrapper<>();
+        oneWrapper.eq("parent_id","0");
+        List<EduSubject> oneEduSubject = baseMapper.selectList(oneWrapper);
+
+
+       //获取 所有二级分类
+        List<OneSubjectName> twoSubjectNames = new ArrayList<>();
+        QueryWrapper<EduSubject> twoWrapper = new QueryWrapper<>();
+        oneWrapper.ne("parent_id","0");
+        List<EduSubject> twoEduSubject = baseMapper.selectList(twoWrapper);
+
+
+        //封装一级分类
+        for (int i = 0; i < oneEduSubject.size(); i++) {
+
+            EduSubject eduSubject = oneEduSubject.get(i);
+            OneSubjectName oneSubjectName = new OneSubjectName();
+            BeanUtils.copyProperties(eduSubject,oneSubjectName);
+            List<TwoSubjectName> tw  = new ArrayList<>();
+            //封装二级分分类
+            for (int j = 0; j < twoEduSubject.size(); j++) {
+                EduSubject twoEdu =  twoEduSubject.get(j);
+                if(twoEdu.getParentId().equals( oneSubjectName.getId())){
+                    TwoSubjectName twoSubjectName =new TwoSubjectName();
+                    BeanUtils.copyProperties(twoEdu,twoSubjectName);
+                    tw.add(twoSubjectName);
+                }
+                oneSubjectName.setData(tw);
+            }
+            oneSubjectNames.add(oneSubjectName);
+        }
+
+        return oneSubjectNames;
+    }
+}
Index: service/service_edu/src/main/java/com/atguigu/service/service/listener/SubjectListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/service/listener/SubjectListener.java b/service/service_edu/src/main/java/com/atguigu/service/service/listener/SubjectListener.java
new file mode 100644
--- /dev/null	(date 1609594751846)
+++ b/service/service_edu/src/main/java/com/atguigu/service/service/listener/SubjectListener.java	(date 1609594751846)
@@ -0,0 +1,71 @@
+package com.atguigu.service.service.listener;
+
+import com.alibaba.excel.context.AnalysisContext;
+import com.alibaba.excel.event.AnalysisEventListener;
+import com.alibaba.excel.read.listener.ReadListener;
+import com.atguigu.service.entity.EduSubject;
+import com.atguigu.service.entity.excel.EduSubectData;
+import com.atguigu.service.service.EduSubjectService;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Component;
+
+public class SubjectListener extends AnalysisEventListener<EduSubectData> {
+
+   private SubjectListener(){}
+   public   EduSubjectService Eduservice;
+   public SubjectListener(EduSubjectService service){
+       this.Eduservice = service;
+   }
+
+
+    @Override
+    public void invoke(EduSubectData eduSubectData, AnalysisContext analysisContext) {
+        //判断一级目录是否在数据库中存在，如果存在则不读取
+        //判断文件中是否有数据
+        if(eduSubectData ==null){
+            throw new RuntimeException();
+        }
+        EduSubject eduSubject = oneSubect(Eduservice,eduSubectData.getOneName());
+        if(eduSubject == null){
+            //如果不存在 将excel的表头行进行读取 然后在数据库中进行创建
+            eduSubject = new EduSubject();
+            eduSubject.setParentId("0");
+            eduSubject.setTitle(eduSubectData.getOneName());
+            Eduservice.save(eduSubject);
+        }
+        String parentId = eduSubject.getId();
+        //判断二级目录是否存在
+        EduSubject twoSub = twoSubect(Eduservice,eduSubectData.getTwoName(),parentId);
+        if(twoSub == null){
+            //如果不存在 将excel的表头行进行读取 然后在数据库中进行创建 二级目录的父id为一级目录的id
+            twoSub = new EduSubject();
+            twoSub.setParentId(parentId);
+            twoSub.setTitle(eduSubectData.getOneName());
+            Eduservice.save(twoSub);
+        }
+
+
+    }
+
+    private EduSubject oneSubect(EduSubjectService Eduservice,String name){
+        QueryWrapper<EduSubject> wrapper = new QueryWrapper();
+        wrapper.eq("title",name);
+        wrapper.eq("parent_id","0");
+        EduSubject one = Eduservice.getOne(wrapper);
+        return one;
+    }
+
+    private EduSubject twoSubect(EduSubjectService Eduservice,String name,String pid){
+        QueryWrapper<EduSubject> wrapper = new QueryWrapper();
+        wrapper.eq("title",name);
+        wrapper.eq("parent_id",pid);
+        EduSubject two = Eduservice.getOne(wrapper);
+        return two;
+    }
+
+    @Override
+    public void doAfterAllAnalysed(AnalysisContext analysisContext) {
+
+    }
+}
Index: service/service_msm/src/main/java/com/atguigu/msm/service/Impl/MsmServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_msm/src/main/java/com/atguigu/msm/service/Impl/MsmServiceImpl.java b/service/service_msm/src/main/java/com/atguigu/msm/service/Impl/MsmServiceImpl.java
new file mode 100644
--- /dev/null	(date 1610459225509)
+++ b/service/service_msm/src/main/java/com/atguigu/msm/service/Impl/MsmServiceImpl.java	(date 1610459225509)
@@ -0,0 +1,69 @@
+package com.atguigu.msm.service.Impl;
+
+import com.alibaba.fastjson.JSONObject;
+import com.aliyuncs.CommonRequest;
+import com.aliyuncs.CommonResponse;
+import com.aliyuncs.DefaultAcsClient;
+import com.aliyuncs.IAcsClient;
+import com.aliyuncs.exceptions.ClientException;
+import com.aliyuncs.http.MethodType;
+import com.aliyuncs.profile.DefaultProfile;
+import com.atguigu.msm.service.MsmService;
+import com.atguigu.msm.utils.RandomUtil;
+import org.apache.catalina.users.Constants;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.stereotype.Service;
+import org.springframework.util.StringUtils;
+import org.springframework.web.client.RestTemplate;
+
+import java.rmi.ServerException;
+import java.util.HashMap;
+import java.util.Map;
+
+@Service
+public class MsmServiceImpl implements MsmService {
+
+
+    @Autowired
+    private RedisTemplate<String,String> redisTemplate;
+    @Override
+    public boolean sendCode(String phone) {
+        //生成验证码
+        String fourBitRandom = RandomUtil.getFourBitRandom();
+        Map<String,String> code = new HashMap<>();
+        code.put("code",fourBitRandom);
+
+        //验证手机号
+        if(StringUtils.isEmpty(phone)) return false;
+        DefaultProfile profile =
+                DefaultProfile.getProfile("default", "LTAI4GBMLqXNwtnWLVW9T3XZ", "mVvRcSGqKmwemGLV7phuh56nmZd8l5");
+
+
+        IAcsClient client = new DefaultAcsClient(profile);
+        CommonRequest request = new CommonRequest();
+//request.setProtocol(ProtocolType.HTTPS);
+        request.setMethod(MethodType.POST);
+        request.setDomain("dysmsapi.aliyuncs.com");
+        request.setVersion("2017-05-25");
+        request.setAction("SendSms");
+
+
+        request.putQueryParameter("PhoneNumbers", phone);
+        request.putQueryParameter("SignName", "九职410个人专用");
+        request.putQueryParameter("TemplateCode", "SMS_205127988");
+        request.putQueryParameter("TemplateParam", JSONObject.toJSONString(code));
+        try {
+            //将验证码放入redis中
+            redisTemplate.opsForValue().set(phone,fourBitRandom);
+            CommonResponse response = client.getCommonResponse(request);
+            System.out.println(response.getData());
+            return response.getHttpResponse().isSuccess();
+        } catch (ClientException e) {
+            e.printStackTrace();
+        }
+        return false;
+    }
+}
+
+
Index: service/service_edu/src/main/java/com/atguigu/service/service/impl/EduVideoServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/service/impl/EduVideoServiceImpl.java b/service/service_edu/src/main/java/com/atguigu/service/service/impl/EduVideoServiceImpl.java
new file mode 100644
--- /dev/null	(date 1609836237186)
+++ b/service/service_edu/src/main/java/com/atguigu/service/service/impl/EduVideoServiceImpl.java	(date 1609836237186)
@@ -0,0 +1,28 @@
+package com.atguigu.service.service.impl;
+
+import com.atguigu.service.entity.EduVideo;
+import com.atguigu.service.mapper.EduVideoMapper;
+import com.atguigu.service.service.EduVideoService;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * 课程视频 服务实现类
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+@Service
+public class EduVideoServiceImpl extends ServiceImpl<EduVideoMapper, EduVideo> implements EduVideoService {
+
+    @Override
+    public void removeByCourseId(String id) {
+        QueryWrapper<EduVideo> queryWrapper = new QueryWrapper<>();
+        queryWrapper.eq("course_id",id);
+        baseMapper.delete(queryWrapper);
+
+    }
+}
Index: service/service_edu/src/main/java/com/atguigu/service/service/impl/EduCourseDescriptionServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/service/impl/EduCourseDescriptionServiceImpl.java b/service/service_edu/src/main/java/com/atguigu/service/service/impl/EduCourseDescriptionServiceImpl.java
new file mode 100644
--- /dev/null	(date 1609836987243)
+++ b/service/service_edu/src/main/java/com/atguigu/service/service/impl/EduCourseDescriptionServiceImpl.java	(date 1609836987243)
@@ -0,0 +1,28 @@
+package com.atguigu.service.service.impl;
+
+import com.atguigu.service.entity.EduCourseDescription;
+import com.atguigu.service.entity.EduVideo;
+import com.atguigu.service.mapper.EduCourseDescriptionMapper;
+import com.atguigu.service.service.EduCourseDescriptionService;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * 课程简介 服务实现类
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+@Service
+public class EduCourseDescriptionServiceImpl extends ServiceImpl<EduCourseDescriptionMapper, EduCourseDescription> implements EduCourseDescriptionService {
+
+    @Override
+    public void removeByCourseId(String id) {
+        QueryWrapper<EduCourseDescription> queryWrapper = new QueryWrapper<>();
+        queryWrapper.eq("id",id);
+        baseMapper.delete(queryWrapper);
+    }
+}
Index: service/service_order/src/main/java/com/atguigu/order/mapper/xml/TPayLogMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/main/java/com/atguigu/order/mapper/xml/TPayLogMapper.xml b/service/service_order/src/main/java/com/atguigu/order/mapper/xml/TPayLogMapper.xml
new file mode 100644
--- /dev/null	(date 1610971251726)
+++ b/service/service_order/src/main/java/com/atguigu/order/mapper/xml/TPayLogMapper.xml	(date 1610971251726)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.order.mapper.TPayLogMapper">
+
+</mapper>
Index: service/service_ucenter/target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_ucenter/target/classes/application.properties b/service/service_ucenter/target/classes/application.properties
new file mode 100644
--- /dev/null	(date 1611039206271)
+++ b/service/service_ucenter/target/classes/application.properties	(date 1611039206271)
@@ -0,0 +1,53 @@
+server.port=8150
+
+spring.application.name=service-ucenter
+#
+## \u73AF\u5883\u8BBE\u7F6E\uFF1Adev\u3001test\u3001prod
+spring.profiles.active=dev
+#
+## mysql\u6570\u636E\u5E93\u8FDE\u63A5
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+spring.datasource.url=jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8
+spring.datasource.username=root
+spring.datasource.password=Jinx1214
+#
+##\u8FD4\u56DEjson\u7684\u5168\u5C40\u65F6\u95F4\u683C\u5F0F
+spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
+spring.jackson.time-zone=GMT+8
+#
+##\u914D\u7F6Emapper xml\u6587\u4EF6\u7684\u8DEF\u5F84
+mybatis-plus.mapper-locations=classpath:com/atguigu/ucenter/mapper/xml/*.xml
+#
+## nacos\u670D\u52A1\u5730\u5740
+
+spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
+
+#
+##\u5F00\u542F\u7194\u65AD\u673A\u5236
+feign.hystrix.enabled=true
+## \u8BBE\u7F6Ehystrix\u8D85\u65F6\u65F6\u95F4\uFF0C\u9ED8\u8BA41000ms
+hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=16000
+#
+##redis
+spring.redis.host=127.0.0.1
+spring.redis.port=6379
+spring.redis.database= 0
+spring.redis.timeout=1800000
+#
+spring.redis.lettuce.pool.max-active=20
+spring.redis.lettuce.pool.max-wait=-1
+##\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4(\u8D1F\u6570\u8868\u793A\u6CA1\u9650\u5236)
+spring.redis.lettuce.pool.max-idle=5
+spring.redis.lettuce.pool.min-idle=0
+#
+## \u8BBE\u7F6E\u65E5\u5FD7\u7EA7\u522B
+##logging.level.root=INFO
+#
+
+#微信扫码登陆
+
+wx.open.app_id=wxed9954c01bb89b47
+wx.open.app_secret=a7482517235173ddb4083788de60b90e
+wx.open.redirect_url=http://guli.shop/api/ucenter/wx/callback
+##mybatis\u65E5\u5FD7
+mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
\ No newline at end of file
Index: service/service_order/src/main/java/com/atguigu/order/mapper/xml/TOrderMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/main/java/com/atguigu/order/mapper/xml/TOrderMapper.xml b/service/service_order/src/main/java/com/atguigu/order/mapper/xml/TOrderMapper.xml
new file mode 100644
--- /dev/null	(date 1610971251711)
+++ b/service/service_order/src/main/java/com/atguigu/order/mapper/xml/TOrderMapper.xml	(date 1610971251711)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.order.mapper.TOrderMapper">
+
+</mapper>
Index: service/service_oss/src/main/java/com/atguigu/eduoss/service/impl/OSSServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_oss/src/main/java/com/atguigu/eduoss/service/impl/OSSServiceImpl.java b/service/service_oss/src/main/java/com/atguigu/eduoss/service/impl/OSSServiceImpl.java
new file mode 100644
--- /dev/null	(date 1609318475863)
+++ b/service/service_oss/src/main/java/com/atguigu/eduoss/service/impl/OSSServiceImpl.java	(date 1609318475863)
@@ -0,0 +1,50 @@
+package com.atguigu.eduoss.service.impl;
+
+import com.aliyun.oss.OSS;
+import com.aliyun.oss.OSSClientBuilder;
+import com.atguigu.eduoss.service.OSSService;
+import com.atguigu.eduoss.utils.ContantConfig;
+import org.joda.time.DateTime;
+import org.springframework.stereotype.Service;
+import org.springframework.web.bind.annotation.CrossOrigin;
+import org.springframework.web.multipart.MultipartFile;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.UUID;
+
+@Service
+public class OSSServiceImpl implements OSSService {
+    @Override
+    public String uploadFile(MultipartFile multipartFile) {
+        // Endpoint以杭州为例，其它Region请按实际情况填写。
+        String endpoint = ContantConfig.ENDPOINT;
+        // 云账号AccessKey有所有API访问权限，建议遵循阿里云安全最佳实践，创建并使用RAM子账号进行API访问或日常运维，请登录 https://ram.console.aliyun.com 创建。
+        String accessKeyId = ContantConfig.ACCESSKEYID;
+        String accessKeySecret = ContantConfig.ACEESEEKEYSECRET;
+        String bucketName= ContantConfig.BUCKETNAME;
+        //将文件添加uuid保证唯一性
+        String fileName = UUID.randomUUID().toString() + multipartFile.getOriginalFilename() ;
+        //可以使用工具类将文件进行分类
+        DateTime dateTime = new DateTime();
+
+        fileName =  dateTime.toString("yyyy/MM/dd")+ fileName;
+
+        // 创建OSSClient实例。
+        OSS ossClient = new OSSClientBuilder().build(endpoint, accessKeyId, accessKeySecret);
+
+        // 上传文件流。
+        InputStream inputStream = null;
+        try {
+            inputStream = multipartFile.getInputStream();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        ossClient.putObject(bucketName, fileName, inputStream);
+
+        // 关闭OSSClient。
+        ossClient.shutdown();
+        return "https://"+bucketName+"."+endpoint+"/"+fileName;
+
+    }
+}
Index: service/service_vod/src/main/java/com/atguigu/Vod/Service/impl/VodServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_vod/src/main/java/com/atguigu/Vod/Service/impl/VodServiceImpl.java b/service/service_vod/src/main/java/com/atguigu/Vod/Service/impl/VodServiceImpl.java
new file mode 100644
--- /dev/null	(date 1610713115782)
+++ b/service/service_vod/src/main/java/com/atguigu/Vod/Service/impl/VodServiceImpl.java	(date 1610713115782)
@@ -0,0 +1,108 @@
+package com.atguigu.Vod.Service.impl;
+
+import com.aliyun.vod.upload.impl.UploadVideoImpl;
+import com.aliyun.vod.upload.req.UploadStreamRequest;
+import com.aliyun.vod.upload.resp.UploadStreamResponse;
+import com.aliyuncs.DefaultAcsClient;
+import com.aliyuncs.exceptions.ClientException;
+import com.aliyuncs.vod.model.v20170321.DeleteVideoRequest;
+import com.aliyuncs.vod.model.v20170321.GetVideoPlayAuthRequest;
+import com.aliyuncs.vod.model.v20170321.GetVideoPlayAuthResponse;
+import com.atguigu.Vod.Service.VodService;
+import com.atguigu.Vod.Utils.ConstantUtils;
+import com.atguigu.Vod.Utils.InitAliyun;
+import org.apache.poi.util.StringUtil;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.web.multipart.MultipartFile;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.List;
+
+@Service
+public class VodServiceImpl implements VodService {
+
+
+    @Override
+    public String uploadVod(MultipartFile file) {
+
+
+        String fileName = file.getOriginalFilename();
+        String title = fileName.substring(0,fileName.lastIndexOf("."));
+
+        InputStream inputStream = null;
+        try {
+            inputStream = file.getInputStream();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        String VodId = "";
+        UploadStreamRequest request = new UploadStreamRequest(ConstantUtils.ID,ConstantUtils.Key, title, fileName, inputStream);
+        UploadVideoImpl uploader = new UploadVideoImpl();
+        UploadStreamResponse response = uploader.uploadStream(request);
+        System.out.print("RequestId=" + response.getRequestId() + "\n");  //请求视频点播服务的请求ID
+        if (response.isSuccess()) {
+            System.out.print("VideoId=" + response.getVideoId() + "\n");
+            VodId = response.getVideoId();
+        } else { //如果设置回调URL无效，不影响视频上传，可以返回VideoId同时会返回错误码。其他情况上传失败时，VideoId为空，此时需要根据返回错误码分析具体错误原因
+            System.out.print("VideoId=" + response.getVideoId() + "\n");
+            System.out.print("ErrorCode=" + response.getCode() + "\n");
+            System.out.print("ErrorMessage=" + response.getMessage() + "\n");
+        }
+        return VodId;
+    }
+
+    @Override
+    public void delete(String id) {
+        //删除视频服务
+        //初始化客户端
+        DefaultAcsClient defaultAcsClient = InitAliyun.initVodClient(ConstantUtils.ID, ConstantUtils.Key);
+
+        //创建删除request
+        DeleteVideoRequest request = new DeleteVideoRequest();
+        request.setVideoIds(id);
+
+        //执行操作
+        try {
+            defaultAcsClient.getAcsResponse(request);
+        } catch (ClientException e) {
+            e.printStackTrace();
+        }
+    }
+
+    //删除多个视频
+    @Override
+    public void deleteIds(List id) {
+        //将list集合进行转化  这样会将 list集合遍历输出 成  元素,元素,元素 的字符串 符合request删除多个视频id的格式
+        String ids = StringUtil.join(id.toArray(), ",");
+
+        DefaultAcsClient defaultAcsClient = InitAliyun.initVodClient(ConstantUtils.ID, ConstantUtils.Key);
+        //执行操作
+        try {
+            //创建删除request
+            DeleteVideoRequest request = new DeleteVideoRequest();
+            //执行操作
+            request.setVideoIds(ids);
+
+            defaultAcsClient.getAcsResponse(request);
+        } catch (ClientException e) {
+            e.printStackTrace();
+        }
+
+    }
+
+    @Override
+    public String getPlayAuth(String id) throws ClientException {
+        //初始化客户端
+        DefaultAcsClient defaultAcsClient = InitAliyun.initVodClient(ConstantUtils.ID, ConstantUtils.Key);
+        //获取得到播放凭证的对象
+        GetVideoPlayAuthRequest request = new GetVideoPlayAuthRequest();
+        request.setVideoId(id);
+
+        GetVideoPlayAuthResponse acsResponse = defaultAcsClient.getAcsResponse(request);
+
+        String playAuth = acsResponse.getPlayAuth();
+        return playAuth;
+    }
+}
Index: service/service_ucenter/src/main/java/com/atguigu/ucenter/entity/VO/RegisterVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_ucenter/src/main/java/com/atguigu/ucenter/entity/VO/RegisterVO.java b/service/service_ucenter/src/main/java/com/atguigu/ucenter/entity/VO/RegisterVO.java
new file mode 100644
--- /dev/null	(date 1610461452320)
+++ b/service/service_ucenter/src/main/java/com/atguigu/ucenter/entity/VO/RegisterVO.java	(date 1610461452320)
@@ -0,0 +1,14 @@
+package com.atguigu.ucenter.entity.VO;
+
+import lombok.Data;
+
+@Data
+public class RegisterVO {
+    private String nickName;
+
+    private String phone;
+
+    private String password;
+
+    private String code;
+}
Index: service/service_ucenter/src/main/java/com/atguigu/ucenter/mapper/xml/MemberMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_ucenter/src/main/java/com/atguigu/ucenter/mapper/xml/MemberMapper.xml b/service/service_ucenter/src/main/java/com/atguigu/ucenter/mapper/xml/MemberMapper.xml
new file mode 100644
--- /dev/null	(date 1611050401192)
+++ b/service/service_ucenter/src/main/java/com/atguigu/ucenter/mapper/xml/MemberMapper.xml	(date 1611050401192)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.ucenter.mapper.MemberMapper">
+    <select id="geStaInfo" resultType="int">
+        SELECT COUNT(*) FROM ucenter_member um WHERE DATE(um.gmt_create) = #{day}
+    </select>
+
+</mapper>
Index: service/service_order/src/main/java/com/atguigu/order/service/impl/TPayLogServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/main/java/com/atguigu/order/service/impl/TPayLogServiceImpl.java b/service/service_order/src/main/java/com/atguigu/order/service/impl/TPayLogServiceImpl.java
new file mode 100644
--- /dev/null	(date 1611042689520)
+++ b/service/service_order/src/main/java/com/atguigu/order/service/impl/TPayLogServiceImpl.java	(date 1611042689520)
@@ -0,0 +1,132 @@
+package com.atguigu.order.service.impl;
+
+import com.alibaba.fastjson.JSONObject;
+import com.atguigu.order.entity.TOrder;
+import com.atguigu.order.entity.TPayLog;
+import com.atguigu.order.mapper.TPayLogMapper;
+import com.atguigu.order.service.TOrderService;
+import com.atguigu.order.service.TPayLogService;
+import com.atguigu.order.utils.HttpClient;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import com.github.wxpay.sdk.WXPayUtil;
+import org.aspectj.weaver.ast.Var;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import java.math.BigDecimal;
+import java.util.Date;
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * <p>
+ * 支付日志表 服务实现类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-18
+ */
+@Service
+public class TPayLogServiceImpl extends ServiceImpl<TPayLogMapper, TPayLog> implements TPayLogService {
+
+
+    @Autowired
+    private TOrderService tOrderService;
+    //根据订单号生成支付二维码
+    @Override
+    public Map createPay(String id) {
+        QueryWrapper<TOrder> wrapper = new QueryWrapper<>();
+        wrapper.eq("order_no",id);
+        TOrder order = tOrderService.getOne(wrapper);
+        //将生成二维码的参数设置进map中
+        Map m = new HashMap();
+
+        try {
+            //1、设置支付参数
+            m.put("appid", "wx74862e0dfcf69954");
+            m.put("mch_id", "1558950191");
+            m.put("nonce_str", WXPayUtil.generateNonceStr());
+            m.put("body", order.getCourseTitle());
+            m.put("out_trade_no", id);
+            m.put("total_fee", order.getTotalFee().multiply(new BigDecimal("100")).longValue()+"");
+            m.put("spbill_create_ip", "127.0.0.1");
+            m.put("notify_url", "http://guli.shop/api/order/weixinPay/weixinNotify");
+            m.put("trade_type", "NATIVE");
+            //2、HTTPClient来根据URL访问第三方接口并且传递参数
+            HttpClient client = new HttpClient("https://api.mch.weixin.qq.com/pay/unifiedorder");
+              //client设置参数
+            client.setXmlParam(WXPayUtil.generateSignedXml(m, "T6m9iK73b0kn9g5v426MKfHQH7X8rKwb"));
+            client.setHttps(true);
+            client.post();
+             //3、返回第三方的数据
+            String xml = client.getContent();
+            Map<String, String> resultMap = WXPayUtil.xmlToMap(xml);
+             //4、封装返回结果集
+            Map map = new HashMap<>();
+            map.put("out_trade_no", id);
+            map.put("course_id", order.getCourseId());
+            map.put("total_fee", order.getTotalFee());
+            map.put("result_code", resultMap.get("result_code"));
+            map.put("code_url", resultMap.get("code_url"));
+            //微信支付二维码2小时过期，可采取2小时未支付取消订单
+            //redisTemplate.opsForValue().set(orderNo, map, 120, TimeUnit.MINUTES);
+            return map;
+        }catch (Exception e){
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    @Override
+    public Map getPayLog(String id) {
+
+        Map m = new HashMap<>();
+        m.put("appid", "wx74862e0dfcf69954");
+        m.put("mch_id", "1558950191");
+        m.put("out_trade_no", id);
+        m.put("nonce_str", WXPayUtil.generateNonceStr());
+
+        //httpclien客户端发送请求 查询是否付款  微信接口查询必需使用xml格式 ，所以这里将map格式转换成xml格式
+        HttpClient httpClient = new HttpClient("https://api.mch.weixin.qq.com/pay/orderquery");
+        httpClient.setHttps(true);
+        try {
+            httpClient.setXmlParam(WXPayUtil.generateSignedXml(m,"T6m9iK73b0kn9g5v426MKfHQH7X8rKwb"));
+            httpClient.post();
+            //获取查询后内容 ，将数据进行封装返回
+            //返回回来的是xml格式，我们需要将它转换成map格式
+            String xml = httpClient.getContent();
+            System.out.println(xml);
+            Map<String, String> resultMap = WXPayUtil.xmlToMap(xml);
+            return resultMap;
+        } catch (Exception e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    @Override
+    public void updatePayLog(Map map) {
+        //根据订单号查询交易状态
+        QueryWrapper<TOrder> wrapper = new QueryWrapper<>();
+        wrapper.eq("order_no",map.get("out_trade_no"));
+        TOrder order = tOrderService.getOne(wrapper);
+        System.out.println("===============order"+order);
+        if(order.getStatus().intValue()==1){return;}
+
+        order.setStatus(1);
+        tOrderService.updateById(order);
+
+        //向订单表中插入数据
+        TPayLog payLog = new TPayLog();
+        payLog.setOrderNo(order.getOrderNo());//支付订单号
+        payLog.setPayTime(new Date());
+        payLog.setPayType(1);//支付类型
+        payLog.setTotalFee(order.getTotalFee());//总金额(分)
+        payLog.setTradeState((String) map.get("trade_state"));//支付状态
+        payLog.setTransactionId((String)map.get("transaction_id"));
+        payLog.setAttr(JSONObject.toJSONString(map));
+        baseMapper.insert(payLog);//插入到支付日志表
+    }
+
+}
Index: service/service_order/src/main/java/com/atguigu/order/service/impl/TOrderServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/main/java/com/atguigu/order/service/impl/TOrderServiceImpl.java b/service/service_order/src/main/java/com/atguigu/order/service/impl/TOrderServiceImpl.java
new file mode 100644
--- /dev/null	(date 1611042461541)
+++ b/service/service_order/src/main/java/com/atguigu/order/service/impl/TOrderServiceImpl.java	(date 1611042461541)
@@ -0,0 +1,72 @@
+package com.atguigu.order.service.impl;
+
+import com.atguigu.Result.JwtUtils;
+import com.atguigu.Result.webVo.CoursePublishVoOrder;
+import com.atguigu.Result.webVo.Memberorder;
+import com.atguigu.order.entity.TOrder;
+import com.atguigu.order.mapper.TOrderMapper;
+import com.atguigu.order.service.TOrderService;
+import com.atguigu.order.utils.OrderNoUtil;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import javax.servlet.http.HttpServletRequest;
+import java.util.UUID;
+
+/**
+ * <p>
+ * 订单 服务实现类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-18
+ */
+@Service
+public class TOrderServiceImpl extends ServiceImpl<TOrderMapper, TOrder> implements TOrderService {
+    @Autowired
+    private com.atguigu.order.cliet.courseClient courseClient;
+
+    @Autowired
+    private com.atguigu.order.cliet.memberClient memberClient;
+
+    @Override
+    public String createrOrderNo(String id, HttpServletRequest request) {
+        //通过课程id创建订单号，在创建订单号的同时，将会员信息和课程信息存入订单表中
+        CoursePublishVoOrder courseInfoOrder = courseClient.getCourseInfoOrder(id);
+        //通过request中的 token 获取用户id信息
+        String token = JwtUtils.getMemberIdByJwtToken(request);
+        System.out.println(token);
+        Memberorder memberorder = memberClient.userInfovo(token);
+
+        //将用户信息存入表中 并生成唯一的uuid返回
+        TOrder tOrder = new TOrder();
+        tOrder.setOrderNo(OrderNoUtil.getOrderNo());
+        tOrder.setCourseCover(courseInfoOrder.getCover());
+        tOrder.setCourseTitle(courseInfoOrder.getTitle());
+        tOrder.setMemberId(memberorder.getId());
+        tOrder.setCourseId(id);
+        tOrder.setTotalFee(courseInfoOrder.getPrice());
+        tOrder.setTeacherName(courseInfoOrder.getTeacherName());
+        tOrder.setPayType(1);
+        tOrder.setNickname(memberorder.getNickname());
+        tOrder.setMobile(memberorder.getMobile());
+        tOrder.setIsDeleted(0);
+        tOrder.setStatus(0);
+        System.out.println(tOrder);
+        baseMapper.insert(tOrder);
+
+
+        return tOrder.getOrderNo();
+    }
+
+    @Override
+    public TOrder getByCourseId(String id) {
+        //根据订单id 查询 订单信息
+        QueryWrapper<TOrder> queryWrapper = new QueryWrapper<>();
+        queryWrapper.eq("order_no",id);
+        TOrder tOrder = baseMapper.selectOne(queryWrapper);
+        return tOrder;
+    }
+}
Index: service/service_statistics/src/main/java/com/atguigu/statistics/service/impl/DailyServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_statistics/src/main/java/com/atguigu/statistics/service/impl/DailyServiceImpl.java b/service/service_statistics/src/main/java/com/atguigu/statistics/service/impl/DailyServiceImpl.java
new file mode 100644
--- /dev/null	(date 1611145280261)
+++ b/service/service_statistics/src/main/java/com/atguigu/statistics/service/impl/DailyServiceImpl.java	(date 1611145280261)
@@ -0,0 +1,96 @@
+package com.atguigu.statistics.service.impl;
+
+import com.atguigu.Result.R;
+import com.atguigu.statistics.client.memberClient;
+import com.atguigu.statistics.entity.Daily;
+import com.atguigu.statistics.mapper.DailyMapper;
+import com.atguigu.statistics.service.DailyService;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+/**
+ * <p>
+ * 网站统计日数据 服务实现类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-19
+ */
+@Service
+public class DailyServiceImpl extends ServiceImpl<DailyMapper, Daily> implements DailyService {
+    @Autowired
+    private memberClient client;
+
+    @Override
+    public void updateStaInfo(String day) {
+        //判断表中是否有当天数据，如果有则将数据删除重新添加
+        QueryWrapper<Daily> queryWrapper = new QueryWrapper<>();
+        queryWrapper.eq("date_calculated",day);
+        Integer integer = baseMapper.selectCount(queryWrapper);
+        if(integer>0){
+            baseMapper.delete(queryWrapper);
+        }
+        //查询当天注册人数的数据
+        R staInfo = client.getStaInfo(day);
+        Integer count = (Integer) staInfo.getData().get("count");
+        // 将查询出来的数据封装进我们的统计表内
+        Daily daily = new Daily();
+        daily.setRegisterNum(count);
+        daily.setCourseNum((int) (Math.random()*100));
+        daily.setVideoViewNum(10);
+        daily.setDateCalculated(day);
+        daily.setLoginNum(1);
+        baseMapper.insert(daily);
+    }
+
+    //返回echarts数据模型接口
+    @Override
+    public Map getDiaryInfo(String type, String start, String end) {
+        //根据选择日期 和 查询条件进行查询
+        QueryWrapper<Daily> queryWrapper = new QueryWrapper<>();
+        queryWrapper.select(type,"date_calculated");
+        queryWrapper.between("date_calculated",start,end);
+
+
+        List<Daily> dailies = baseMapper.selectList(queryWrapper);
+        //将数据进行遍历封装
+        List<String> diaryList = new ArrayList<>();
+        List<Integer> numberList = new ArrayList<>();
+
+        for (int i = 0; i < dailies.size(); i++) {
+            Daily daily = dailies.get(i);
+            diaryList.add(daily.getDateCalculated());
+            switch (type){
+                case "login_num":
+                    numberList.add(daily.getLoginNum());
+                    break;
+                case "register_num":
+                    numberList.add(daily.getRegisterNum());
+                    break;
+                case "video_view_num":
+                    numberList.add(daily.getVideoViewNum());
+                    break;
+                case "course_num":
+                    numberList.add(daily.getCourseNum());
+                    break;
+                default:
+                    break;
+
+            }
+        }
+        Map<String,Object> map = new HashMap();
+
+        map.put("diraylist",diaryList);
+        map.put("numberList",numberList);
+        System.out.println(map);
+
+        return map;
+    }
+}
Index: service/service_statistics/target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_statistics/target/classes/application.properties b/service/service_statistics/target/classes/application.properties
new file mode 100644
--- /dev/null	(date 1611051348310)
+++ b/service/service_statistics/target/classes/application.properties	(date 1611051348310)
@@ -0,0 +1,53 @@
+server.port=8008
+
+spring.application.name=service-statistics
+#
+## \u73AF\u5883\u8BBE\u7F6E\uFF1Adev\u3001test\u3001prod
+spring.profiles.active=dev
+#
+## mysql\u6570\u636E\u5E93\u8FDE\u63A5
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+spring.datasource.url=jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8
+spring.datasource.username=root
+spring.datasource.password=Jinx1214
+#
+##\u8FD4\u56DEjson\u7684\u5168\u5C40\u65F6\u95F4\u683C\u5F0F
+spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
+spring.jackson.time-zone=GMT+8
+#
+##\u914D\u7F6Emapper xml\u6587\u4EF6\u7684\u8DEF\u5F84
+mybatis-plus.mapper-locations=classpath:com/atguigu/statistics/mapper/xml/*.xml
+#
+## nacos\u670D\u52A1\u5730\u5740
+
+spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
+
+#
+##\u5F00\u542F\u7194\u65AD\u673A\u5236
+#feign.hystrix.enabled=true
+## \u8BBE\u7F6Ehystrix\u8D85\u65F6\u65F6\u95F4\uFF0C\u9ED8\u8BA41000ms
+hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=16000
+#
+##redis
+spring.redis.host=127.0.0.1
+spring.redis.port=6379
+spring.redis.database= 0
+spring.redis.timeout=1800000
+#
+spring.redis.lettuce.pool.max-active=20
+spring.redis.lettuce.pool.max-wait=-1
+##\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4(\u8D1F\u6570\u8868\u793A\u6CA1\u9650\u5236)
+spring.redis.lettuce.pool.max-idle=5
+spring.redis.lettuce.pool.min-idle=0
+#
+## \u8BBE\u7F6E\u65E5\u5FD7\u7EA7\u522B
+##logging.level.root=INFO
+#
+
+#微信扫码登陆
+
+wx.open.app_id=wxed9954c01bb89b47
+wx.open.app_secret=a7482517235173ddb4083788de60b90e
+wx.open.redirect_url=http://guli.shop/api/ucenter/wx/callback
+##mybatis\u65E5\u5FD7
+mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
\ No newline at end of file
Index: service/service_ucenter/src/main/java/com/atguigu/ucenter/service/impl/MemberServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_ucenter/src/main/java/com/atguigu/ucenter/service/impl/MemberServiceImpl.java b/service/service_ucenter/src/main/java/com/atguigu/ucenter/service/impl/MemberServiceImpl.java
new file mode 100644
--- /dev/null	(date 1611050299363)
+++ b/service/service_ucenter/src/main/java/com/atguigu/ucenter/service/impl/MemberServiceImpl.java	(date 1611050299363)
@@ -0,0 +1,96 @@
+package com.atguigu.ucenter.service.impl;
+
+import com.atguigu.Result.JwtUtils;
+import com.atguigu.Result.MD5;
+import com.atguigu.ucenter.entity.Member;
+import com.atguigu.ucenter.entity.VO.RegisterVO;
+import com.atguigu.ucenter.mapper.MemberMapper;
+import com.atguigu.ucenter.service.MemberService;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.stereotype.Service;
+import org.springframework.util.StringUtils;
+
+/**
+ * <p>
+ * 会员表 服务实现类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-12
+ */
+@Service
+public class MemberServiceImpl extends ServiceImpl<MemberMapper, Member> implements MemberService {
+
+    @Autowired
+    private RedisTemplate<String,String> redisTemplate;
+    //注册接口
+    @Override
+    public void register(RegisterVO registerVO) {
+        String code = registerVO.getCode();
+        String password = registerVO.getPassword();
+        String nickName = registerVO.getNickName();
+        String phone = registerVO.getPhone();
+
+        String redisCode = redisTemplate.opsForValue().get(phone);
+
+        if(!code.equals(redisCode)){
+            throw  new RuntimeException();
+        }
+        QueryWrapper<Member> memberQueryWrapper= new QueryWrapper<>();
+        memberQueryWrapper.select("mobile");
+        Integer integer = baseMapper.selectCount(memberQueryWrapper);
+        if(integer>0){
+            throw  new RuntimeException();
+        }
+
+        Member member = new Member();
+        member.setPassword(MD5.encrypt(password));
+        member.setNickname(nickName);
+        member.setMobile(phone);
+        member.setSex(1);
+        member.setAge(0);
+        member.setAvatar("https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/11/07/91871e25-fd83-4af6-845f-ea8d471d825d.png");
+        baseMapper.insert(member);
+    }
+
+    @Override
+    public String login(Member member) {
+        //获取传递过来的参数
+        String mobile = member.getMobile();
+        String password = member.getPassword();
+        System.out.println("password"+password);
+        if(StringUtils.isEmpty(member)|| StringUtils.isEmpty(password)){
+            throw new RuntimeException();
+        }
+        //进行对比
+        QueryWrapper<Member> memberQueryWrapper = new QueryWrapper<>();
+        memberQueryWrapper.eq("mobile",mobile);
+        Member member1 = baseMapper.selectOne(memberQueryWrapper);
+        System.out.println(member1);
+
+        if(!member1.getPassword().equals(MD5.encrypt(password))){
+            throw new RuntimeException();
+        }
+
+        String jwtToken = JwtUtils.getJwtToken(member1.getId(), member1.getNickname());
+
+        return jwtToken;
+    }
+
+    @Override
+    public Member getUserByOpenid(String openid) {
+        QueryWrapper<Member> memberQueryWrapper = new QueryWrapper<>();
+        memberQueryWrapper.eq("openid",openid);
+        Member member = baseMapper.selectOne(memberQueryWrapper);
+        return member;
+    }
+
+    @Override
+    public Integer getStaInfo(String day) {
+        Integer count = baseMapper.geStaInfo(day);
+        return count;
+    }
+}
Index: service/service_statistics/src/main/java/com/atguigu/statistics/mapper/xml/DailyMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_statistics/src/main/java/com/atguigu/statistics/mapper/xml/DailyMapper.xml b/service/service_statistics/src/main/java/com/atguigu/statistics/mapper/xml/DailyMapper.xml
new file mode 100644
--- /dev/null	(date 1611050464109)
+++ b/service/service_statistics/src/main/java/com/atguigu/statistics/mapper/xml/DailyMapper.xml	(date 1611050464109)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.statistics.mapper.DailyMapper">
+
+</mapper>
Index: service/service_acl/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/resources/application.properties b/service/service_acl/src/main/resources/application.properties
new file mode 100644
--- /dev/null	(date 1611317610213)
+++ b/service/service_acl/src/main/resources/application.properties	(date 1611317610213)
@@ -0,0 +1,35 @@
+# ����˿�
+server.port=8009
+# ������
+spring.application.name=service-acl
+
+# mysql���ݿ�����
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+spring.datasource.url=jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8
+spring.datasource.username=root
+spring.datasource.password=Jinx1214
+
+#����json��ȫ��ʱ���ʽ
+spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
+spring.jackson.time-zone=GMT+8
+
+spring.redis.host=localhost
+spring.redis.port=6379
+spring.redis.database= 0
+spring.redis.timeout=1800000
+
+spring.redis.lettuce.pool.max-active=20
+spring.redis.lettuce.pool.max-wait=-1
+#��������ȴ�ʱ��(������ʾû����)
+spring.redis.lettuce.pool.max-idle=5
+spring.redis.lettuce.pool.min-idle=0
+#��С����
+
+#����mapper xml�ļ���·��
+mybatis-plus.mapper-locations=classpath:com/atguigu/acl/mapper/xml/*.xml
+
+# nacos�����ַ
+spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
+
+#mybatis��־
+mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
\ No newline at end of file
Index: service/service_crm/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_crm/src/main/resources/application.properties b/service/service_crm/src/main/resources/application.properties
new file mode 100644
--- /dev/null	(date 1610104725921)
+++ b/service/service_crm/src/main/resources/application.properties	(date 1610104725921)
@@ -0,0 +1,38 @@
+# 服务端口
+server.port=8004
+# 服务名
+spring.application.name=service-cms
+# mysql数据库连接
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+
+spring.datasource.url=jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8
+
+spring.datasource.username=root
+
+spring.datasource.password=Jinx1214
+
+#返回json的全局时间格式
+
+spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
+
+spring.jackson.time-zone=GMT+8
+
+#配置mapper xml文件的路径
+
+mybatis-plus.mapper-locations=classpath:com/atguigu/cmsservice/mapper/xml/*.xml
+
+
+#redis配置
+
+spring.redis.host=127.0.0.1
+spring.redis.port=6379
+spring.redis.database= 0
+spring.redis.timeout=1800000
+spring.redis.lettuce.pool.max-active=20
+spring.redis.lettuce.pool.max-wait=-1
+#最大阻塞等待时间(负数表示没限制)
+spring.redis.lettuce.pool.max-idle=5
+spring.redis.lettuce.pool.min-idle=0
+#mybatis日志
+
+mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
\ No newline at end of file
Index: service/service_edu/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/resources/application.properties b/service/service_edu/src/main/resources/application.properties
new file mode 100644
--- /dev/null	(date 1610104824226)
+++ b/service/service_edu/src/main/resources/application.properties	(date 1610104824226)
@@ -0,0 +1,47 @@
+server.port=8001
+
+spring.application.name=service-edu
+#
+## \u73AF\u5883\u8BBE\u7F6E\uFF1Adev\u3001test\u3001prod
+spring.profiles.active=dev
+#
+## mysql\u6570\u636E\u5E93\u8FDE\u63A5
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+spring.datasource.url=jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8
+spring.datasource.username=root
+spring.datasource.password=Jinx1214
+#
+##\u8FD4\u56DEjson\u7684\u5168\u5C40\u65F6\u95F4\u683C\u5F0F
+spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
+spring.jackson.time-zone=GMT+8
+#
+##\u914D\u7F6Emapper xml\u6587\u4EF6\u7684\u8DEF\u5F84
+mybatis-plus.mapper-locations=classpath:com/atguigu/service/mapper/xml/*.xml
+#
+## nacos\u670D\u52A1\u5730\u5740
+
+spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
+
+#
+##\u5F00\u542F\u7194\u65AD\u673A\u5236
+feign.hystrix.enabled=true
+## \u8BBE\u7F6Ehystrix\u8D85\u65F6\u65F6\u95F4\uFF0C\u9ED8\u8BA41000ms
+hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=16000
+#
+##redis
+spring.redis.host=127.0.0.1
+spring.redis.port=6379
+spring.redis.database= 0
+spring.redis.timeout=1800000
+#
+spring.redis.lettuce.pool.max-active=20
+spring.redis.lettuce.pool.max-wait=-1
+##\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4(\u8D1F\u6570\u8868\u793A\u6CA1\u9650\u5236)
+spring.redis.lettuce.pool.max-idle=5
+spring.redis.lettuce.pool.min-idle=0
+#
+## \u8BBE\u7F6E\u65E5\u5FD7\u7EA7\u522B
+##logging.level.root=INFO
+#
+##mybatis\u65E5\u5FD7
+mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
\ No newline at end of file
Index: service/service_msm/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_msm/src/main/resources/application.properties b/service/service_msm/src/main/resources/application.properties
new file mode 100644
--- /dev/null	(date 1610459999438)
+++ b/service/service_msm/src/main/resources/application.properties	(date 1610459999438)
@@ -0,0 +1,47 @@
+server.port=8005
+
+spring.application.name=service-msm
+#
+## \u73AF\u5883\u8BBE\u7F6E\uFF1Adev\u3001test\u3001prod
+spring.profiles.active=dev
+#
+## mysql\u6570\u636E\u5E93\u8FDE\u63A5
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+spring.datasource.url=jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8
+spring.datasource.username=root
+spring.datasource.password=Jinx1214
+#
+##\u8FD4\u56DEjson\u7684\u5168\u5C40\u65F6\u95F4\u683C\u5F0F
+spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
+spring.jackson.time-zone=GMT+8
+#
+##\u914D\u7F6Emapper xml\u6587\u4EF6\u7684\u8DEF\u5F84
+mybatis-plus.mapper-locations=classpath:com/atguigu/msm/mapper/xml/*.xml
+#
+## nacos\u670D\u52A1\u5730\u5740
+
+spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
+
+#
+##\u5F00\u542F\u7194\u65AD\u673A\u5236
+feign.hystrix.enabled=true
+## \u8BBE\u7F6Ehystrix\u8D85\u65F6\u65F6\u95F4\uFF0C\u9ED8\u8BA41000ms
+hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=16000
+#
+##redis
+spring.redis.host=127.0.0.1
+spring.redis.port=6379
+spring.redis.database= 0
+spring.redis.timeout=1800000
+#
+spring.redis.lettuce.pool.max-active=20
+spring.redis.lettuce.pool.max-wait=-1
+##\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4(\u8D1F\u6570\u8868\u793A\u6CA1\u9650\u5236)
+spring.redis.lettuce.pool.max-idle=5
+spring.redis.lettuce.pool.min-idle=0
+#
+## \u8BBE\u7F6E\u65E5\u5FD7\u7EA7\u522B
+##logging.level.root=INFO
+#
+##mybatis\u65E5\u5FD7
+mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
\ No newline at end of file
Index: service/service_oss/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_oss/src/main/resources/application.properties b/service/service_oss/src/main/resources/application.properties
new file mode 100644
--- /dev/null	(date 1609247447854)
+++ b/service/service_oss/src/main/resources/application.properties	(date 1609247447854)
@@ -0,0 +1,13 @@
+server.port=8002
+
+spring.application.name=server-edu-oss
+
+
+#阿里云oss服务
+#OSS连接路径
+endpoint = oss-cn-hangzhou.aliyuncs.com
+#已经在控制台创建的bucket
+bucketName = edu-guli-1214
+#相应的id和key值，请填写你具体的值，这里不方便展示我自己的。
+accessKeyId =LTAI4GBMLqXNwtnWLVW9T3XZ
+accessKeySecret =mVvRcSGqKmwemGLV7phuh56nmZd8l5
\ No newline at end of file
Index: service/service_vod/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_vod/src/main/resources/application.properties b/service/service_vod/src/main/resources/application.properties
new file mode 100644
--- /dev/null	(date 1609932265806)
+++ b/service/service_vod/src/main/resources/application.properties	(date 1609932265806)
@@ -0,0 +1,17 @@
+
+server.port=8003
+
+spring.application.name=service-vod
+
+
+spring.profiles.active=dev
+
+
+aliyun.vod.file.keyid=LTAI4GBMLqXNwtnWLVW9T3XZ
+aliyun.vod.file.keysecret=mVvRcSGqKmwemGLV7phuh56nmZd8l5
+
+spring.servlet.multipart.max-file-size=1024MB
+
+spring.servlet.multipart.max-request-size=1024MB
+
+spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
\ No newline at end of file
Index: service/service_order/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/main/resources/application.properties b/service/service_order/src/main/resources/application.properties
new file mode 100644
--- /dev/null	(date 1611047976935)
+++ b/service/service_order/src/main/resources/application.properties	(date 1611047976935)
@@ -0,0 +1,53 @@
+server.port=8007
+
+spring.application.name=service-order
+#
+## \u73AF\u5883\u8BBE\u7F6E\uFF1Adev\u3001test\u3001prod
+spring.profiles.active=dev
+#
+## mysql\u6570\u636E\u5E93\u8FDE\u63A5
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+spring.datasource.url=jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8
+spring.datasource.username=root
+spring.datasource.password=Jinx1214
+#
+##\u8FD4\u56DEjson\u7684\u5168\u5C40\u65F6\u95F4\u683C\u5F0F
+spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
+spring.jackson.time-zone=GMT+8
+#
+##\u914D\u7F6Emapper xml\u6587\u4EF6\u7684\u8DEF\u5F84
+mybatis-plus.mapper-locations=classpath:com/atguigu/order/mapper/xml/*.xml
+#
+## nacos\u670D\u52A1\u5730\u5740
+
+spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
+
+#
+##\u5F00\u542F\u7194\u65AD\u673A\u5236
+#feign.hystrix.enabled=true
+## \u8BBE\u7F6Ehystrix\u8D85\u65F6\u65F6\u95F4\uFF0C\u9ED8\u8BA41000ms
+hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=16000
+#
+##redis
+spring.redis.host=127.0.0.1
+spring.redis.port=6379
+spring.redis.database= 0
+spring.redis.timeout=1800000
+#
+spring.redis.lettuce.pool.max-active=20
+spring.redis.lettuce.pool.max-wait=-1
+##\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4(\u8D1F\u6570\u8868\u793A\u6CA1\u9650\u5236)
+spring.redis.lettuce.pool.max-idle=5
+spring.redis.lettuce.pool.min-idle=0
+#
+## \u8BBE\u7F6E\u65E5\u5FD7\u7EA7\u522B
+##logging.level.root=INFO
+#
+
+#微信扫码登陆
+
+wx.open.app_id=wxed9954c01bb89b47
+wx.open.app_secret=a7482517235173ddb4083788de60b90e
+wx.open.redirect_url=http://guli.shop/api/ucenter/wx/callback
+##mybatis\u65E5\u5FD7
+mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
\ No newline at end of file
Index: service/service_ucenter/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_ucenter/src/main/resources/application.properties b/service/service_ucenter/src/main/resources/application.properties
new file mode 100644
--- /dev/null	(date 1610778197574)
+++ b/service/service_ucenter/src/main/resources/application.properties	(date 1610778197574)
@@ -0,0 +1,53 @@
+server.port=8150
+
+spring.application.name=service-ucenter
+#
+## \u73AF\u5883\u8BBE\u7F6E\uFF1Adev\u3001test\u3001prod
+spring.profiles.active=dev
+#
+## mysql\u6570\u636E\u5E93\u8FDE\u63A5
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+spring.datasource.url=jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8
+spring.datasource.username=root
+spring.datasource.password=Jinx1214
+#
+##\u8FD4\u56DEjson\u7684\u5168\u5C40\u65F6\u95F4\u683C\u5F0F
+spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
+spring.jackson.time-zone=GMT+8
+#
+##\u914D\u7F6Emapper xml\u6587\u4EF6\u7684\u8DEF\u5F84
+mybatis-plus.mapper-locations=classpath:com/atguigu/ucenter/mapper/xml/*.xml
+#
+## nacos\u670D\u52A1\u5730\u5740
+
+spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
+
+#
+##\u5F00\u542F\u7194\u65AD\u673A\u5236
+feign.hystrix.enabled=true
+## \u8BBE\u7F6Ehystrix\u8D85\u65F6\u65F6\u95F4\uFF0C\u9ED8\u8BA41000ms
+hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=16000
+#
+##redis
+spring.redis.host=127.0.0.1
+spring.redis.port=6379
+spring.redis.database= 0
+spring.redis.timeout=1800000
+#
+spring.redis.lettuce.pool.max-active=20
+spring.redis.lettuce.pool.max-wait=-1
+##\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4(\u8D1F\u6570\u8868\u793A\u6CA1\u9650\u5236)
+spring.redis.lettuce.pool.max-idle=5
+spring.redis.lettuce.pool.min-idle=0
+#
+## \u8BBE\u7F6E\u65E5\u5FD7\u7EA7\u522B
+##logging.level.root=INFO
+#
+
+#微信扫码登陆
+
+wx.open.app_id=wxed9954c01bb89b47
+wx.open.app_secret=a7482517235173ddb4083788de60b90e
+wx.open.redirect_url=http://guli.shop/api/ucenter/wx/callback
+##mybatis\u65E5\u5FD7
+mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
\ No newline at end of file
Index: service/service_statistics/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_statistics/src/main/resources/application.properties b/service/service_statistics/src/main/resources/application.properties
new file mode 100644
--- /dev/null	(date 1611051295297)
+++ b/service/service_statistics/src/main/resources/application.properties	(date 1611051295297)
@@ -0,0 +1,53 @@
+server.port=8008
+
+spring.application.name=service-statistics
+#
+## \u73AF\u5883\u8BBE\u7F6E\uFF1Adev\u3001test\u3001prod
+spring.profiles.active=dev
+#
+## mysql\u6570\u636E\u5E93\u8FDE\u63A5
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+spring.datasource.url=jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8
+spring.datasource.username=root
+spring.datasource.password=Jinx1214
+#
+##\u8FD4\u56DEjson\u7684\u5168\u5C40\u65F6\u95F4\u683C\u5F0F
+spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
+spring.jackson.time-zone=GMT+8
+#
+##\u914D\u7F6Emapper xml\u6587\u4EF6\u7684\u8DEF\u5F84
+mybatis-plus.mapper-locations=classpath:com/atguigu/statistics/mapper/xml/*.xml
+#
+## nacos\u670D\u52A1\u5730\u5740
+
+spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
+
+#
+##\u5F00\u542F\u7194\u65AD\u673A\u5236
+#feign.hystrix.enabled=true
+## \u8BBE\u7F6Ehystrix\u8D85\u65F6\u65F6\u95F4\uFF0C\u9ED8\u8BA41000ms
+hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=16000
+#
+##redis
+spring.redis.host=127.0.0.1
+spring.redis.port=6379
+spring.redis.database= 0
+spring.redis.timeout=1800000
+#
+spring.redis.lettuce.pool.max-active=20
+spring.redis.lettuce.pool.max-wait=-1
+##\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4(\u8D1F\u6570\u8868\u793A\u6CA1\u9650\u5236)
+spring.redis.lettuce.pool.max-idle=5
+spring.redis.lettuce.pool.min-idle=0
+#
+## \u8BBE\u7F6E\u65E5\u5FD7\u7EA7\u522B
+##logging.level.root=INFO
+#
+
+#微信扫码登陆
+
+wx.open.app_id=wxed9954c01bb89b47
+wx.open.app_secret=a7482517235173ddb4083788de60b90e
+wx.open.redirect_url=http://guli.shop/api/ucenter/wx/callback
+##mybatis\u65E5\u5FD7
+mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
\ No newline at end of file
Index: service/service_crm/src/test/java/com/CodeGenerator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_crm/src/test/java/com/CodeGenerator.java b/service/service_crm/src/test/java/com/CodeGenerator.java
new file mode 100644
--- /dev/null	(date 1610019618864)
+++ b/service/service_crm/src/test/java/com/CodeGenerator.java	(date 1610019618864)
@@ -0,0 +1,77 @@
+package com;
+
+import com.baomidou.mybatisplus.annotation.DbType;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.generator.AutoGenerator;
+import com.baomidou.mybatisplus.generator.config.DataSourceConfig;
+import com.baomidou.mybatisplus.generator.config.GlobalConfig;
+import com.baomidou.mybatisplus.generator.config.PackageConfig;
+import com.baomidou.mybatisplus.generator.config.StrategyConfig;
+import com.baomidou.mybatisplus.generator.config.rules.DateType;
+import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;
+import org.junit.Test;
+
+/**
+ * @author
+ * @since 2018/12/13
+ */
+public class CodeGenerator {
+
+    @Test
+    public void run() {
+
+        // 1、创建代码生成器
+        AutoGenerator mpg = new AutoGenerator();
+
+        // 2、全局配置
+        GlobalConfig gc = new GlobalConfig();
+        String projectPath = System.getProperty("user.dir");
+        gc.setOutputDir(projectPath + "/src/main/java");
+        gc.setAuthor("testjava");
+        gc.setOpen(false); //生成后是否打开资源管理器
+        gc.setFileOverride(false); //重新生成时文件是否覆盖
+        gc.setServiceName("%sService");	//去掉Service接口的首字母I
+        gc.setIdType(IdType.ID_WORKER); //主键策略
+        gc.setDateType(DateType.ONLY_DATE);//定义生成的实体类中日期类型
+        gc.setSwagger2(true);//开启Swagger2模式
+
+        mpg.setGlobalConfig(gc);
+
+        // 3、数据源配置
+        DataSourceConfig dsc = new DataSourceConfig();
+        dsc.setUrl("jdbc:mysql://localhost:3306/guli");
+        dsc.setDriverName("com.mysql.jdbc.Driver");
+        dsc.setUsername("root");
+        dsc.setPassword("Jinx1214");
+        dsc.setDbType(DbType.MYSQL);
+        mpg.setDataSource(dsc);
+
+        // 4、包配置
+        PackageConfig pc = new PackageConfig();
+        pc.setModuleName("crm"); //模块名
+        pc.setParent("com.atguigu");
+        pc.setController("controller");
+        pc.setEntity("entity");
+        pc.setService("service");
+        pc.setMapper("mapper");
+        mpg.setPackageInfo(pc);
+
+        // 5、策略配置
+        StrategyConfig strategy = new StrategyConfig();
+        strategy.setInclude("crm_banner");
+        strategy.setNaming(NamingStrategy.underline_to_camel);//数据库表映射到实体的命名策略
+        strategy.setTablePrefix(pc.getModuleName() + "_"); //生成实体时去掉表前缀
+
+        strategy.setColumnNaming(NamingStrategy.underline_to_camel);//数据库表字段映射到实体的命名策略
+        strategy.setEntityLombokModel(true); // lombok 模型 @Accessors(chain = true) setter链式操作
+
+        strategy.setRestControllerStyle(true); //restful api风格控制器
+        strategy.setControllerMappingHyphenStyle(true); //url中驼峰转连字符
+
+        mpg.setStrategy(strategy);
+
+
+        // 6、执行
+        mpg.execute();
+    }
+}
Index: service/service_order/src/test/java/demo/CodeGenerator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/test/java/demo/CodeGenerator.java b/service/service_order/src/test/java/demo/CodeGenerator.java
new file mode 100644
--- /dev/null	(date 1610971244392)
+++ b/service/service_order/src/test/java/demo/CodeGenerator.java	(date 1610971244392)
@@ -0,0 +1,77 @@
+package demo;
+
+import com.baomidou.mybatisplus.annotation.DbType;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.generator.AutoGenerator;
+import com.baomidou.mybatisplus.generator.config.DataSourceConfig;
+import com.baomidou.mybatisplus.generator.config.GlobalConfig;
+import com.baomidou.mybatisplus.generator.config.PackageConfig;
+import com.baomidou.mybatisplus.generator.config.StrategyConfig;
+import com.baomidou.mybatisplus.generator.config.rules.DateType;
+import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;
+import org.junit.Test;
+
+/**
+ * @author
+ * @since 2018/12/13
+ */
+public class CodeGenerator {
+
+    @Test
+    public void run() {
+
+        // 1、创建代码生成器
+        AutoGenerator mpg = new AutoGenerator();
+
+        // 2、全局配置
+        GlobalConfig gc = new GlobalConfig();
+        String projectPath = System.getProperty("user.dir");
+        gc.setOutputDir(projectPath + "/src/main/java");
+        gc.setAuthor("testjava");
+        gc.setOpen(false); //生成后是否打开资源管理器
+        gc.setFileOverride(false); //重新生成时文件是否覆盖
+        gc.setServiceName("%sService");	//去掉Service接口的首字母I
+        gc.setIdType(IdType.ID_WORKER); //主键策略
+        gc.setDateType(DateType.ONLY_DATE);//定义生成的实体类中日期类型
+        gc.setSwagger2(true);//开启Swagger2模式
+
+        mpg.setGlobalConfig(gc);
+
+        // 3、数据源配置
+        DataSourceConfig dsc = new DataSourceConfig();
+        dsc.setUrl("jdbc:mysql://localhost:3306/guli");
+        dsc.setDriverName("com.mysql.jdbc.Driver");
+        dsc.setUsername("root");
+        dsc.setPassword("Jinx1214");
+        dsc.setDbType(DbType.MYSQL);
+        mpg.setDataSource(dsc);
+
+        // 4、包配置
+        PackageConfig pc = new PackageConfig();
+        pc.setModuleName("order"); //模块名
+        pc.setParent("com.atguigu");
+        pc.setController("controller");
+        pc.setEntity("entity");
+        pc.setService("service");
+        pc.setMapper("mapper");
+        mpg.setPackageInfo(pc);
+
+        // 5、策略配置
+        StrategyConfig strategy = new StrategyConfig();
+        strategy.setInclude("t_order","t_pay_log");
+        strategy.setNaming(NamingStrategy.underline_to_camel);//数据库表映射到实体的命名策略
+        strategy.setTablePrefix(pc.getModuleName() + "_"); //生成实体时去掉表前缀
+
+        strategy.setColumnNaming(NamingStrategy.underline_to_camel);//数据库表字段映射到实体的命名策略
+        strategy.setEntityLombokModel(true); // lombok 模型 @Accessors(chain = true) setter链式操作
+
+        strategy.setRestControllerStyle(true); //restful api风格控制器
+        strategy.setControllerMappingHyphenStyle(true); //url中驼峰转连字符
+
+        mpg.setStrategy(strategy);
+
+
+        // 6、执行
+        mpg.execute();
+    }
+}
Index: service/service_ucenter/src/test/java/demo/CodeGenerator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_ucenter/src/test/java/demo/CodeGenerator.java b/service/service_ucenter/src/test/java/demo/CodeGenerator.java
new file mode 100644
--- /dev/null	(date 1610461094421)
+++ b/service/service_ucenter/src/test/java/demo/CodeGenerator.java	(date 1610461094421)
@@ -0,0 +1,77 @@
+package demo;
+
+import com.baomidou.mybatisplus.annotation.DbType;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.generator.AutoGenerator;
+import com.baomidou.mybatisplus.generator.config.DataSourceConfig;
+import com.baomidou.mybatisplus.generator.config.GlobalConfig;
+import com.baomidou.mybatisplus.generator.config.PackageConfig;
+import com.baomidou.mybatisplus.generator.config.StrategyConfig;
+import com.baomidou.mybatisplus.generator.config.rules.DateType;
+import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;
+import org.junit.Test;
+
+/**
+ * @author
+ * @since 2018/12/13
+ */
+public class CodeGenerator {
+
+    @Test
+    public void run() {
+
+        // 1、创建代码生成器
+        AutoGenerator mpg = new AutoGenerator();
+
+        // 2、全局配置
+        GlobalConfig gc = new GlobalConfig();
+        String projectPath = System.getProperty("user.dir");
+        gc.setOutputDir(projectPath + "/src/main/java");
+        gc.setAuthor("testjava");
+        gc.setOpen(false); //生成后是否打开资源管理器
+        gc.setFileOverride(false); //重新生成时文件是否覆盖
+        gc.setServiceName("%sService");	//去掉Service接口的首字母I
+        gc.setIdType(IdType.ID_WORKER); //主键策略
+        gc.setDateType(DateType.ONLY_DATE);//定义生成的实体类中日期类型
+        gc.setSwagger2(true);//开启Swagger2模式
+
+        mpg.setGlobalConfig(gc);
+
+        // 3、数据源配置
+        DataSourceConfig dsc = new DataSourceConfig();
+        dsc.setUrl("jdbc:mysql://localhost:3306/guli");
+        dsc.setDriverName("com.mysql.jdbc.Driver");
+        dsc.setUsername("root");
+        dsc.setPassword("Jinx1214");
+        dsc.setDbType(DbType.MYSQL);
+        mpg.setDataSource(dsc);
+
+        // 4、包配置
+        PackageConfig pc = new PackageConfig();
+        pc.setModuleName("ucenter"); //模块名
+        pc.setParent("com.atguigu");
+        pc.setController("controller");
+        pc.setEntity("entity");
+        pc.setService("service");
+        pc.setMapper("mapper");
+        mpg.setPackageInfo(pc);
+
+        // 5、策略配置
+        StrategyConfig strategy = new StrategyConfig();
+        strategy.setInclude("ucenter_member");
+        strategy.setNaming(NamingStrategy.underline_to_camel);//数据库表映射到实体的命名策略
+        strategy.setTablePrefix(pc.getModuleName() + "_"); //生成实体时去掉表前缀
+
+        strategy.setColumnNaming(NamingStrategy.underline_to_camel);//数据库表字段映射到实体的命名策略
+        strategy.setEntityLombokModel(true); // lombok 模型 @Accessors(chain = true) setter链式操作
+
+        strategy.setRestControllerStyle(true); //restful api风格控制器
+        strategy.setControllerMappingHyphenStyle(true); //url中驼峰转连字符
+
+        mpg.setStrategy(strategy);
+
+
+        // 6、执行
+        mpg.execute();
+    }
+}
Index: service/service_statistics/src/test/java/demo/CodeGenerator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_statistics/src/test/java/demo/CodeGenerator.java b/service/service_statistics/src/test/java/demo/CodeGenerator.java
new file mode 100644
--- /dev/null	(date 1611050457944)
+++ b/service/service_statistics/src/test/java/demo/CodeGenerator.java	(date 1611050457944)
@@ -0,0 +1,77 @@
+package demo;
+
+import com.baomidou.mybatisplus.annotation.DbType;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.generator.AutoGenerator;
+import com.baomidou.mybatisplus.generator.config.DataSourceConfig;
+import com.baomidou.mybatisplus.generator.config.GlobalConfig;
+import com.baomidou.mybatisplus.generator.config.PackageConfig;
+import com.baomidou.mybatisplus.generator.config.StrategyConfig;
+import com.baomidou.mybatisplus.generator.config.rules.DateType;
+import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;
+import org.junit.Test;
+
+/**
+ * @author
+ * @since 2018/12/13
+ */
+public class CodeGenerator {
+
+    @Test
+    public void run() {
+
+        // 1、创建代码生成器
+        AutoGenerator mpg = new AutoGenerator();
+
+        // 2、全局配置
+        GlobalConfig gc = new GlobalConfig();
+        String projectPath = System.getProperty("user.dir");
+        gc.setOutputDir(projectPath + "/src/main/java");
+        gc.setAuthor("testjava");
+        gc.setOpen(false); //生成后是否打开资源管理器
+        gc.setFileOverride(false); //重新生成时文件是否覆盖
+        gc.setServiceName("%sService");	//去掉Service接口的首字母I
+        gc.setIdType(IdType.ID_WORKER); //主键策略
+        gc.setDateType(DateType.ONLY_DATE);//定义生成的实体类中日期类型
+        gc.setSwagger2(true);//开启Swagger2模式
+
+        mpg.setGlobalConfig(gc);
+
+        // 3、数据源配置
+        DataSourceConfig dsc = new DataSourceConfig();
+        dsc.setUrl("jdbc:mysql://localhost:3306/guli");
+        dsc.setDriverName("com.mysql.jdbc.Driver");
+        dsc.setUsername("root");
+        dsc.setPassword("Jinx1214");
+        dsc.setDbType(DbType.MYSQL);
+        mpg.setDataSource(dsc);
+
+        // 4、包配置
+        PackageConfig pc = new PackageConfig();
+        pc.setModuleName("statistics"); //模块名
+        pc.setParent("com.atguigu");
+        pc.setController("controller");
+        pc.setEntity("entity");
+        pc.setService("service");
+        pc.setMapper("mapper");
+        mpg.setPackageInfo(pc);
+
+        // 5、策略配置
+        StrategyConfig strategy = new StrategyConfig();
+        strategy.setInclude("statistics_daily");
+        strategy.setNaming(NamingStrategy.underline_to_camel);//数据库表映射到实体的命名策略
+        strategy.setTablePrefix(pc.getModuleName() + "_"); //生成实体时去掉表前缀
+
+        strategy.setColumnNaming(NamingStrategy.underline_to_camel);//数据库表字段映射到实体的命名策略
+        strategy.setEntityLombokModel(true); // lombok 模型 @Accessors(chain = true) setter链式操作
+
+        strategy.setRestControllerStyle(true); //restful api风格控制器
+        strategy.setControllerMappingHyphenStyle(true); //url中驼峰转连字符
+
+        mpg.setStrategy(strategy);
+
+
+        // 6、执行
+        mpg.execute();
+    }
+}
Index: service/service_vod/src/main/java/com/atguigu/VodApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_vod/src/main/java/com/atguigu/VodApplication.java b/service/service_vod/src/main/java/com/atguigu/VodApplication.java
new file mode 100644
--- /dev/null	(date 1609928071570)
+++ b/service/service_vod/src/main/java/com/atguigu/VodApplication.java	(date 1609928071570)
@@ -0,0 +1,21 @@
+package com.atguigu;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+import org.springframework.context.annotation.ComponentScan;
+import org.springframework.stereotype.Component;
+import springfox.documentation.swagger2.annotations.EnableSwagger2;
+
+
+@SpringBootApplication(exclude = DataSourceAutoConfiguration.class)
+@ComponentScan("com.atguigu.Vod")
+@EnableSwagger2
+@EnableDiscoveryClient
+public class VodApplication {
+    public static void main(String[] args) {
+        SpringApplication.run(VodApplication.class,args);
+    }
+}
+
Index: service/service_vod/src/test/java/com/atguigu/Demo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_vod/src/test/java/com/atguigu/Demo.java b/service/service_vod/src/test/java/com/atguigu/Demo.java
new file mode 100644
--- /dev/null	(date 1609852543699)
+++ b/service/service_vod/src/test/java/com/atguigu/Demo.java	(date 1609852543699)
@@ -0,0 +1,6 @@
+package com.atguigu;
+
+public class Demo {
+
+
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/aclApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/aclApplication.java b/service/service_acl/src/main/java/com/atguigu/acl/aclApplication.java
new file mode 100644
--- /dev/null	(date 1611318703038)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/aclApplication.java	(date 1611318703038)
@@ -0,0 +1,20 @@
+package com.atguigu.acl;
+
+import org.mybatis.spring.annotation.MapperScan;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+import org.springframework.context.annotation.ComponentScan;
+import org.springframework.stereotype.Component;
+import springfox.documentation.swagger2.annotations.EnableSwagger2;
+
+@SpringBootApplication
+@EnableDiscoveryClient
+@EnableSwagger2
+@ComponentScan("com.atguigu")
+@MapperScan(basePackages = "com.atguigu.acl.mapper")
+public class aclApplication {
+    public static void main(String[] args) {
+        SpringApplication.run(aclApplication.class,args);
+    }
+}
Index: service/service_acl/src/test/java/com/atgugu/CodeGenertor/CodeGenerator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/test/java/com/atgugu/CodeGenertor/CodeGenerator.java b/service/service_acl/src/test/java/com/atgugu/CodeGenertor/CodeGenerator.java
new file mode 100644
--- /dev/null	(date 1611317119230)
+++ b/service/service_acl/src/test/java/com/atgugu/CodeGenertor/CodeGenerator.java	(date 1611317119230)
@@ -0,0 +1,77 @@
+package com.atgugu.CodeGenertor;
+
+import com.baomidou.mybatisplus.annotation.DbType;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.generator.AutoGenerator;
+import com.baomidou.mybatisplus.generator.config.DataSourceConfig;
+import com.baomidou.mybatisplus.generator.config.GlobalConfig;
+import com.baomidou.mybatisplus.generator.config.PackageConfig;
+import com.baomidou.mybatisplus.generator.config.StrategyConfig;
+import com.baomidou.mybatisplus.generator.config.rules.DateType;
+import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;
+import org.junit.Test;
+
+/**
+ * @author
+ * @since 2018/12/13
+ */
+public class CodeGenerator {
+
+    @Test
+    public void run() {
+
+        // 1、创建代码生成器
+        AutoGenerator mpg = new AutoGenerator();
+
+        // 2、全局配置
+        GlobalConfig gc = new GlobalConfig();
+        String projectPath = System.getProperty("user.dir");
+        gc.setOutputDir(projectPath + "/src/main/java");
+        gc.setAuthor("testjava");
+        gc.setOpen(false); //生成后是否打开资源管理器
+        gc.setFileOverride(false); //重新生成时文件是否覆盖
+        gc.setServiceName("%sService");	//去掉Service接口的首字母I
+        gc.setIdType(IdType.ID_WORKER); //主键策略
+        gc.setDateType(DateType.ONLY_DATE);//定义生成的实体类中日期类型
+        gc.setSwagger2(true);//开启Swagger2模式
+
+        mpg.setGlobalConfig(gc);
+
+        // 3、数据源配置
+        DataSourceConfig dsc = new DataSourceConfig();
+        dsc.setUrl("jdbc:mysql://localhost:3306/guli");
+        dsc.setDriverName("com.mysql.jdbc.Driver");
+        dsc.setUsername("root");
+        dsc.setPassword("Jinx1214");
+        dsc.setDbType(DbType.MYSQL);
+        mpg.setDataSource(dsc);
+
+        // 4、包配置
+        PackageConfig pc = new PackageConfig();
+        pc.setModuleName("acl"); //模块名
+        pc.setParent("com.atguigu");
+        pc.setController("controller");
+        pc.setEntity("entity");
+        pc.setService("service");
+        pc.setMapper("mapper");
+        mpg.setPackageInfo(pc);
+
+        // 5、策略配置
+        StrategyConfig strategy = new StrategyConfig();
+        strategy.setInclude("acl_permission","acl_role","acl_role_permission","acl_user","acl_user_role");
+        strategy.setNaming(NamingStrategy.underline_to_camel);//数据库表映射到实体的命名策略
+        strategy.setTablePrefix(pc.getModuleName() + "_"); //生成实体时去掉表前缀
+
+        strategy.setColumnNaming(NamingStrategy.underline_to_camel);//数据库表字段映射到实体的命名策略
+        strategy.setEntityLombokModel(true); // lombok 模型 @Accessors(chain = true) setter链式操作
+
+        strategy.setRestControllerStyle(true); //restful api风格控制器
+        strategy.setControllerMappingHyphenStyle(true); //url中驼峰转连字符
+
+        mpg.setStrategy(strategy);
+
+
+        // 6、执行
+        mpg.execute();
+    }
+}
Index: service/service_crm/src/main/java/com/atguigu/crm/CrmApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_crm/src/main/java/com/atguigu/crm/CrmApplication.java b/service/service_crm/src/main/java/com/atguigu/crm/CrmApplication.java
new file mode 100644
--- /dev/null	(date 1610019899630)
+++ b/service/service_crm/src/main/java/com/atguigu/crm/CrmApplication.java	(date 1610019899630)
@@ -0,0 +1,16 @@
+package com.atguigu.crm;
+
+import org.mybatis.spring.annotation.MapperScan;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.context.annotation.ComponentScan;
+import springfox.documentation.swagger2.annotations.EnableSwagger2;
+
+@SpringBootApplication
+@ComponentScan({"com.atguigu"}) //指定扫描位置
+@MapperScan("com.atguigu.crm.mapper")
+public class CrmApplication {
+    public static void main(String[] args) {
+        SpringApplication.run(CrmApplication.class,args);
+    }
+}
Index: service/service_edu/src/main/java/com/atguigu/service/EduApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/EduApplication.java b/service/service_edu/src/main/java/com/atguigu/service/EduApplication.java
new file mode 100644
--- /dev/null	(date 1609933506232)
+++ b/service/service_edu/src/main/java/com/atguigu/service/EduApplication.java	(date 1609933506232)
@@ -0,0 +1,22 @@
+package com.atguigu.service;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+import org.springframework.cloud.openfeign.EnableFeignClients;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.context.annotation.ComponentScan;
+import springfox.documentation.swagger2.annotations.EnableSwagger2;
+
+@SpringBootApplication
+@EnableSwagger2
+@ComponentScan("com.atguigu")
+@EnableDiscoveryClient
+@EnableFeignClients
+public class EduApplication {
+    public static void main(String[] args) {
+        SpringApplication.run(EduApplication.class,args);
+
+
+    }
+}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1612179407690)
+++ b/.idea/misc.xml	(date 1612179407690)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="corretto-1.8" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1612179407697)
+++ b/.idea/vcs.xml	(date 1612179407697)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/guli.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/guli.iml b/.idea/guli.iml
new file mode 100644
--- /dev/null	(date 1612179407673)
+++ b/.idea/guli.iml	(date 1612179407673)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1612179407680)
+++ b/.idea/modules.xml	(date 1612179407680)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/guli.iml" filepath="$PROJECT_DIR$/.idea/guli.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: mvnw.cmd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mvnw.cmd b/mvnw.cmd
new file mode 100644
--- /dev/null	(date 1608990947529)
+++ b/mvnw.cmd	(date 1608990947529)
@@ -0,0 +1,182 @@
+@REM ----------------------------------------------------------------------------
+@REM Licensed to the Apache Software Foundation (ASF) under one
+@REM or more contributor license agreements.  See the NOTICE file
+@REM distributed with this work for additional information
+@REM regarding copyright ownership.  The ASF licenses this file
+@REM to you under the Apache License, Version 2.0 (the
+@REM "License"); you may not use this file except in compliance
+@REM with the License.  You may obtain a copy of the License at
+@REM
+@REM    https://www.apache.org/licenses/LICENSE-2.0
+@REM
+@REM Unless required by applicable law or agreed to in writing,
+@REM software distributed under the License is distributed on an
+@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+@REM KIND, either express or implied.  See the License for the
+@REM specific language governing permissions and limitations
+@REM under the License.
+@REM ----------------------------------------------------------------------------
+
+@REM ----------------------------------------------------------------------------
+@REM Maven Start Up Batch script
+@REM
+@REM Required ENV vars:
+@REM JAVA_HOME - location of a JDK home dir
+@REM
+@REM Optional ENV vars
+@REM M2_HOME - location of maven2's installed home dir
+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands
+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending
+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven
+@REM     e.g. to debug Maven itself, use
+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+@REM ----------------------------------------------------------------------------
+
+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'
+@echo off
+@REM set title of command window
+title %0
+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'
+@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%
+
+@REM set %HOME% to equivalent of $HOME
+if "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")
+
+@REM Execute a user defined script before this one
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPre
+@REM check for pre script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_pre.bat" call "%HOME%\mavenrc_pre.bat"
+if exist "%HOME%\mavenrc_pre.cmd" call "%HOME%\mavenrc_pre.cmd"
+:skipRcPre
+
+@setlocal
+
+set ERROR_CODE=0
+
+@REM To isolate internal variables from possible post scripts, we use another setlocal
+@setlocal
+
+@REM ==== START VALIDATION ====
+if not "%JAVA_HOME%" == "" goto OkJHome
+
+echo.
+echo Error: JAVA_HOME not found in your environment. >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+:OkJHome
+if exist "%JAVA_HOME%\bin\java.exe" goto init
+
+echo.
+echo Error: JAVA_HOME is set to an invalid directory. >&2
+echo JAVA_HOME = "%JAVA_HOME%" >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+@REM ==== END VALIDATION ====
+
+:init
+
+@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".
+@REM Fallback to current working directory if not found.
+
+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%
+IF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir
+
+set EXEC_DIR=%CD%
+set WDIR=%EXEC_DIR%
+:findBaseDir
+IF EXIST "%WDIR%"\.mvn goto baseDirFound
+cd ..
+IF "%WDIR%"=="%CD%" goto baseDirNotFound
+set WDIR=%CD%
+goto findBaseDir
+
+:baseDirFound
+set MAVEN_PROJECTBASEDIR=%WDIR%
+cd "%EXEC_DIR%"
+goto endDetectBaseDir
+
+:baseDirNotFound
+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%
+cd "%EXEC_DIR%"
+
+:endDetectBaseDir
+
+IF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig
+
+@setlocal EnableExtensions EnableDelayedExpansion
+for /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a
+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%
+
+:endReadAdditionalConfig
+
+SET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"
+set WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"
+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
+
+FOR /F "tokens=1,2 delims==" %%A IN ("%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties") DO (
+    IF "%%A"=="wrapperUrl" SET DOWNLOAD_URL=%%B
+)
+
+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.
+if exist %WRAPPER_JAR% (
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Found %WRAPPER_JAR%
+    )
+) else (
+    if not "%MVNW_REPOURL%" == "" (
+        SET DOWNLOAD_URL="%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
+    )
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Couldn't find %WRAPPER_JAR%, downloading it ...
+        echo Downloading from: %DOWNLOAD_URL%
+    )
+
+    powershell -Command "&{"^
+		"$webclient = new-object System.Net.WebClient;"^
+		"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {"^
+		"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');"^
+		"}"^
+		"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')"^
+		"}"
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Finished downloading %WRAPPER_JAR%
+    )
+)
+@REM End of extension
+
+@REM Provide a "standardized" way to retrieve the CLI args that will
+@REM work with both Windows and non-Windows executions.
+set MAVEN_CMD_LINE_ARGS=%*
+
+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*
+if ERRORLEVEL 1 goto error
+goto end
+
+:error
+set ERROR_CODE=1
+
+:end
+@endlocal & set ERROR_CODE=%ERROR_CODE%
+
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPost
+@REM check for post script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_post.bat" call "%HOME%\mavenrc_post.bat"
+if exist "%HOME%\mavenrc_post.cmd" call "%HOME%\mavenrc_post.cmd"
+:skipRcPost
+
+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'
+if "%MAVEN_BATCH_PAUSE%" == "on" pause
+
+if "%MAVEN_TERMINATE_CMD%" == "on" exit %ERROR_CODE%
+
+exit /B %ERROR_CODE%
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1612179407766)
+++ b/.idea/.gitignore	(date 1612179407766)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
+# Editor-based HTTP Client requests
+/httpRequests/
Index: mvnw
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mvnw b/mvnw
new file mode 100755
--- /dev/null	(date 1608990947532)
+++ b/mvnw	(date 1608990947532)
@@ -0,0 +1,310 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#    https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ----------------------------------------------------------------------------
+
+# ----------------------------------------------------------------------------
+# Maven Start Up Batch script
+#
+# Required ENV vars:
+# ------------------
+#   JAVA_HOME - location of a JDK home dir
+#
+# Optional ENV vars
+# -----------------
+#   M2_HOME - location of maven2's installed home dir
+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
+#     e.g. to debug Maven itself, use
+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+# ----------------------------------------------------------------------------
+
+if [ -z "$MAVEN_SKIP_RC" ] ; then
+
+  if [ -f /etc/mavenrc ] ; then
+    . /etc/mavenrc
+  fi
+
+  if [ -f "$HOME/.mavenrc" ] ; then
+    . "$HOME/.mavenrc"
+  fi
+
+fi
+
+# OS specific support.  $var _must_ be set to either true or false.
+cygwin=false;
+darwin=false;
+mingw=false
+case "`uname`" in
+  CYGWIN*) cygwin=true ;;
+  MINGW*) mingw=true;;
+  Darwin*) darwin=true
+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home
+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
+    if [ -z "$JAVA_HOME" ]; then
+      if [ -x "/usr/libexec/java_home" ]; then
+        export JAVA_HOME="`/usr/libexec/java_home`"
+      else
+        export JAVA_HOME="/Library/Java/Home"
+      fi
+    fi
+    ;;
+esac
+
+if [ -z "$JAVA_HOME" ] ; then
+  if [ -r /etc/gentoo-release ] ; then
+    JAVA_HOME=`java-config --jre-home`
+  fi
+fi
+
+if [ -z "$M2_HOME" ] ; then
+  ## resolve links - $0 may be a link to maven's home
+  PRG="$0"
+
+  # need this for relative symlinks
+  while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+      PRG="$link"
+    else
+      PRG="`dirname "$PRG"`/$link"
+    fi
+  done
+
+  saveddir=`pwd`
+
+  M2_HOME=`dirname "$PRG"`/..
+
+  # make it fully qualified
+  M2_HOME=`cd "$M2_HOME" && pwd`
+
+  cd "$saveddir"
+  # echo Using m2 at $M2_HOME
+fi
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched
+if $cygwin ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --unix "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
+fi
+
+# For Mingw, ensure paths are in UNIX format before anything is touched
+if $mingw ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME="`(cd "$M2_HOME"; pwd)`"
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
+fi
+
+if [ -z "$JAVA_HOME" ]; then
+  javaExecutable="`which javac`"
+  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then
+    # readlink(1) is not available as standard on Solaris 10.
+    readLink=`which readlink`
+    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then
+      if $darwin ; then
+        javaHome="`dirname \"$javaExecutable\"`"
+        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"
+      else
+        javaExecutable="`readlink -f \"$javaExecutable\"`"
+      fi
+      javaHome="`dirname \"$javaExecutable\"`"
+      javaHome=`expr "$javaHome" : '\(.*\)/bin'`
+      JAVA_HOME="$javaHome"
+      export JAVA_HOME
+    fi
+  fi
+fi
+
+if [ -z "$JAVACMD" ] ; then
+  if [ -n "$JAVA_HOME"  ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+    fi
+  else
+    JAVACMD="`which java`"
+  fi
+fi
+
+if [ ! -x "$JAVACMD" ] ; then
+  echo "Error: JAVA_HOME is not defined correctly." >&2
+  echo "  We cannot execute $JAVACMD" >&2
+  exit 1
+fi
+
+if [ -z "$JAVA_HOME" ] ; then
+  echo "Warning: JAVA_HOME environment variable is not set."
+fi
+
+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
+
+# traverses directory structure from process work directory to filesystem root
+# first directory with .mvn subdirectory is considered project base directory
+find_maven_basedir() {
+
+  if [ -z "$1" ]
+  then
+    echo "Path not specified to find_maven_basedir"
+    return 1
+  fi
+
+  basedir="$1"
+  wdir="$1"
+  while [ "$wdir" != '/' ] ; do
+    if [ -d "$wdir"/.mvn ] ; then
+      basedir=$wdir
+      break
+    fi
+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)
+    if [ -d "${wdir}" ]; then
+      wdir=`cd "$wdir/.."; pwd`
+    fi
+    # end of workaround
+  done
+  echo "${basedir}"
+}
+
+# concatenates all lines of a file
+concat_lines() {
+  if [ -f "$1" ]; then
+    echo "$(tr -s '\n' ' ' < "$1")"
+  fi
+}
+
+BASE_DIR=`find_maven_basedir "$(pwd)"`
+if [ -z "$BASE_DIR" ]; then
+  exit 1;
+fi
+
+##########################################################################################
+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+# This allows using the maven wrapper in projects that prohibit checking in binary data.
+##########################################################################################
+if [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Found .mvn/wrapper/maven-wrapper.jar"
+    fi
+else
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."
+    fi
+    if [ -n "$MVNW_REPOURL" ]; then
+      jarUrl="$MVNW_REPOURL/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
+    else
+      jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
+    fi
+    while IFS="=" read key value; do
+      case "$key" in (wrapperUrl) jarUrl="$value"; break ;;
+      esac
+    done < "$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Downloading from: $jarUrl"
+    fi
+    wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"
+    if $cygwin; then
+      wrapperJarPath=`cygpath --path --windows "$wrapperJarPath"`
+    fi
+
+    if command -v wget > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found wget ... using wget"
+        fi
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            wget "$jarUrl" -O "$wrapperJarPath"
+        else
+            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD "$jarUrl" -O "$wrapperJarPath"
+        fi
+    elif command -v curl > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found curl ... using curl"
+        fi
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            curl -o "$wrapperJarPath" "$jarUrl" -f
+        else
+            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o "$wrapperJarPath" "$jarUrl" -f
+        fi
+
+    else
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Falling back to using Java to download"
+        fi
+        javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"
+        # For Cygwin, switch paths to Windows format before running javac
+        if $cygwin; then
+          javaClass=`cygpath --path --windows "$javaClass"`
+        fi
+        if [ -e "$javaClass" ]; then
+            if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Compiling MavenWrapperDownloader.java ..."
+                fi
+                # Compiling the Java class
+                ("$JAVA_HOME/bin/javac" "$javaClass")
+            fi
+            if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                # Running the downloader
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Running MavenWrapperDownloader.java ..."
+                fi
+                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")
+            fi
+        fi
+    fi
+fi
+##########################################################################################
+# End of extension
+##########################################################################################
+
+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}
+if [ "$MVNW_VERBOSE" = true ]; then
+  echo $MAVEN_PROJECTBASEDIR
+fi
+MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --path --windows "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
+  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`
+fi
+
+# Provide a "standardized" way to retrieve the CLI args that will
+# work with both Windows and non-Windows executions.
+MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"
+export MAVEN_CMD_LINE_ARGS
+
+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+exec "$JAVACMD" \
+  $MAVEN_OPTS \
+  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \
+  "-Dmaven.home=${M2_HOME}" "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
new file mode 100644
--- /dev/null	(date 1611316593029)
+++ b/pom.xml	(date 1611316593029)
@@ -0,0 +1,220 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <modules>
+        <module>service</module>
+        <module>common</module>
+        <module>service-oss</module>
+        <module>service_ucenter</module>
+        <module>guli_gateway</module>
+        <module>service_acl</module>
+    </modules>
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>2.2.1.RELEASE</version>
+        <relativePath/> <!-- lookup parent from repository -->
+    </parent>
+    <groupId>com.atguigu</groupId>
+    <artifactId>guli</artifactId>
+    <version>0.0.1-SNAPSHOT</version>
+    <name>guli</name>
+    <packaging>pom</packaging>
+    <description>Demo project for Spring Boot</description>
+
+
+    <properties>
+        <java.version>1.8</java.version>
+        <guli.version>0.0.1-SNAPSHOT</guli.version>
+        <mybatis-plus.version>3.0.5</mybatis-plus.version>
+        <velocity.version>2.0</velocity.version>
+        <swagger.version>2.7.0</swagger.version>
+        <aliyun.oss.version>2.8.3</aliyun.oss.version>
+        <jodatime.version>2.10.1</jodatime.version>
+        <poi.version>3.17</poi.version>
+        <commons-fileupload.version>1.3.1</commons-fileupload.version>
+        <commons-io.version>2.6</commons-io.version>
+        <httpclient.version>4.5.1</httpclient.version>
+        <jwt.version>0.7.0</jwt.version>
+        <aliyun-java-sdk-core.version>4.3.3</aliyun-java-sdk-core.version>
+        <aliyun-sdk-oss.version>3.1.0</aliyun-sdk-oss.version>
+        <aliyun-java-sdk-vod.version>2.15.2</aliyun-java-sdk-vod.version>
+        <aliyun-java-vod-upload.version>1.4.11</aliyun-java-vod-upload.version>
+        <aliyun-sdk-vod-upload.version>1.4.11</aliyun-sdk-vod-upload.version>
+        <fastjson.version>1.2.28</fastjson.version>
+        <gson.version>2.8.2</gson.version>
+        <json.version>20170516</json.version>
+        <commons-dbutils.version>1.7</commons-dbutils.version>
+        <canal.client.version>1.1.0</canal.client.version>
+        <docker.image.prefix>zx</docker.image.prefix>
+        <cloud-alibaba.version>0.2.2.RELEASE</cloud-alibaba.version>
+    </properties>
+
+    <dependencyManagement>
+        <dependencies>
+            <!--Spring Cloud-->
+            <dependency>
+                <groupId>org.springframework.cloud</groupId>
+                <artifactId>spring-cloud-dependencies</artifactId>
+                <version>Hoxton.RELEASE</version>
+                <type>pom</type>
+                <scope>import</scope>
+            </dependency>
+
+            <dependency>
+                <groupId>org.springframework.cloud</groupId>
+                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
+                <version>${cloud-alibaba.version}</version>
+                <type>pom</type>
+                <scope>import</scope>
+            </dependency>
+            <!--mybatis-plus 持久层-->
+            <dependency>
+                <groupId>com.baomidou</groupId>
+                <artifactId>mybatis-plus-boot-starter</artifactId>
+                <version>${mybatis-plus.version}</version>
+            </dependency>
+
+            <!-- velocity 模板引擎, Mybatis Plus 代码生成器需要 -->
+            <dependency>
+                <groupId>org.apache.velocity</groupId>
+                <artifactId>velocity-engine-core</artifactId>
+                <version>${velocity.version}</version>
+            </dependency>
+
+            <!--swagger-->
+            <dependency>
+                <groupId>io.springfox</groupId>
+                <artifactId>springfox-swagger2</artifactId>
+                <version>${swagger.version}</version>
+            </dependency>
+            <!--swagger ui-->
+            <dependency>
+                <groupId>io.springfox</groupId>
+                <artifactId>springfox-swagger-ui</artifactId>
+                <version>${swagger.version}</version>
+            </dependency>
+
+            <!--aliyunOSS-->
+            <dependency>
+                <groupId>com.aliyun.oss</groupId>
+                <artifactId>aliyun-sdk-oss</artifactId>
+                <version>${aliyun.oss.version}</version>
+            </dependency>
+
+            <!--日期时间工具-->
+            <dependency>
+                <groupId>joda-time</groupId>
+                <artifactId>joda-time</artifactId>
+                <version>${jodatime.version}</version>
+            </dependency>
+
+            <!--xls-->
+            <dependency>
+                <groupId>org.apache.poi</groupId>
+                <artifactId>poi</artifactId>
+                <version>${poi.version}</version>
+            </dependency>
+            <!--xlsx-->
+            <dependency>
+                <groupId>org.apache.poi</groupId>
+                <artifactId>poi-ooxml</artifactId>
+                <version>${poi.version}</version>
+            </dependency>
+
+            <!--文件上传-->
+            <dependency>
+                <groupId>commons-fileupload</groupId>
+                <artifactId>commons-fileupload</artifactId>
+                <version>${commons-fileupload.version}</version>
+            </dependency>
+
+            <!--commons-io-->
+            <dependency>
+                <groupId>commons-io</groupId>
+                <artifactId>commons-io</artifactId>
+                <version>${commons-io.version}</version>
+            </dependency>
+
+            <!--httpclient-->
+            <dependency>
+                <groupId>org.apache.httpcomponents</groupId>
+                <artifactId>httpclient</artifactId>
+                <version>${httpclient.version}</version>
+            </dependency>
+
+            <dependency>
+                <groupId>com.google.code.gson</groupId>
+                <artifactId>gson</artifactId>
+                <version>${gson.version}</version>
+            </dependency>
+
+            <!-- JWT -->
+            <dependency>
+                <groupId>io.jsonwebtoken</groupId>
+                <artifactId>jjwt</artifactId>
+                <version>${jwt.version}</version>
+            </dependency>
+
+            <!--aliyun-->
+            <dependency>
+                <groupId>com.aliyun</groupId>
+                <artifactId>aliyun-java-sdk-core</artifactId>
+                <version>${aliyun-java-sdk-core.version}</version>
+            </dependency>
+            <dependency>
+                <groupId>com.aliyun.oss</groupId>
+                <artifactId>aliyun-sdk-oss</artifactId>
+                <version>${aliyun-sdk-oss.version}</version>
+            </dependency>
+            <dependency>
+                <groupId>com.aliyun</groupId>
+                <artifactId>aliyun-java-sdk-vod</artifactId>
+                <version>${aliyun-java-sdk-vod.version}</version>
+            </dependency>
+            <dependency>
+                <groupId>com.aliyun</groupId>
+                <artifactId>aliyun-java-vod-upload</artifactId>
+                <version>${aliyun-java-vod-upload.version}</version>
+            </dependency>
+            <dependency>
+                <groupId>com.aliyun</groupId>
+                <artifactId>aliyun-sdk-vod-upload</artifactId>
+                <version>${aliyun-sdk-vod-upload.version}</version>
+            </dependency>
+            <dependency>
+                <groupId>com.alibaba</groupId>
+                <artifactId>fastjson</artifactId>
+                <version>${fastjson.version}</version>
+            </dependency>
+            <dependency>
+                <groupId>org.json</groupId>
+                <artifactId>json</artifactId>
+                <version>${json.version}</version>
+            </dependency>
+
+            <dependency>
+                <groupId>commons-dbutils</groupId>
+                <artifactId>commons-dbutils</artifactId>
+                <version>${commons-dbutils.version}</version>
+            </dependency>
+
+            <dependency>
+                <groupId>com.alibaba.otter</groupId>
+                <artifactId>canal.client</artifactId>
+                <version>${canal.client.version}</version>
+            </dependency>
+        </dependencies>
+    </dependencyManagement>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.springframework.boot</groupId>
+                <artifactId>spring-boot-maven-plugin</artifactId>
+            </plugin>
+        </plugins>
+    </build>
+
+</project>
Index: HELP.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/HELP.md b/HELP.md
new file mode 100644
--- /dev/null	(date 1608990948718)
+++ b/HELP.md	(date 1608990948718)
@@ -0,0 +1,10 @@
+# Getting Started
+
+### Reference Documentation
+
+For further reference, please consider the following sections:
+
+* [Official Apache Maven documentation](https://maven.apache.org/guides/index.html)
+* [Spring Boot Maven Plugin Reference Guide](https://docs.spring.io/spring-boot/docs/2.4.1/maven-plugin/reference/html/)
+* [Create an OCI image](https://docs.spring.io/spring-boot/docs/2.4.1/maven-plugin/reference/html/#build-image)
+
Index: guli_gateway/guli_gateway.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/guli_gateway/guli_gateway.iml b/guli_gateway/guli_gateway.iml
new file mode 100644
--- /dev/null	(date 1611309945465)
+++ b/guli_gateway/guli_gateway.iml	(date 1611309945465)
@@ -0,0 +1,146 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="common_utils" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.7.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.yaml:snakeyaml:1.25" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-pool2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.6" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-lang3:3.9" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.28" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:19.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.13" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.apache.httpcomponents:httpclient:4.5.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.apache.httpcomponents:httpcore:4.4.12" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-core:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.ws.rs:jsr311-api:1.1.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-gateway:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.7.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-gateway-core:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor.addons:reactor-extra:3.3.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-webflux:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-reactor-netty:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor.netty:reactor-netty:0.9.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec-http:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec-http2:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler-proxy:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec-socks:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport-native-epoll:linux-x86_64:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport-native-unix-common:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.0.18.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webflux:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.synchronoss.cloud:nio-multipart-parser:1.1.0" level="project" />
+    <orderEntry type="library" name="Maven: org.synchronoss.cloud:nio-stream-storage:1.1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.gson:gson:2.8.2" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.4" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.3.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.google.code.findbugs:jsr305:3.0.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: 1.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/1.html b/1.html
new file mode 100644
--- /dev/null	(date 1611309885845)
+++ b/1.html	(date 1611309885845)
@@ -0,0 +1,43 @@
+#使用服务发现路由
+spring.cloud.gateway.discovery.locator.enabled=true
+#服务路由名小写
+#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
+#设置路由id
+spring.cloud.gateway.routes[0].id=service-acl
+#设置路由的uri
+spring.cloud.gateway.routes[0].uri=lb://service-acl
+#设置路由断言,代理servicerId为auth-service的/auth/路径
+spring.cloud.gateway.routes[0].predicates= Path=/*/acl/**
+#配置service-edu服务
+spring.cloud.gateway.routes[1].id=service-edu
+spring.cloud.gateway.routes[1].uri=lb://service-edu
+spring.cloud.gateway.routes[1].predicates= Path=/eduservice/**
+#配置service-ucenter服务
+spring.cloud.gateway.routes[2].id=service-ucenter
+spring.cloud.gateway.routes[2].uri=lb://service-ucenter
+spring.cloud.gateway.routes[2].predicates= Path=/ucenterservice/**
+#配置service-ucenter服务
+spring.cloud.gateway.routes[3].id=service-cms
+spring.cloud.gateway.routes[3].uri=lb://service-cms
+spring.cloud.gateway.routes[3].predicates= Path=/cmsservice/**
+spring.cloud.gateway.routes[4].id=service-msm
+spring.cloud.gateway.routes[4].uri=lb://service-msm
+spring.cloud.gateway.routes[4].predicates= Path=/edumsm/**
+spring.cloud.gateway.routes[5].id=service-order
+spring.cloud.gateway.routes[5].uri=lb://service-order
+spring.cloud.gateway.routes[5].predicates= Path=/orderservice/**
+spring.cloud.gateway.routes[6].id=service-order
+spring.cloud.gateway.routes[6].uri=lb://service-order
+spring.cloud.gateway.routes[6].predicates= Path=/orderservice/**
+spring.cloud.gateway.routes[7].id=service-oss
+spring.cloud.gateway.routes[7].uri=lb://service-oss
+spring.cloud.gateway.routes[7].predicates= Path=/eduoss/**
+spring.cloud.gateway.routes[8].id=service-statistic
+spring.cloud.gateway.routes[8].uri=lb://service-statistic
+spring.cloud.gateway.routes[8].predicates= Path=/staservice/**
+spring.cloud.gateway.routes[9].id=service-vod
+spring.cloud.gateway.routes[9].uri=lb://service-vod
+spring.cloud.gateway.routes[9].predicates= Path=/eduvod/**
+spring.cloud.gateway.routes[10].id=service-edu
+spring.cloud.gateway.routes[10].uri=lb://service-edu
+spring.cloud.gateway.routes[10].predicates= Path=/eduuser/**
\ No newline at end of file
Index: guli.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/guli.iml b/guli.iml
new file mode 100644
--- /dev/null	(date 1611309697975)
+++ b/guli.iml	(date 1611309697975)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="jdk" jdkName="corretto-1.8" jdkType="JavaSDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: guli_gateway/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/guli_gateway/pom.xml b/guli_gateway/pom.xml
new file mode 100644
--- /dev/null	(date 1611309847834)
+++ b/guli_gateway/pom.xml	(date 1611309847834)
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>guli</artifactId>
+        <groupId>com.atguigu</groupId>
+        <version>0.0.1-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>guli_gateway</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>com.atguigu</groupId>
+            <artifactId>common_utils</artifactId>
+            <version>0.0.1-SNAPSHOT</version>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-gateway</artifactId>
+        </dependency>
+        <!--gson-->
+        <dependency>
+            <groupId>com.google.code.gson</groupId>
+            <artifactId>gson</artifactId>
+        </dependency>
+        <!--服务调用-->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-openfeign</artifactId>
+        </dependency>
+    </dependencies>
+</project>
\ No newline at end of file
Index: guli_gateway/target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/guli_gateway/target/classes/application.properties b/guli_gateway/target/classes/application.properties
new file mode 100644
--- /dev/null	(date 1611310994950)
+++ b/guli_gateway/target/classes/application.properties	(date 1611310994950)
@@ -0,0 +1,59 @@
+server.port=8222    
+
+spring.application.name=service-gateway
+#
+## \u73AF\u5883\u8BBE\u7F6E\uFF1Adev\u3001test\u3001prod
+spring.profiles.active=dev
+##\u8FD4\u56DEjson\u7684\u5168\u5C40\u65F6\u95F4\u683C\u5F0F
+spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
+spring.jackson.time-zone=GMT+8
+#
+##\u914D\u7F6Emapper xml\u6587\u4EF6\u7684\u8DEF\u5F84
+#
+## nacos\u670D\u52A1\u5730\u5740
+
+spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
+
+#使用服务发现路由
+spring.cloud.gateway.discovery.locator.enabled=true
+#服务路由名小写
+#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
+#设置路由id
+spring.cloud.gateway.routes[0].id=service-acl
+#设置路由的uri
+spring.cloud.gateway.routes[0].uri=lb://service-acl
+#设置路由断言,代理servicerId为auth-service的/auth/路径
+spring.cloud.gateway.routes[0].predicates= Path=/*/acl/**
+#配置service-edu服务
+spring.cloud.gateway.routes[1].id=service-edu
+spring.cloud.gateway.routes[1].uri=lb://service-edu
+spring.cloud.gateway.routes[1].predicates= Path=/eduservice/**
+#配置service-ucenter服务
+spring.cloud.gateway.routes[2].id=service-ucenter
+spring.cloud.gateway.routes[2].uri=lb://service-ucenter
+spring.cloud.gateway.routes[2].predicates= Path=/ucenter/**
+#配置service-ucenter服务
+spring.cloud.gateway.routes[3].id=service-cms
+spring.cloud.gateway.routes[3].uri=lb://service-cms
+spring.cloud.gateway.routes[3].predicates= Path=/crm/**
+spring.cloud.gateway.routes[4].id=service-msm
+spring.cloud.gateway.routes[4].uri=lb://service-msm
+spring.cloud.gateway.routes[4].predicates= Path=/msm/**
+spring.cloud.gateway.routes[5].id=service-order
+spring.cloud.gateway.routes[5].uri=lb://service-order
+spring.cloud.gateway.routes[5].predicates= Path=/order/**
+spring.cloud.gateway.routes[6].id=service-order
+spring.cloud.gateway.routes[6].uri=lb://service-order
+spring.cloud.gateway.routes[6].predicates= Path=/orderservice/**
+spring.cloud.gateway.routes[7].id=service-oss
+spring.cloud.gateway.routes[7].uri=lb://server-edu-oss
+spring.cloud.gateway.routes[7].predicates= Path=/eduoss/**
+spring.cloud.gateway.routes[8].id=service-statistic
+spring.cloud.gateway.routes[8].uri=lb://service-statistic
+spring.cloud.gateway.routes[8].predicates= Path=/statistics/**
+spring.cloud.gateway.routes[9].id=service-vod
+spring.cloud.gateway.routes[9].uri=lb://service-vod
+spring.cloud.gateway.routes[9].predicates= Path=/eduvod/**
+spring.cloud.gateway.routes[10].id=service-edu
+spring.cloud.gateway.routes[10].uri=lb://service-edu
+spring.cloud.gateway.routes[10].predicates= Path=/eduuser/**
\ No newline at end of file
Index: guli_gateway/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/guli_gateway/src/main/resources/application.properties b/guli_gateway/src/main/resources/application.properties
new file mode 100644
--- /dev/null	(date 1611310931818)
+++ b/guli_gateway/src/main/resources/application.properties	(date 1611310931818)
@@ -0,0 +1,59 @@
+server.port=8222    
+
+spring.application.name=service-gateway
+#
+## \u73AF\u5883\u8BBE\u7F6E\uFF1Adev\u3001test\u3001prod
+spring.profiles.active=dev
+##\u8FD4\u56DEjson\u7684\u5168\u5C40\u65F6\u95F4\u683C\u5F0F
+spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
+spring.jackson.time-zone=GMT+8
+#
+##\u914D\u7F6Emapper xml\u6587\u4EF6\u7684\u8DEF\u5F84
+#
+## nacos\u670D\u52A1\u5730\u5740
+
+spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
+
+#使用服务发现路由
+spring.cloud.gateway.discovery.locator.enabled=true
+#服务路由名小写
+#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
+#设置路由id
+spring.cloud.gateway.routes[0].id=service-acl
+#设置路由的uri
+spring.cloud.gateway.routes[0].uri=lb://service-acl
+#设置路由断言,代理servicerId为auth-service的/auth/路径
+spring.cloud.gateway.routes[0].predicates= Path=/*/acl/**
+#配置service-edu服务
+spring.cloud.gateway.routes[1].id=service-edu
+spring.cloud.gateway.routes[1].uri=lb://service-edu
+spring.cloud.gateway.routes[1].predicates= Path=/eduservice/**
+#配置service-ucenter服务
+spring.cloud.gateway.routes[2].id=service-ucenter
+spring.cloud.gateway.routes[2].uri=lb://service-ucenter
+spring.cloud.gateway.routes[2].predicates= Path=/ucenter/**
+#配置service-ucenter服务
+spring.cloud.gateway.routes[3].id=service-cms
+spring.cloud.gateway.routes[3].uri=lb://service-cms
+spring.cloud.gateway.routes[3].predicates= Path=/crm/**
+spring.cloud.gateway.routes[4].id=service-msm
+spring.cloud.gateway.routes[4].uri=lb://service-msm
+spring.cloud.gateway.routes[4].predicates= Path=/msm/**
+spring.cloud.gateway.routes[5].id=service-order
+spring.cloud.gateway.routes[5].uri=lb://service-order
+spring.cloud.gateway.routes[5].predicates= Path=/order/**
+spring.cloud.gateway.routes[6].id=service-order
+spring.cloud.gateway.routes[6].uri=lb://service-order
+spring.cloud.gateway.routes[6].predicates= Path=/orderservice/**
+spring.cloud.gateway.routes[7].id=service-oss
+spring.cloud.gateway.routes[7].uri=lb://server-edu-oss
+spring.cloud.gateway.routes[7].predicates= Path=/eduoss/**
+spring.cloud.gateway.routes[8].id=service-statistic
+spring.cloud.gateway.routes[8].uri=lb://service-statistic
+spring.cloud.gateway.routes[8].predicates= Path=/statistics/**
+spring.cloud.gateway.routes[9].id=service-vod
+spring.cloud.gateway.routes[9].uri=lb://service-vod
+spring.cloud.gateway.routes[9].predicates= Path=/eduvod/**
+spring.cloud.gateway.routes[10].id=service-edu
+spring.cloud.gateway.routes[10].uri=lb://service-edu
+spring.cloud.gateway.routes[10].predicates= Path=/eduuser/**
\ No newline at end of file
Index: guli_gateway/src/main/java/com/atguigu/gateway/GateWayApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/guli_gateway/src/main/java/com/atguigu/gateway/GateWayApplication.java b/guli_gateway/src/main/java/com/atguigu/gateway/GateWayApplication.java
new file mode 100644
--- /dev/null	(date 1611310991050)
+++ b/guli_gateway/src/main/java/com/atguigu/gateway/GateWayApplication.java	(date 1611310991050)
@@ -0,0 +1,13 @@
+package com.atguigu.gateway;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+
+@SpringBootApplication(exclude = DataSourceAutoConfiguration.class)
+public class GateWayApplication {
+    public static void main(String[] args) {
+        SpringApplication.run(GateWayApplication.class,args);
+    }
+}
Index: guli_gateway/src/main/java/com/atguigu/gateway/config/CorsConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/guli_gateway/src/main/java/com/atguigu/gateway/config/CorsConfig.java b/guli_gateway/src/main/java/com/atguigu/gateway/config/CorsConfig.java
new file mode 100644
--- /dev/null	(date 1582012301000)
+++ b/guli_gateway/src/main/java/com/atguigu/gateway/config/CorsConfig.java	(date 1582012301000)
@@ -0,0 +1,63 @@
+package com.atguigu.gateway.config;
+
+
+import org.springframework.cloud.client.discovery.DiscoveryClient;
+import org.springframework.cloud.gateway.discovery.DiscoveryClientRouteDefinitionLocator;
+import org.springframework.cloud.gateway.discovery.DiscoveryLocatorProperties;
+import org.springframework.cloud.gateway.route.RouteDefinitionLocator;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.http.HttpHeaders;
+import org.springframework.http.HttpMethod;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.codec.ServerCodecConfigurer;
+import org.springframework.http.codec.support.DefaultServerCodecConfigurer;
+import org.springframework.http.server.reactive.ServerHttpRequest;
+import org.springframework.http.server.reactive.ServerHttpResponse;
+import org.springframework.web.cors.CorsConfiguration;
+import org.springframework.web.cors.reactive.CorsUtils;
+import org.springframework.web.cors.reactive.CorsWebFilter;
+import org.springframework.web.cors.reactive.UrlBasedCorsConfigurationSource;
+import org.springframework.web.server.ServerWebExchange;
+import org.springframework.web.server.WebFilter;
+import org.springframework.web.server.WebFilterChain;
+import org.springframework.web.util.pattern.PathPatternParser;
+import reactor.core.publisher.Mono;
+
+/**
+ * <p>
+ * 处理跨域
+ * </p>
+ *
+ * @author qy
+ * @since 2019-11-21
+ */
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.web.cors.CorsConfiguration;
+import org.springframework.web.cors.reactive.CorsWebFilter;
+import org.springframework.web.cors.reactive.UrlBasedCorsConfigurationSource;
+import org.springframework.web.util.pattern.PathPatternParser;
+
+/**
+ * description:
+ *
+ * @author wangpeng
+ * @date 2019/01/02
+ */
+@Configuration
+public class CorsConfig {
+    @Bean
+    public CorsWebFilter corsFilter() {
+        CorsConfiguration config = new CorsConfiguration();
+        config.addAllowedMethod("*");
+        config.addAllowedOrigin("*");
+        config.addAllowedHeader("*");
+
+        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource(new PathPatternParser());
+        source.registerCorsConfiguration("/**", config);
+
+        return new CorsWebFilter(source);
+    }
+}
+
Index: guli_gateway/src/main/java/com/atguigu/gateway/filter/AuthGlobalFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/guli_gateway/src/main/java/com/atguigu/gateway/filter/AuthGlobalFilter.java b/guli_gateway/src/main/java/com/atguigu/gateway/filter/AuthGlobalFilter.java
new file mode 100644
--- /dev/null	(date 1578816057000)
+++ b/guli_gateway/src/main/java/com/atguigu/gateway/filter/AuthGlobalFilter.java	(date 1578816057000)
@@ -0,0 +1,74 @@
+package com.atguigu.gateway.filter;
+
+import com.google.gson.JsonObject;
+import org.springframework.cloud.gateway.filter.GatewayFilterChain;
+import org.springframework.cloud.gateway.filter.GlobalFilter;
+import org.springframework.core.Ordered;
+import org.springframework.core.io.buffer.DataBuffer;
+import org.springframework.http.server.reactive.ServerHttpRequest;
+import org.springframework.http.server.reactive.ServerHttpResponse;
+import org.springframework.stereotype.Component;
+import org.springframework.util.AntPathMatcher;
+import org.springframework.web.server.ServerWebExchange;
+import reactor.core.publisher.Mono;
+
+import java.nio.charset.StandardCharsets;
+import java.util.List;
+
+/**
+ * <p>
+ * 全局Filter，统一处理会员登录与外部不允许访问的服务
+ * </p>
+ *
+ * @author qy
+ * @since 2019-11-21
+ */
+@Component
+public class AuthGlobalFilter implements GlobalFilter, Ordered {
+
+    private AntPathMatcher antPathMatcher = new AntPathMatcher();
+
+    @Override
+    public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {
+        ServerHttpRequest request = exchange.getRequest();
+        String path = request.getURI().getPath();
+        //谷粒学院api接口，校验用户必须登录
+        if(antPathMatcher.match("/api/**/auth/**", path)) {
+            List<String> tokenList = request.getHeaders().get("token");
+            if(null == tokenList) {
+                ServerHttpResponse response = exchange.getResponse();
+                return out(response);
+            } else {
+//                Boolean isCheck = JwtUtils.checkToken(tokenList.get(0));
+//                if(!isCheck) {
+                    ServerHttpResponse response = exchange.getResponse();
+                    return out(response);
+//                }
+            }
+        }
+        //内部服务接口，不允许外部访问
+        if(antPathMatcher.match("/**/inner/**", path)) {
+            ServerHttpResponse response = exchange.getResponse();
+            return out(response);
+        }
+        return chain.filter(exchange);
+    }
+
+    @Override
+    public int getOrder() {
+        return 0;
+    }
+
+    private Mono<Void> out(ServerHttpResponse response) {
+        JsonObject message = new JsonObject();
+        message.addProperty("success", false);
+        message.addProperty("code", 28004);
+        message.addProperty("data", "鉴权失败");
+        byte[] bits = message.toString().getBytes(StandardCharsets.UTF_8);
+        DataBuffer buffer = response.bufferFactory().wrap(bits);
+        //response.setStatusCode(HttpStatus.UNAUTHORIZED);
+        //指定编码，否则在浏览器中会中文乱码
+        response.getHeaders().add("Content-Type", "application/json;charset=UTF-8");
+        return response.writeWith(Mono.just(buffer));
+    }
+}
Index: service/service_msm/src/main/java/com/atguigu/msm/MsmApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_msm/src/main/java/com/atguigu/msm/MsmApplication.java b/service/service_msm/src/main/java/com/atguigu/msm/MsmApplication.java
new file mode 100644
--- /dev/null	(date 1610460336099)
+++ b/service/service_msm/src/main/java/com/atguigu/msm/MsmApplication.java	(date 1610460336099)
@@ -0,0 +1,17 @@
+package com.atguigu.msm;
+
+import org.mybatis.spring.annotation.MapperScan;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
+import org.springframework.context.annotation.ComponentScan;
+import springfox.documentation.swagger2.annotations.EnableSwagger2;
+
+@SpringBootApplication(exclude = DataSourceAutoConfiguration.class)
+@EnableSwagger2
+@ComponentScan("com.atguigu")
+public class MsmApplication {
+    public static void main(String[] args) {
+        SpringApplication.run(MsmApplication.class,args);
+    }
+}
Index: guli_gateway/src/main/java/com/atguigu/gateway/handler/JsonExceptionHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/guli_gateway/src/main/java/com/atguigu/gateway/handler/JsonExceptionHandler.java b/guli_gateway/src/main/java/com/atguigu/gateway/handler/JsonExceptionHandler.java
new file mode 100644
--- /dev/null	(date 1581905299000)
+++ b/guli_gateway/src/main/java/com/atguigu/gateway/handler/JsonExceptionHandler.java	(date 1581905299000)
@@ -0,0 +1,59 @@
+package com.atguigu.gateway.handler;
+
+import org.springframework.boot.autoconfigure.web.ErrorProperties;
+import org.springframework.boot.autoconfigure.web.ResourceProperties;
+import org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler;
+import org.springframework.boot.web.reactive.error.ErrorAttributes;
+import org.springframework.context.ApplicationContext;
+import org.springframework.http.HttpStatus;
+import org.springframework.web.reactive.function.server.*;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * 自定义异常处理
+ *
+ * <p>异常时用JSON代替HTML异常信息<p>
+ *
+ * @author yinjihuan
+ *
+ */
+public class JsonExceptionHandler extends DefaultErrorWebExceptionHandler {
+
+    public JsonExceptionHandler(ErrorAttributes errorAttributes, ResourceProperties resourceProperties,
+                                ErrorProperties errorProperties, ApplicationContext applicationContext) {
+        super(errorAttributes, resourceProperties, errorProperties, applicationContext);
+    }
+
+    /**
+     * 获取异常属性
+     */
+    @Override
+    protected Map<String, Object> getErrorAttributes(ServerRequest request, boolean includeStackTrace) {
+        Map<String, Object> map = new HashMap<>();
+        map.put("success", false);
+        map.put("code", 20005);
+        map.put("message", "网关失败");
+        map.put("data", null);
+        return map;
+    }
+
+    /**
+     * 指定响应处理方法为JSON处理的方法
+     * @param errorAttributes
+     */
+    @Override
+    protected RouterFunction<ServerResponse> getRoutingFunction(ErrorAttributes errorAttributes) {
+        return RouterFunctions.route(RequestPredicates.all(), this::renderErrorResponse);
+    }
+
+    /**
+     * 根据code获取对应的HttpStatus
+     * @param errorAttributes
+     */
+    @Override
+    protected int getHttpStatus(Map<String, Object> errorAttributes) {
+        return 200;
+    }
+}
\ No newline at end of file
Index: guli_gateway/src/main/java/com/atguigu/gateway/handler/ErrorHandlerConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/guli_gateway/src/main/java/com/atguigu/gateway/handler/ErrorHandlerConfig.java b/guli_gateway/src/main/java/com/atguigu/gateway/handler/ErrorHandlerConfig.java
new file mode 100644
--- /dev/null	(date 1578816057000)
+++ b/guli_gateway/src/main/java/com/atguigu/gateway/handler/ErrorHandlerConfig.java	(date 1578816057000)
@@ -0,0 +1,65 @@
+package com.atguigu.gateway.handler;
+
+import org.springframework.beans.factory.ObjectProvider;
+import org.springframework.boot.autoconfigure.web.ResourceProperties;
+import org.springframework.boot.autoconfigure.web.ServerProperties;
+import org.springframework.boot.context.properties.EnableConfigurationProperties;
+import org.springframework.boot.web.reactive.error.ErrorAttributes;
+import org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.core.Ordered;
+import org.springframework.core.annotation.Order;
+import org.springframework.http.codec.ServerCodecConfigurer;
+import org.springframework.web.reactive.result.view.ViewResolver;
+
+import java.util.Collections;
+import java.util.List;
+
+/**
+ * 覆盖默认的异常处理
+ *
+ * @author yinjihuan
+ *
+ */
+@Configuration
+@EnableConfigurationProperties({ServerProperties.class, ResourceProperties.class})
+public class ErrorHandlerConfig {
+
+    private final ServerProperties serverProperties;
+
+    private final ApplicationContext applicationContext;
+
+    private final ResourceProperties resourceProperties;
+
+    private final List<ViewResolver> viewResolvers;
+
+    private final ServerCodecConfigurer serverCodecConfigurer;
+
+    public ErrorHandlerConfig(ServerProperties serverProperties,
+                                     ResourceProperties resourceProperties,
+                                     ObjectProvider<List<ViewResolver>> viewResolversProvider,
+                                        ServerCodecConfigurer serverCodecConfigurer,
+                                     ApplicationContext applicationContext) {
+        this.serverProperties = serverProperties;
+        this.applicationContext = applicationContext;
+        this.resourceProperties = resourceProperties;
+        this.viewResolvers = viewResolversProvider.getIfAvailable(Collections::emptyList);
+        this.serverCodecConfigurer = serverCodecConfigurer;
+    }
+
+    @Bean
+    @Order(Ordered.HIGHEST_PRECEDENCE)
+    public ErrorWebExceptionHandler errorWebExceptionHandler(ErrorAttributes errorAttributes) {
+        JsonExceptionHandler exceptionHandler = new JsonExceptionHandler(
+                errorAttributes,
+                this.resourceProperties,
+                this.serverProperties.getError(),
+                this.applicationContext);
+        exceptionHandler.setViewResolvers(this.viewResolvers);
+        exceptionHandler.setMessageWriters(this.serverCodecConfigurer.getWriters());
+        exceptionHandler.setMessageReaders(this.serverCodecConfigurer.getReaders());
+        return exceptionHandler;
+    }
+}
Index: common/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/pom.xml b/common/pom.xml
new file mode 100644
--- /dev/null	(date 1611317258329)
+++ b/common/pom.xml	(date 1611317258329)
@@ -0,0 +1,71 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>guli</artifactId>
+        <groupId>com.atguigu</groupId>
+        <version>0.0.1-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>common</artifactId>
+    <packaging>pom</packaging>
+    <modules>
+        <module>service_base</module>
+        <module>common_utils</module>
+        <module>spring_security</module>
+    </modules>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+            <scope>provided </scope>
+        </dependency>
+
+        <!--mybatis-plus-->
+        <dependency>
+            <groupId>com.baomidou</groupId>
+            <artifactId>mybatis-plus-boot-starter</artifactId>
+            <scope>provided </scope>
+        </dependency>
+
+        <!--lombok用来简化实体类：需要安装lombok插件-->
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+            <scope>provided </scope>
+        </dependency>
+
+        <!--swagger-->
+        <dependency>
+            <groupId>io.springfox</groupId>
+            <artifactId>springfox-swagger2</artifactId>
+            <scope>provided </scope>
+        </dependency>
+        <dependency>
+            <groupId>io.springfox</groupId>
+            <artifactId>springfox-swagger-ui</artifactId>
+            <scope>provided </scope>
+        </dependency>
+
+        <!-- redis -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-redis</artifactId>
+        </dependency>
+
+        <!-- spring2.X集成redis所需common-pool2-->
+        <dependency>
+            <groupId>org.apache.commons</groupId>
+            <artifactId>commons-pool2</artifactId>
+            <version>2.6.0</version>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: service/service_oss/src/main/java/com/atguigu/eduoss/EduOssApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_oss/src/main/java/com/atguigu/eduoss/EduOssApplication.java b/service/service_oss/src/main/java/com/atguigu/eduoss/EduOssApplication.java
new file mode 100644
--- /dev/null	(date 1609850211836)
+++ b/service/service_oss/src/main/java/com/atguigu/eduoss/EduOssApplication.java	(date 1609850211836)
@@ -0,0 +1,18 @@
+package com.atguigu.eduoss;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
+import org.springframework.context.annotation.ComponentScan;
+import org.springframework.stereotype.Component;
+import springfox.documentation.swagger2.annotations.EnableSwagger2;
+
+@SpringBootApplication(exclude = DataSourceAutoConfiguration.class)
+@ComponentScan("com.atguigu")
+@EnableSwagger2
+public class EduOssApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(EduOssApplication.class,args);
+    }
+}
Index: common/common.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/common.iml b/common/common.iml
new file mode 100644
--- /dev/null	(date 1611309697949)
+++ b/common/common.iml	(date 1611309697949)
@@ -0,0 +1,99 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-web:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.yaml:snakeyaml:1.25" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-json:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml.jackson.core:jackson-core:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.27" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.apache.tomcat.embed:tomcat-embed-el:9.0.27" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.27" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: jakarta.validation:jakarta.validation-api:2.0.1" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.hibernate.validator:hibernate-validator:6.0.18.Final" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework:spring-web:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework:spring-webmvc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-extension:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-core:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-annotation:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.mybatis:mybatis-spring:1.3.2" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.mybatis:mybatis:3.4.6" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-generator:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.zaxxer:HikariCP:3.4.1" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework:spring-jdbc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-configuration-processor:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.10" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-swagger2:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.swagger:swagger-annotations:1.5.13" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.swagger:swagger-models:1.5.13" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-spi:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-core:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: net.bytebuddy:byte-buddy:1.10.2" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-schema:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-swagger-common:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-spring-web:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.reflections:reflections:0.9.11" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.javassist:javassist:3.21.0-GA" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.google.guava:guava:18.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.29" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.mapstruct:mapstruct:1.1.0.Final" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-swagger-ui:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-pool2:2.6.0" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: common/common_utils/common_utils.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/common_utils/common_utils.iml b/common/common_utils/common_utils.iml
new file mode 100644
--- /dev/null	(date 1611309697988)
+++ b/common/common_utils/common_utils.iml	(date 1611309697988)
@@ -0,0 +1,114 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.7.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-web:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.yaml:snakeyaml:1.25" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-json:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.27" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.apache.tomcat.embed:tomcat-embed-el:9.0.27" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.27" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: jakarta.validation:jakarta.validation-api:2.0.1" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.hibernate.validator:hibernate-validator:6.0.18.Final" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework:spring-web:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework:spring-webmvc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-extension:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-core:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-annotation:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.mybatis:mybatis-spring:1.3.2" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.mybatis:mybatis:3.4.6" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-generator:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.zaxxer:HikariCP:3.4.1" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework:spring-jdbc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-configuration-processor:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.10" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-swagger2:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.swagger:swagger-annotations:1.5.13" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.swagger:swagger-models:1.5.13" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-spi:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-core:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: net.bytebuddy:byte-buddy:1.10.2" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-schema:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-swagger-common:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-spring-web:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.reflections:reflections:0.9.11" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.javassist:javassist:3.21.0-GA" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.google.guava:guava:18.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.29" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.mapstruct:mapstruct:1.1.0.Final" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-swagger-ui:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-pool2:2.6.0" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: common/service_base/service_base.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/service_base/service_base.iml b/common/service_base/service_base.iml
new file mode 100644
--- /dev/null	(date 1611309697979)
+++ b/common/service_base/service_base.iml	(date 1611309697979)
@@ -0,0 +1,115 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="common_utils" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.7.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-web:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.yaml:snakeyaml:1.25" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-json:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.27" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.apache.tomcat.embed:tomcat-embed-el:9.0.27" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.27" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: jakarta.validation:jakarta.validation-api:2.0.1" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.hibernate.validator:hibernate-validator:6.0.18.Final" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework:spring-web:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework:spring-webmvc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-extension:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-core:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-annotation:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.mybatis:mybatis-spring:1.3.2" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.mybatis:mybatis:3.4.6" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-generator:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.zaxxer:HikariCP:3.4.1" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework:spring-jdbc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-configuration-processor:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.10" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-swagger2:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.swagger:swagger-annotations:1.5.13" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.swagger:swagger-models:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-spi:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-core:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: net.bytebuddy:byte-buddy:1.10.2" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-schema:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-swagger-common:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-spring-web:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.reflections:reflections:0.9.11" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.javassist:javassist:3.21.0-GA" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.google.guava:guava:18.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.29" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.mapstruct:mapstruct:1.1.0.Final" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-swagger-ui:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-pool2:2.6.0" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: common/common_utils/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/common_utils/pom.xml b/common/common_utils/pom.xml
new file mode 100644
--- /dev/null	(date 1610455955087)
+++ b/common/common_utils/pom.xml	(date 1610455955087)
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>common</artifactId>
+        <groupId>com.atguigu</groupId>
+        <version>0.0.1-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>common_utils</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>io.jsonwebtoken</groupId>
+            <artifactId>jjwt</artifactId>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: common/spring_security/spring_security.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/spring_security/spring_security.iml b/common/spring_security/spring_security.iml
new file mode 100644
--- /dev/null	(date 1611318591777)
+++ b/common/spring_security/spring_security.iml	(date 1611318591777)
@@ -0,0 +1,119 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="common_utils" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-security:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.yaml:snakeyaml:1.25" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-config:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-web:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.7.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-web:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-json:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.10.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.27" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.apache.tomcat.embed:tomcat-embed-el:9.0.27" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.27" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: jakarta.validation:jakarta.validation-api:2.0.1" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.hibernate.validator:hibernate-validator:6.0.18.Final" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework:spring-webmvc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-extension:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-core:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-annotation:3.0.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.mybatis:mybatis-spring:1.3.2" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.mybatis:mybatis:3.4.6" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.baomidou:mybatis-plus-generator:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.zaxxer:HikariCP:3.4.1" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework:spring-jdbc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.boot:spring-boot-configuration-processor:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.10" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-swagger2:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.swagger:swagger-annotations:1.5.13" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.swagger:swagger-models:1.5.13" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-spi:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-core:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: net.bytebuddy:byte-buddy:1.10.2" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-schema:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-swagger-common:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-spring-web:2.7.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.reflections:reflections:0.9.11" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.javassist:javassist:3.21.0-GA" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.google.guava:guava:18.0" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.29" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.mapstruct:mapstruct:1.1.0.Final" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: io.springfox:springfox-swagger-ui:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-pool2:2.6.0" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: service/service_order/src/main/java/com/atguigu/order/orderApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/main/java/com/atguigu/order/orderApplication.java b/service/service_order/src/main/java/com/atguigu/order/orderApplication.java
new file mode 100644
--- /dev/null	(date 1610977230698)
+++ b/service/service_order/src/main/java/com/atguigu/order/orderApplication.java	(date 1610977230698)
@@ -0,0 +1,24 @@
+package com.atguigu.order;
+
+import com.atguigu.Result.R;
+import org.mybatis.spring.annotation.MapperScan;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+import org.springframework.cloud.openfeign.EnableFeignClients;
+import org.springframework.context.annotation.ComponentScan;
+import org.springframework.stereotype.Component;
+import org.springframework.web.bind.annotation.CrossOrigin;
+import springfox.documentation.swagger2.annotations.EnableSwagger2;
+
+@SpringBootApplication
+@EnableSwagger2
+@EnableDiscoveryClient
+@EnableFeignClients
+@MapperScan(basePackages = "com.atguigu.order.mapper")
+@ComponentScan("com.atguigu")
+public class orderApplication {
+    public static void main(String[] args) {
+        SpringApplication.run(orderApplication.class, args);
+    }
+}
Index: common/service_base/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/service_base/pom.xml b/common/service_base/pom.xml
new file mode 100644
--- /dev/null	(date 1609048961744)
+++ b/common/service_base/pom.xml	(date 1609048961744)
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>common</artifactId>
+        <groupId>com.atguigu</groupId>
+        <version>0.0.1-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>service_base</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+    <dependencies>
+        <dependency>
+            <groupId>com.atguigu</groupId>
+            <artifactId>common_utils</artifactId>
+            <version>0.0.1-SNAPSHOT</version>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: common/spring_security/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/spring_security/pom.xml b/common/spring_security/pom.xml
new file mode 100644
--- /dev/null	(date 1584194087000)
+++ b/common/spring_security/pom.xml	(date 1584194087000)
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>common</artifactId>
+        <groupId>com.atguigu</groupId>
+        <version>0.0.1-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>spring_security</artifactId>
+    <dependencies>
+        <dependency>
+            <groupId>com.atguigu</groupId>
+            <artifactId>common_utils</artifactId>
+            <version>0.0.1-SNAPSHOT</version>
+        </dependency>
+        <!-- Spring Security依赖 -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-security</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>io.jsonwebtoken</groupId>
+            <artifactId>jjwt</artifactId>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: service/service_ucenter/src/main/java/com/atguigu/ucenter/UcenterApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_ucenter/src/main/java/com/atguigu/ucenter/UcenterApplication.java b/service/service_ucenter/src/main/java/com/atguigu/ucenter/UcenterApplication.java
new file mode 100644
--- /dev/null	(date 1610462160686)
+++ b/service/service_ucenter/src/main/java/com/atguigu/ucenter/UcenterApplication.java	(date 1610462160686)
@@ -0,0 +1,16 @@
+package com.atguigu.ucenter;
+
+import org.mybatis.spring.annotation.MapperScan;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.context.annotation.ComponentScan;
+import springfox.documentation.swagger2.annotations.EnableSwagger2;
+@SpringBootApplication
+@EnableSwagger2
+@MapperScan(value = "com.atguigu.ucenter.mapper")
+@ComponentScan("com.atguigu")
+public class UcenterApplication {
+    public static void main(String[] args) {
+        SpringApplication.run(UcenterApplication.class,args);
+    }
+}
Index: service/service_statistics/src/main/java/com/atguigu/statistics/statisticsApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_statistics/src/main/java/com/atguigu/statistics/statisticsApplication.java b/service/service_statistics/src/main/java/com/atguigu/statistics/statisticsApplication.java
new file mode 100644
--- /dev/null	(date 1611140918809)
+++ b/service/service_statistics/src/main/java/com/atguigu/statistics/statisticsApplication.java	(date 1611140918809)
@@ -0,0 +1,24 @@
+package com.atguigu.statistics;
+
+import org.mybatis.spring.annotation.MapperScan;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+import org.springframework.cloud.openfeign.EnableFeignClients;
+import org.springframework.context.annotation.ComponentScan;
+import org.springframework.scheduling.annotation.EnableScheduling;
+import org.springframework.stereotype.Component;
+import springfox.documentation.swagger2.annotations.EnableSwagger2;
+
+@SpringBootApplication
+@EnableDiscoveryClient
+@EnableSwagger2
+@ComponentScan("com.atguigu")
+@MapperScan(basePackages = "com.atguigu.statistics.mapper")
+
+@EnableFeignClients
+public class statisticsApplication {
+    public static void main(String[] args) {
+        SpringApplication.run(statisticsApplication.class,args);
+    }
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/entity/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/entity/User.java b/service/service_acl/src/main/java/com/atguigu/acl/entity/User.java
new file mode 100644
--- /dev/null	(date 1611317124928)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/entity/User.java	(date 1611317124928)
@@ -0,0 +1,60 @@
+package com.atguigu.acl.entity;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import java.util.Date;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
+
+/**
+ * <p>
+ * 用户表
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@Accessors(chain = true)
+@TableName("acl_user")
+@ApiModel(value="User对象", description="用户表")
+public class User implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @ApiModelProperty(value = "会员id")
+    @TableId(value = "id", type = IdType.ID_WORKER)
+    private String id;
+
+    @ApiModelProperty(value = "微信openid")
+    private String username;
+
+    @ApiModelProperty(value = "密码")
+    private String password;
+
+    @ApiModelProperty(value = "昵称")
+    private String nickName;
+
+    @ApiModelProperty(value = "用户头像")
+    private String salt;
+
+    @ApiModelProperty(value = "用户签名")
+    private String token;
+
+    @ApiModelProperty(value = "逻辑删除 1（true）已删除， 0（false）未删除")
+    private Integer isDeleted;
+
+    @ApiModelProperty(value = "创建时间")
+    private Date gmtCreate;
+
+    @ApiModelProperty(value = "更新时间")
+    private Date gmtModified;
+
+
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/entity/RolePermission.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/entity/RolePermission.java b/service/service_acl/src/main/java/com/atguigu/acl/entity/RolePermission.java
new file mode 100644
--- /dev/null	(date 1611317124907)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/entity/RolePermission.java	(date 1611317124907)
@@ -0,0 +1,48 @@
+package com.atguigu.acl.entity;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import java.util.Date;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
+
+/**
+ * <p>
+ * 角色权限
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@Accessors(chain = true)
+@TableName("acl_role_permission")
+@ApiModel(value="RolePermission对象", description="角色权限")
+public class RolePermission implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @TableId(value = "id", type = IdType.ID_WORKER)
+    private String id;
+
+    private String roleId;
+
+    private String permissionId;
+
+    @ApiModelProperty(value = "逻辑删除 1（true）已删除， 0（false）未删除")
+    private Integer isDeleted;
+
+    @ApiModelProperty(value = "创建时间")
+    private Date gmtCreate;
+
+    @ApiModelProperty(value = "更新时间")
+    private Date gmtModified;
+
+
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/entity/UserRole.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/entity/UserRole.java b/service/service_acl/src/main/java/com/atguigu/acl/entity/UserRole.java
new file mode 100644
--- /dev/null	(date 1611317124948)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/entity/UserRole.java	(date 1611317124948)
@@ -0,0 +1,51 @@
+package com.atguigu.acl.entity;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import java.util.Date;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
+
+/**
+ * <p>
+ * 
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@Accessors(chain = true)
+@TableName("acl_user_role")
+@ApiModel(value="UserRole对象", description="")
+public class UserRole implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @ApiModelProperty(value = "主键id")
+    @TableId(value = "id", type = IdType.ID_WORKER)
+    private String id;
+
+    @ApiModelProperty(value = "角色id")
+    private String roleId;
+
+    @ApiModelProperty(value = "用户id")
+    private String userId;
+
+    @ApiModelProperty(value = "逻辑删除 1（true）已删除， 0（false）未删除")
+    private Integer isDeleted;
+
+    @ApiModelProperty(value = "创建时间")
+    private Date gmtCreate;
+
+    @ApiModelProperty(value = "更新时间")
+    private Date gmtModified;
+
+
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/helper/PermissionHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/helper/PermissionHelper.java b/service/service_acl/src/main/java/com/atguigu/acl/helper/PermissionHelper.java
new file mode 100644
--- /dev/null	(date 1611318612658)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/helper/PermissionHelper.java	(date 1611318612658)
@@ -0,0 +1,54 @@
+package com.atguigu.acl.helper;
+
+import com.atguigu.acl.entity.Permission;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * <p>
+ * 根据权限数据构建菜单数据
+ * </p>
+ *
+ * @author qy
+ * @since 2019-11-11
+ */
+public class PermissionHelper {
+
+    /**
+     * 使用递归方法建菜单
+     * @param treeNodes
+     * @return
+     */
+    public static List<Permission> bulid(List<Permission> treeNodes) {
+        List<Permission> trees = new ArrayList<>();
+        for (Permission treeNode : treeNodes) {
+            if ("0".equals(treeNode.getPid())) {
+                treeNode.setLevel(1);
+                trees.add(findChildren(treeNode,treeNodes));
+            }
+        }
+        return trees;
+    }
+
+    /**
+     * 递归查找子节点
+     * @param treeNodes
+     * @return
+     */
+    public static Permission findChildren(Permission treeNode,List<Permission> treeNodes) {
+        treeNode.setChildren(new ArrayList<Permission>());
+
+        for (Permission it : treeNodes) {
+            if(treeNode.getId().equals(it.getPid())) {
+                int level = treeNode.getLevel() + 1;
+                it.setLevel(level);
+                if (treeNode.getChildren() == null) {
+                    treeNode.setChildren(new ArrayList<>());
+                }
+                treeNode.getChildren().add(findChildren(it,treeNodes));
+            }
+        }
+        return treeNode;
+    }
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/helper/MemuHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/helper/MemuHelper.java b/service/service_acl/src/main/java/com/atguigu/acl/helper/MemuHelper.java
new file mode 100644
--- /dev/null	(date 1611317610216)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/helper/MemuHelper.java	(date 1611317610216)
@@ -0,0 +1,82 @@
+package com.atguigu.acl.helper;
+
+import com.alibaba.fastjson.JSONObject;
+import com.atguigu.acl.entity.Permission;
+import org.springframework.util.StringUtils;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * <p>
+ * 根据权限数据构建登录用户左侧菜单数据
+ * </p>
+ *
+ * @author qy
+ * @since 2019-11-11
+ */
+public class MemuHelper {
+
+    /**
+     * 构建菜单
+     * @param treeNodes
+     * @return
+     */
+    public static List<JSONObject> bulid(List<Permission> treeNodes) {
+        List<JSONObject> meuns = new ArrayList<>();
+        if(treeNodes.size() == 1) {
+            Permission topNode = treeNodes.get(0);
+            //左侧一级菜单
+            List<Permission> oneMeunList = topNode.getChildren();
+            for(Permission one :oneMeunList) {
+                JSONObject oneMeun = new JSONObject();
+                oneMeun.put("path", one.getPath());
+                oneMeun.put("component", one.getComponent());
+                oneMeun.put("redirect", "noredirect");
+                oneMeun.put("name", "name_"+one.getId());
+                oneMeun.put("hidden", false);
+
+                JSONObject oneMeta = new JSONObject();
+                oneMeta.put("title", one.getName());
+                oneMeta.put("icon", one.getIcon());
+                oneMeun.put("meta", oneMeta);
+
+                List<JSONObject> children = new ArrayList<>();
+                List<Permission> twoMeunList = one.getChildren();
+                for(Permission two :twoMeunList) {
+                    JSONObject twoMeun = new JSONObject();
+                    twoMeun.put("path", two.getPath());
+                    twoMeun.put("component", two.getComponent());
+                    twoMeun.put("name", "name_"+two.getId());
+                    twoMeun.put("hidden", false);
+
+                    JSONObject twoMeta = new JSONObject();
+                    twoMeta.put("title", two.getName());
+                    twoMeun.put("meta", twoMeta);
+
+                    children.add(twoMeun);
+
+                    List<Permission> threeMeunList = two.getChildren();
+                    for(Permission three :threeMeunList) {
+                        if(StringUtils.isEmpty(three.getPath())) continue;
+
+                        JSONObject threeMeun = new JSONObject();
+                        threeMeun.put("path", three.getPath());
+                        threeMeun.put("component", three.getComponent());
+                        threeMeun.put("name", "name_"+three.getId());
+                        threeMeun.put("hidden", true);
+
+                        JSONObject threeMeta = new JSONObject();
+                        threeMeta.put("title", three.getName());
+                        threeMeun.put("meta", threeMeta);
+
+                        children.add(threeMeun);
+                    }
+                }
+                oneMeun.put("children", children);
+                meuns.add(oneMeun);
+            }
+        }
+        return meuns;
+    }
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/entity/Permission.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/entity/Permission.java b/service/service_acl/src/main/java/com/atguigu/acl/entity/Permission.java
new file mode 100644
--- /dev/null	(date 1611318754614)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/entity/Permission.java	(date 1611318754614)
@@ -0,0 +1,77 @@
+package com.atguigu.acl.entity;
+
+import com.baomidou.mybatisplus.annotation.TableField;
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import java.util.Date;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.io.Serializable;
+import java.util.List;
+
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
+
+/**
+ * <p>
+ * 权限
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@Accessors(chain = true)
+@TableName("acl_permission")
+@ApiModel(value="Permission对象", description="权限")
+public class Permission implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @ApiModelProperty(value = "编号")
+    @TableId(value = "id", type = IdType.ID_WORKER)
+    private String id;
+
+    @ApiModelProperty(value = "所属上级")
+    private String pid;
+
+    @ApiModelProperty(value = "名称")
+    private String name;
+
+    @ApiModelProperty(value = "类型(1:菜单,2:按钮)")
+    private Integer type;
+
+    @ApiModelProperty(value = "权限值")
+    private String permissionValue;
+
+    @ApiModelProperty(value = "访问路径")
+    private String path;
+
+    @TableField(exist = false)
+    private Integer level;
+    @TableField(exist = false)
+    private List<Permission> Children;
+
+    @ApiModelProperty(value = "组件路径")
+    private String component;
+
+    @ApiModelProperty(value = "图标")
+    private String icon;
+
+    @ApiModelProperty(value = "状态(0:禁止,1:正常)")
+    private Integer status;
+
+    @ApiModelProperty(value = "逻辑删除 1（true）已删除， 0（false）未删除")
+    private Integer isDeleted;
+
+    @ApiModelProperty(value = "创建时间")
+    private Date gmtCreate;
+
+    @ApiModelProperty(value = "更新时间")
+    private Date gmtModified;
+
+
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/entity/Role.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/entity/Role.java b/service/service_acl/src/main/java/com/atguigu/acl/entity/Role.java
new file mode 100644
--- /dev/null	(date 1611317124882)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/entity/Role.java	(date 1611317124882)
@@ -0,0 +1,54 @@
+package com.atguigu.acl.entity;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import java.util.Date;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
+
+/**
+ * <p>
+ * 
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@Accessors(chain = true)
+@TableName("acl_role")
+@ApiModel(value="Role对象", description="")
+public class Role implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @ApiModelProperty(value = "角色id")
+    @TableId(value = "id", type = IdType.ID_WORKER)
+    private String id;
+
+    @ApiModelProperty(value = "角色名称")
+    private String roleName;
+
+    @ApiModelProperty(value = "角色编码")
+    private String roleCode;
+
+    @ApiModelProperty(value = "备注")
+    private String remark;
+
+    @ApiModelProperty(value = "逻辑删除 1（true）已删除， 0（false）未删除")
+    private Integer isDeleted;
+
+    @ApiModelProperty(value = "创建时间")
+    private Date gmtCreate;
+
+    @ApiModelProperty(value = "更新时间")
+    private Date gmtModified;
+
+
+}
Index: common/common_utils/src/main/java/com/atguigu/Result/JwtUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/common_utils/src/main/java/com/atguigu/Result/JwtUtils.java b/common/common_utils/src/main/java/com/atguigu/Result/JwtUtils.java
new file mode 100644
--- /dev/null	(date 1610455888378)
+++ b/common/common_utils/src/main/java/com/atguigu/Result/JwtUtils.java	(date 1610455888378)
@@ -0,0 +1,83 @@
+package com.atguigu.Result;
+
+import io.jsonwebtoken.Claims;
+import io.jsonwebtoken.Jws;
+import io.jsonwebtoken.Jwts;
+import io.jsonwebtoken.SignatureAlgorithm;
+import org.springframework.http.server.reactive.ServerHttpRequest;
+import org.springframework.util.StringUtils;
+
+import javax.servlet.http.HttpServletRequest;
+import java.util.Date;
+
+/**
+ * @author helen
+ * @since 2019/10/16
+ */
+public class JwtUtils {
+
+    public static final long EXPIRE = 1000 * 60 * 60 * 24;
+    public static final String APP_SECRET = "ukc8BDbRigUDaY6pZFfWus2jZWLPHO";
+
+    public static String getJwtToken(String id, String nickname){
+
+        String JwtToken = Jwts.builder()
+                .setHeaderParam("typ", "JWT")
+                .setHeaderParam("alg", "HS256")
+                .setSubject("guli-user")
+                .setIssuedAt(new Date())
+                .setExpiration(new Date(System.currentTimeMillis() + EXPIRE))
+                .claim("id", id)
+                .claim("nickname", nickname)
+                .signWith(SignatureAlgorithm.HS256, APP_SECRET)
+                .compact();
+
+        return JwtToken;
+    }
+
+    /**
+     * 判断token是否存在与有效
+     * @param jwtToken
+     * @return
+     */
+    public static boolean checkToken(String jwtToken) {
+        if(StringUtils.isEmpty(jwtToken)) return false;
+        try {
+            Jwts.parser().setSigningKey(APP_SECRET).parseClaimsJws(jwtToken);
+        } catch (Exception e) {
+            e.printStackTrace();
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * 判断token是否存在与有效
+     * @param request
+     * @return
+     */
+    public static boolean checkToken(HttpServletRequest request) {
+        try {
+            String jwtToken = request.getHeader("token");
+            if(StringUtils.isEmpty(jwtToken)) return false;
+            Jwts.parser().setSigningKey(APP_SECRET).parseClaimsJws(jwtToken);
+        } catch (Exception e) {
+            e.printStackTrace();
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * 根据token获取会员id
+     * @param request
+     * @return
+     */
+    public static String getMemberIdByJwtToken(HttpServletRequest request) {
+        String jwtToken = request.getHeader("token");
+        if(StringUtils.isEmpty(jwtToken)) return "";
+        Jws<Claims> claimsJws = Jwts.parser().setSigningKey(APP_SECRET).parseClaimsJws(jwtToken);
+        Claims claims = claimsJws.getBody();
+        return (String)claims.get("id");
+    }
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/mapper/UserMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/mapper/UserMapper.java b/service/service_acl/src/main/java/com/atguigu/acl/mapper/UserMapper.java
new file mode 100644
--- /dev/null	(date 1611317124930)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/mapper/UserMapper.java	(date 1611317124930)
@@ -0,0 +1,16 @@
+package com.atguigu.acl.mapper;
+
+import com.atguigu.acl.entity.User;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 用户表 Mapper 接口
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+public interface UserMapper extends BaseMapper<User> {
+
+}
Index: common/common_utils/src/main/java/com/atguigu/Result/R.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/common_utils/src/main/java/com/atguigu/Result/R.java b/common/common_utils/src/main/java/com/atguigu/Result/R.java
new file mode 100644
--- /dev/null	(date 1609049700396)
+++ b/common/common_utils/src/main/java/com/atguigu/Result/R.java	(date 1609049700396)
@@ -0,0 +1,68 @@
+package com.atguigu.Result;
+
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+
+import java.util.HashMap;
+import java.util.Map;
+@Data
+public class R {
+
+    @ApiModelProperty(value = "是否成功")
+    private Boolean success;
+
+    @ApiModelProperty(value = "返回码")
+    private Integer code;
+
+    @ApiModelProperty(value = "返回消息")
+    private String message;
+
+    @ApiModelProperty(value = "返回数据")
+    private Map<String, Object> data = new HashMap<String, Object>();
+
+    //把构造方法私有
+    private R() {}
+
+    //成功静态方法
+    public static R ok() {
+        R r = new R();
+        r.setSuccess(true);
+        r.setCode(ResultCode.SECCESS);
+        r.setMessage("成功");
+        return r;
+    }
+
+    //失败静态方法
+    public static R error() {
+        R r = new R();
+        r.setSuccess(false);
+        r.setCode(ResultCode.ERROR);
+        r.setMessage("失败");
+        return r;
+    }
+
+    public R success(Boolean success){
+        this.setSuccess(success);
+        return this;
+    }
+
+    public R message(String message){
+        this.setMessage(message);
+        return this;
+    }
+
+    public R code(Integer code){
+        this.setCode(code);
+        return this;
+    }
+
+    public R data(String key, Object value){
+        this.data.put(key, value);
+        return this;
+    }
+
+    public R data(Map<String, Object> map){
+        this.setData(map);
+        return this;
+    }
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/mapper/PermissionMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/mapper/PermissionMapper.java b/service/service_acl/src/main/java/com/atguigu/acl/mapper/PermissionMapper.java
new file mode 100644
--- /dev/null	(date 1611317124857)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/mapper/PermissionMapper.java	(date 1611317124857)
@@ -0,0 +1,16 @@
+package com.atguigu.acl.mapper;
+
+import com.atguigu.acl.entity.Permission;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 权限 Mapper 接口
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+public interface PermissionMapper extends BaseMapper<Permission> {
+
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/mapper/RolePermissionMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/mapper/RolePermissionMapper.java b/service/service_acl/src/main/java/com/atguigu/acl/mapper/RolePermissionMapper.java
new file mode 100644
--- /dev/null	(date 1611317124909)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/mapper/RolePermissionMapper.java	(date 1611317124909)
@@ -0,0 +1,16 @@
+package com.atguigu.acl.mapper;
+
+import com.atguigu.acl.entity.RolePermission;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 角色权限 Mapper 接口
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+public interface RolePermissionMapper extends BaseMapper<RolePermission> {
+
+}
Index: common/common_utils/src/main/java/com/atguigu/Result/MD5.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/common_utils/src/main/java/com/atguigu/Result/MD5.java b/common/common_utils/src/main/java/com/atguigu/Result/MD5.java
new file mode 100644
--- /dev/null	(date 1610455888385)
+++ b/common/common_utils/src/main/java/com/atguigu/Result/MD5.java	(date 1610455888385)
@@ -0,0 +1,36 @@
+package com.atguigu.Result;
+
+import java.security.MessageDigest;
+import java.security.NoSuchAlgorithmException;
+
+
+public final class MD5 {
+
+    public static String encrypt(String strSrc) {
+        try {
+            char hexChars[] = { '0', '1', '2', '3', '4', '5', '6', '7', '8',
+                    '9', 'a', 'b', 'c', 'd', 'e', 'f' };
+            byte[] bytes = strSrc.getBytes();
+            MessageDigest md = MessageDigest.getInstance("MD5");
+            md.update(bytes);
+            bytes = md.digest();
+            int j = bytes.length;
+            char[] chars = new char[j * 2];
+            int k = 0;
+            for (int i = 0; i < bytes.length; i++) {
+                byte b = bytes[i];
+                chars[k++] = hexChars[b >>> 4 & 0xf];
+                chars[k++] = hexChars[b & 0xf];
+            }
+            return new String(chars);
+        } catch (NoSuchAlgorithmException e) {
+            e.printStackTrace();
+            throw new RuntimeException("MD5加密出错！！+" + e);
+        }
+    }
+
+    public static void main(String[] args) {
+        System.out.println(MD5.encrypt("111111"));
+    }
+
+}
Index: common/common_utils/src/main/java/com/atguigu/Result/RandomUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/common_utils/src/main/java/com/atguigu/Result/RandomUtil.java b/common/common_utils/src/main/java/com/atguigu/Result/RandomUtil.java
new file mode 100644
--- /dev/null	(date 1610455888382)
+++ b/common/common_utils/src/main/java/com/atguigu/Result/RandomUtil.java	(date 1610455888382)
@@ -0,0 +1,64 @@
+package com.atguigu.Result;
+
+import java.text.DecimalFormat;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Random;
+
+/**
+ * 获取随机数
+ * 
+ * @author qianyi
+ *
+ */
+public class RandomUtil {
+
+	private static final Random random = new Random();
+
+	private static final DecimalFormat fourdf = new DecimalFormat("0000");
+
+	private static final DecimalFormat sixdf = new DecimalFormat("000000");
+
+	public static String getFourBitRandom() {
+		return fourdf.format(random.nextInt(10000));
+	}
+
+	public static String getSixBitRandom() {
+		return sixdf.format(random.nextInt(1000000));
+	}
+
+	/**
+	 * 给定数组，抽取n个数据
+	 * @param list
+	 * @param n
+	 * @return
+	 */
+	public static ArrayList getRandom(List list, int n) {
+
+		Random random = new Random();
+
+		HashMap<Object, Object> hashMap = new HashMap<Object, Object>();
+
+		// 生成随机数字并存入HashMap
+		for (int i = 0; i < list.size(); i++) {
+
+			int number = random.nextInt(100) + 1;
+
+			hashMap.put(number, i);
+		}
+
+		// 从HashMap导入数组
+		Object[] robjs = hashMap.values().toArray();
+
+		ArrayList r = new ArrayList();
+
+		// 遍历数组并打印数据
+		for (int i = 0; i < n; i++) {
+			r.add(list.get((int) robjs[i]));
+			System.out.print(list.get((int) robjs[i]) + "\t");
+		}
+		System.out.print("\n");
+		return r;
+	}
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/service/UserService.java b/service/service_acl/src/main/java/com/atguigu/acl/service/UserService.java
new file mode 100644
--- /dev/null	(date 1611317124935)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/service/UserService.java	(date 1611317124935)
@@ -0,0 +1,16 @@
+package com.atguigu.acl.service;
+
+import com.atguigu.acl.entity.User;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * 用户表 服务类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+public interface UserService extends IService<User> {
+
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/mapper/UserRoleMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/mapper/UserRoleMapper.java b/service/service_acl/src/main/java/com/atguigu/acl/mapper/UserRoleMapper.java
new file mode 100644
--- /dev/null	(date 1611317124950)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/mapper/UserRoleMapper.java	(date 1611317124950)
@@ -0,0 +1,16 @@
+package com.atguigu.acl.mapper;
+
+import com.atguigu.acl.entity.UserRole;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ *  Mapper 接口
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+public interface UserRoleMapper extends BaseMapper<UserRole> {
+
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/mapper/RoleMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/mapper/RoleMapper.java b/service/service_acl/src/main/java/com/atguigu/acl/mapper/RoleMapper.java
new file mode 100644
--- /dev/null	(date 1611317124885)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/mapper/RoleMapper.java	(date 1611317124885)
@@ -0,0 +1,16 @@
+package com.atguigu.acl.mapper;
+
+import com.atguigu.acl.entity.Role;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ *  Mapper 接口
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+public interface RoleMapper extends BaseMapper<Role> {
+
+}
Index: common/common_utils/src/main/java/com/atguigu/Result/ResultCode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/common_utils/src/main/java/com/atguigu/Result/ResultCode.java b/common/common_utils/src/main/java/com/atguigu/Result/ResultCode.java
new file mode 100644
--- /dev/null	(date 1609144363999)
+++ b/common/common_utils/src/main/java/com/atguigu/Result/ResultCode.java	(date 1609144363999)
@@ -0,0 +1,6 @@
+package com.atguigu.Result;
+
+public interface ResultCode {
+    public static Integer SECCESS = 20000;
+    public static Integer ERROR = 20001;
+}
Index: common/service_base/src/main/java/com/atguigu/servicebase/RedisConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/service_base/src/main/java/com/atguigu/servicebase/RedisConfig.java b/common/service_base/src/main/java/com/atguigu/servicebase/RedisConfig.java
new file mode 100644
--- /dev/null	(date 1610104463189)
+++ b/common/service_base/src/main/java/com/atguigu/servicebase/RedisConfig.java	(date 1610104463189)
@@ -0,0 +1,63 @@
+package com.atguigu.servicebase;
+
+import com.fasterxml.jackson.annotation.JsonAutoDetect;
+import com.fasterxml.jackson.annotation.PropertyAccessor;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import org.springframework.cache.CacheManager;
+import org.springframework.cache.annotation.CachingConfigurerSupport;
+import org.springframework.cache.annotation.EnableCaching;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.data.redis.cache.RedisCacheConfiguration;
+import org.springframework.data.redis.cache.RedisCacheManager;
+import org.springframework.data.redis.connection.RedisConnectionFactory;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;
+import org.springframework.data.redis.serializer.RedisSerializationContext;
+import org.springframework.data.redis.serializer.RedisSerializer;
+import org.springframework.data.redis.serializer.StringRedisSerializer;
+
+import java.time.Duration;
+
+@EnableCaching
+@Configuration
+public class RedisConfig extends CachingConfigurerSupport {
+    @Bean
+    public RedisTemplate<String, Object> redisTemplate(RedisConnectionFactory factory) {
+        RedisTemplate<String, Object> template = new RedisTemplate<>();
+        RedisSerializer<String> redisSerializer = new StringRedisSerializer();
+        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class);
+        ObjectMapper om = new ObjectMapper();
+        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);
+        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);
+        jackson2JsonRedisSerializer.setObjectMapper(om);
+        template.setConnectionFactory(factory);
+        //key序列化方式
+        template.setKeySerializer(redisSerializer);
+        //value序列化
+        template.setValueSerializer(jackson2JsonRedisSerializer);
+        //value hashmap序列化
+        template.setHashValueSerializer(jackson2JsonRedisSerializer);
+        return template;
+    }
+    @Bean
+    public CacheManager cacheManager(RedisConnectionFactory factory) {
+        RedisSerializer<String> redisSerializer = new StringRedisSerializer();
+        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class);
+        //解决查询缓存转换异常的问题
+        ObjectMapper om = new ObjectMapper();
+        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);
+        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);
+        jackson2JsonRedisSerializer.setObjectMapper(om);
+        // 配置序列化（解决乱码的问题）,过期时间600秒
+        RedisCacheConfiguration config = RedisCacheConfiguration.defaultCacheConfig()
+                .entryTtl(Duration.ofSeconds(600))
+                .serializeKeysWith(RedisSerializationContext.SerializationPair.fromSerializer(redisSerializer))
+                .serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(jackson2JsonRedisSerializer))
+                .disableCachingNullValues();
+        RedisCacheManager cacheManager = RedisCacheManager.builder(factory)
+                .cacheDefaults(config)
+                .build();
+        return cacheManager;
+    }
+}
\ No newline at end of file
Index: service/service_acl/src/main/java/com/atguigu/acl/service/PermissionService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/service/PermissionService.java b/service/service_acl/src/main/java/com/atguigu/acl/service/PermissionService.java
new file mode 100644
--- /dev/null	(date 1611321354265)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/service/PermissionService.java	(date 1611321354265)
@@ -0,0 +1,22 @@
+package com.atguigu.acl.service;
+
+import com.atguigu.acl.entity.Permission;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+import java.util.List;
+
+/**
+ * <p>
+ * 权限 服务类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+public interface PermissionService extends IService<Permission> {
+
+    //获取所有菜单接口
+    List<Permission> getAllPermission();
+
+    void removeChinderById(String id);
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/service/UserRoleService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/service/UserRoleService.java b/service/service_acl/src/main/java/com/atguigu/acl/service/UserRoleService.java
new file mode 100644
--- /dev/null	(date 1611317124954)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/service/UserRoleService.java	(date 1611317124954)
@@ -0,0 +1,16 @@
+package com.atguigu.acl.service;
+
+import com.atguigu.acl.entity.UserRole;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ *  服务类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+public interface UserRoleService extends IService<UserRole> {
+
+}
Index: common/service_base/src/main/java/com/atguigu/servicebase/SwaggerConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/service_base/src/main/java/com/atguigu/servicebase/SwaggerConfig.java b/common/service_base/src/main/java/com/atguigu/servicebase/SwaggerConfig.java
new file mode 100644
--- /dev/null	(date 1582514242000)
+++ b/common/service_base/src/main/java/com/atguigu/servicebase/SwaggerConfig.java	(date 1582514242000)
@@ -0,0 +1,39 @@
+package com.atguigu.servicebase;
+
+import com.google.common.base.Predicates;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import springfox.documentation.builders.ApiInfoBuilder;
+import springfox.documentation.builders.PathSelectors;
+import springfox.documentation.service.ApiInfo;
+import springfox.documentation.service.Contact;
+import springfox.documentation.spi.DocumentationType;
+import springfox.documentation.spring.web.plugins.Docket;
+import springfox.documentation.swagger2.annotations.EnableSwagger2;
+
+@Configuration//配置类
+@EnableSwagger2 //swagger注解
+public class SwaggerConfig {
+
+    @Bean
+    public Docket webApiConfig(){
+        return new Docket(DocumentationType.SWAGGER_2)
+                .groupName("webApi")
+                .apiInfo(webApiInfo())
+                .select()
+                .paths(Predicates.not(PathSelectors.regex("/admin/.*")))
+                .paths(Predicates.not(PathSelectors.regex("/error.*")))
+                .build();
+
+    }
+
+    private ApiInfo webApiInfo(){
+
+        return new ApiInfoBuilder()
+                .title("网站-课程中心API文档")
+                .description("本文档描述了课程中心微服务接口定义")
+                .version("1.0")
+                .contact(new Contact("java", "http://atguigu.com", "1123@qq.com"))
+                .build();
+    }
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/service/RolePermissionService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/service/RolePermissionService.java b/service/service_acl/src/main/java/com/atguigu/acl/service/RolePermissionService.java
new file mode 100644
--- /dev/null	(date 1611317124915)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/service/RolePermissionService.java	(date 1611317124915)
@@ -0,0 +1,16 @@
+package com.atguigu.acl.service;
+
+import com.atguigu.acl.entity.RolePermission;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * 角色权限 服务类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+public interface RolePermissionService extends IService<RolePermission> {
+
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/service/RoleService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/service/RoleService.java b/service/service_acl/src/main/java/com/atguigu/acl/service/RoleService.java
new file mode 100644
--- /dev/null	(date 1611317124892)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/service/RoleService.java	(date 1611317124892)
@@ -0,0 +1,16 @@
+package com.atguigu.acl.service;
+
+import com.atguigu.acl.entity.Role;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ *  服务类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+public interface RoleService extends IService<Role> {
+
+}
Index: service/service_acl/src/main/java/com/atguigu/acl/controller/RolePermissionController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/controller/RolePermissionController.java b/service/service_acl/src/main/java/com/atguigu/acl/controller/RolePermissionController.java
new file mode 100644
--- /dev/null	(date 1611317124920)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/controller/RolePermissionController.java	(date 1611317124920)
@@ -0,0 +1,21 @@
+package com.atguigu.acl.controller;
+
+
+import org.springframework.web.bind.annotation.RequestMapping;
+
+import org.springframework.web.bind.annotation.RestController;
+
+/**
+ * <p>
+ * 角色权限 前端控制器
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+@RestController
+@RequestMapping("/acl/role-permission")
+public class RolePermissionController {
+
+}
+
Index: service/service_acl/src/main/java/com/atguigu/acl/controller/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/controller/UserController.java b/service/service_acl/src/main/java/com/atguigu/acl/controller/UserController.java
new file mode 100644
--- /dev/null	(date 1611317124940)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/controller/UserController.java	(date 1611317124940)
@@ -0,0 +1,21 @@
+package com.atguigu.acl.controller;
+
+
+import org.springframework.web.bind.annotation.RequestMapping;
+
+import org.springframework.web.bind.annotation.RestController;
+
+/**
+ * <p>
+ * 用户表 前端控制器
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+@RestController
+@RequestMapping("/acl/user")
+public class UserController {
+
+}
+
Index: service/service_acl/src/main/java/com/atguigu/acl/controller/UserRoleController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/controller/UserRoleController.java b/service/service_acl/src/main/java/com/atguigu/acl/controller/UserRoleController.java
new file mode 100644
--- /dev/null	(date 1611317124961)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/controller/UserRoleController.java	(date 1611317124961)
@@ -0,0 +1,21 @@
+package com.atguigu.acl.controller;
+
+
+import org.springframework.web.bind.annotation.RequestMapping;
+
+import org.springframework.web.bind.annotation.RestController;
+
+/**
+ * <p>
+ *  前端控制器
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+@RestController
+@RequestMapping("/acl/user-role")
+public class UserRoleController {
+
+}
+
Index: service/service_acl/src/main/java/com/atguigu/acl/controller/RoleController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/controller/RoleController.java b/service/service_acl/src/main/java/com/atguigu/acl/controller/RoleController.java
new file mode 100644
--- /dev/null	(date 1611317124897)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/controller/RoleController.java	(date 1611317124897)
@@ -0,0 +1,21 @@
+package com.atguigu.acl.controller;
+
+
+import org.springframework.web.bind.annotation.RequestMapping;
+
+import org.springframework.web.bind.annotation.RestController;
+
+/**
+ * <p>
+ *  前端控制器
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+@RestController
+@RequestMapping("/acl/role")
+public class RoleController {
+
+}
+
Index: service/service_acl/target/classes/com/atguigu/acl/mapper/xml/UserMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/target/classes/com/atguigu/acl/mapper/xml/UserMapper.xml b/service/service_acl/target/classes/com/atguigu/acl/mapper/xml/UserMapper.xml
new file mode 100644
--- /dev/null	(date 1611318593867)
+++ b/service/service_acl/target/classes/com/atguigu/acl/mapper/xml/UserMapper.xml	(date 1611318593867)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.acl.mapper.UserMapper">
+
+</mapper>
Index: service/service_acl/target/classes/com/atguigu/acl/mapper/xml/RolePermissionMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/target/classes/com/atguigu/acl/mapper/xml/RolePermissionMapper.xml b/service/service_acl/target/classes/com/atguigu/acl/mapper/xml/RolePermissionMapper.xml
new file mode 100644
--- /dev/null	(date 1611318593867)
+++ b/service/service_acl/target/classes/com/atguigu/acl/mapper/xml/RolePermissionMapper.xml	(date 1611318593867)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.acl.mapper.RolePermissionMapper">
+
+</mapper>
Index: service/service_acl/src/main/java/com/atguigu/acl/controller/PermissionController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/src/main/java/com/atguigu/acl/controller/PermissionController.java b/service/service_acl/src/main/java/com/atguigu/acl/controller/PermissionController.java
new file mode 100644
--- /dev/null	(date 1611321354261)
+++ b/service/service_acl/src/main/java/com/atguigu/acl/controller/PermissionController.java	(date 1611321354261)
@@ -0,0 +1,43 @@
+package com.atguigu.acl.controller;
+
+
+import com.atguigu.Result.R;
+import com.atguigu.acl.entity.Permission;
+import com.atguigu.acl.service.PermissionService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.*;
+
+import java.util.List;
+
+/**
+ * <p>
+ * 权限 前端控制器
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-22
+ */
+@RestController
+@RequestMapping("/acl/permission")
+public class PermissionController {
+
+    @Autowired
+    private PermissionService service;
+
+    //获取所有菜单接口
+    @GetMapping("getAllPermission")
+    public R getAllPermission(){
+        List<Permission> permissions =  service.getAllPermission();
+
+        return R.ok().data("list",permissions);
+    }
+
+    //删除菜单接口
+    @DeleteMapping("deletePermission/{id}")
+    public R deletePermission(@PathVariable String id){
+        service.removeChinderById(id);
+        return R.ok();
+    }
+
+}
+
Index: service/service_acl/target/classes/com/atguigu/acl/mapper/xml/PermissionMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/target/classes/com/atguigu/acl/mapper/xml/PermissionMapper.xml b/service/service_acl/target/classes/com/atguigu/acl/mapper/xml/PermissionMapper.xml
new file mode 100644
--- /dev/null	(date 1611318593866)
+++ b/service/service_acl/target/classes/com/atguigu/acl/mapper/xml/PermissionMapper.xml	(date 1611318593866)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.acl.mapper.PermissionMapper">
+
+</mapper>
Index: service/service_acl/target/classes/com/atguigu/acl/mapper/xml/RoleMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/target/classes/com/atguigu/acl/mapper/xml/RoleMapper.xml b/service/service_acl/target/classes/com/atguigu/acl/mapper/xml/RoleMapper.xml
new file mode 100644
--- /dev/null	(date 1611318593867)
+++ b/service/service_acl/target/classes/com/atguigu/acl/mapper/xml/RoleMapper.xml	(date 1611318593867)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.acl.mapper.RoleMapper">
+
+</mapper>
Index: service/service_acl/target/classes/com/atguigu/acl/mapper/xml/UserRoleMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/target/classes/com/atguigu/acl/mapper/xml/UserRoleMapper.xml b/service/service_acl/target/classes/com/atguigu/acl/mapper/xml/UserRoleMapper.xml
new file mode 100644
--- /dev/null	(date 1611318593868)
+++ b/service/service_acl/target/classes/com/atguigu/acl/mapper/xml/UserRoleMapper.xml	(date 1611318593868)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.acl.mapper.UserRoleMapper">
+
+</mapper>
Index: service/service_crm/src/main/java/com/atguigu/crm/entity/Banner.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_crm/src/main/java/com/atguigu/crm/entity/Banner.java b/service/service_crm/src/main/java/com/atguigu/crm/entity/Banner.java
new file mode 100644
--- /dev/null	(date 1610019626985)
+++ b/service/service_crm/src/main/java/com/atguigu/crm/entity/Banner.java	(date 1610019626985)
@@ -0,0 +1,57 @@
+package com.atguigu.crm.entity;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import java.util.Date;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
+
+/**
+ * <p>
+ * 首页banner表
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-07
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@Accessors(chain = true)
+@TableName("crm_banner")
+@ApiModel(value="Banner对象", description="首页banner表")
+public class Banner implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @ApiModelProperty(value = "ID")
+    @TableId(value = "id", type = IdType.ID_WORKER)
+    private String id;
+
+    @ApiModelProperty(value = "标题")
+    private String title;
+
+    @ApiModelProperty(value = "图片地址")
+    private String imageUrl;
+
+    @ApiModelProperty(value = "链接地址")
+    private String linkUrl;
+
+    @ApiModelProperty(value = "排序")
+    private Integer sort;
+
+    @ApiModelProperty(value = "逻辑删除 1（true）已删除， 0（false）未删除")
+    private Integer isDeleted;
+
+    @ApiModelProperty(value = "创建时间")
+    private Date gmtCreate;
+
+    @ApiModelProperty(value = "更新时间")
+    private Date gmtModified;
+
+
+}
Index: common/service_base/src/main/java/com/atguigu/servicebase/handler/MyMetaObjectHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/service_base/src/main/java/com/atguigu/servicebase/handler/MyMetaObjectHandler.java b/common/service_base/src/main/java/com/atguigu/servicebase/handler/MyMetaObjectHandler.java
new file mode 100644
--- /dev/null	(date 1609051106161)
+++ b/common/service_base/src/main/java/com/atguigu/servicebase/handler/MyMetaObjectHandler.java	(date 1609051106161)
@@ -0,0 +1,21 @@
+package com.atguigu.servicebase.handler;
+
+import com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;
+import org.apache.ibatis.reflection.MetaObject;
+import org.springframework.stereotype.Component;
+
+import java.util.Date;
+
+@Component
+public class MyMetaObjectHandler implements MetaObjectHandler {
+    @Override
+    public void insertFill(MetaObject metaObject) {
+        this.setFieldValByName("gmtCreate",new Date(),metaObject);
+        this.setFieldValByName("gmtModified",new Date(),metaObject);
+    }
+
+    @Override
+    public void updateFill(MetaObject metaObject) {
+        this.setFieldValByName("gmtModified",new Date(),metaObject);
+    }
+}
Index: common/service_base/src/main/java/com/atguigu/servicebase/exception/MyExceptionHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/service_base/src/main/java/com/atguigu/servicebase/exception/MyExceptionHandler.java b/common/service_base/src/main/java/com/atguigu/servicebase/exception/MyExceptionHandler.java
new file mode 100644
--- /dev/null	(date 1609051632404)
+++ b/common/service_base/src/main/java/com/atguigu/servicebase/exception/MyExceptionHandler.java	(date 1609051632404)
@@ -0,0 +1,17 @@
+package com.atguigu.servicebase.exception;
+
+import com.atguigu.Result.R;
+import org.springframework.web.bind.annotation.ControllerAdvice;
+import org.springframework.web.bind.annotation.ExceptionHandler;
+import org.springframework.web.bind.annotation.ResponseBody;
+
+
+@ControllerAdvice
+public class MyExceptionHandler {
+    @ResponseBody
+    @ExceptionHandler(Exception.class)
+    public R exception(Exception e){
+        e.printStackTrace();
+        return R.error().message("调用了公共异常处理模块");
+    }
+}
Index: service/service_crm/src/main/java/com/atguigu/crm/service/BannerService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_crm/src/main/java/com/atguigu/crm/service/BannerService.java b/service/service_crm/src/main/java/com/atguigu/crm/service/BannerService.java
new file mode 100644
--- /dev/null	(date 1610099739984)
+++ b/service/service_crm/src/main/java/com/atguigu/crm/service/BannerService.java	(date 1610099739984)
@@ -0,0 +1,19 @@
+package com.atguigu.crm.service;
+
+import com.atguigu.crm.entity.Banner;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+import java.util.List;
+
+/**
+ * <p>
+ * 首页banner表 服务类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-07
+ */
+public interface BannerService extends IService<Banner> {
+
+    List<Banner> getAll();
+}
Index: common/common_utils/src/main/java/com/atguigu/Result/webVo/CoursePublishVoOrder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/common_utils/src/main/java/com/atguigu/Result/webVo/CoursePublishVoOrder.java b/common/common_utils/src/main/java/com/atguigu/Result/webVo/CoursePublishVoOrder.java
new file mode 100644
--- /dev/null	(date 1610781813499)
+++ b/common/common_utils/src/main/java/com/atguigu/Result/webVo/CoursePublishVoOrder.java	(date 1610781813499)
@@ -0,0 +1,56 @@
+package com.atguigu.Result.webVo;
+
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+
+import java.math.BigDecimal;
+
+@Data
+public class CoursePublishVoOrder {
+    private String id;
+
+    @ApiModelProperty(value = "课程标题")
+    private String title;
+
+    @ApiModelProperty(value = "课程销售价格，设置为0则可免费观看")
+    private BigDecimal price;
+
+    @ApiModelProperty(value = "总课时")
+    private Integer lessonNum;
+
+    @ApiModelProperty(value = "课程封面图片路径")
+    private String cover;
+
+    @ApiModelProperty(value = "销售数量")
+    private Long buyCount;
+
+    @ApiModelProperty(value = "浏览数量")
+    private Long viewCount;
+
+    @ApiModelProperty(value = "课程简介")
+    private String description;
+
+    @ApiModelProperty(value = "讲师ID")
+    private String teacherId;
+
+    @ApiModelProperty(value = "讲师姓名")
+    private String teacherName;
+
+    @ApiModelProperty(value = "讲师资历,一句话说明讲师")
+    private String intro;
+
+    @ApiModelProperty(value = "讲师头像")
+    private String avatar;
+
+    @ApiModelProperty(value = "课程一级类别ID")
+    private String subjectLevelOneId;
+
+    @ApiModelProperty(value = "类别一级名称")
+    private String subjectLevelOne;
+
+    @ApiModelProperty(value = "课程二级类别ID")
+    private String subjectLevelTwoId;
+
+    @ApiModelProperty(value = "类别二级名称")
+    private String subjectLevelTwo;
+}
Index: common/common_utils/src/main/java/com/atguigu/Result/webVo/Memberorder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/common_utils/src/main/java/com/atguigu/Result/webVo/Memberorder.java b/common/common_utils/src/main/java/com/atguigu/Result/webVo/Memberorder.java
new file mode 100644
--- /dev/null	(date 1610777817534)
+++ b/common/common_utils/src/main/java/com/atguigu/Result/webVo/Memberorder.java	(date 1610777817534)
@@ -0,0 +1,73 @@
+package com.atguigu.Result.webVo;
+
+import com.baomidou.mybatisplus.annotation.*;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
+
+import java.io.Serializable;
+import java.util.Date;
+
+/**
+ * <p>
+ * 会员表
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-12
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@Accessors(chain = true)
+@TableName("ucenter_member")
+@ApiModel(value="Member对象", description="会员表")
+public class Memberorder implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @ApiModelProperty(value = "会员id")
+    @TableId(value = "id", type = IdType.ID_WORKER_STR)
+    private String id;
+
+    @ApiModelProperty(value = "微信openid")
+    private String openid;
+
+    @ApiModelProperty(value = "手机号")
+    private String mobile;
+
+    @ApiModelProperty(value = "密码")
+    private String password;
+
+    @ApiModelProperty(value = "昵称")
+    private String nickname;
+
+    @ApiModelProperty(value = "性别 1 女，2 男")
+    private Integer sex;
+
+    @ApiModelProperty(value = "年龄")
+    private Integer age;
+
+    @ApiModelProperty(value = "用户头像")
+    private String avatar;
+
+    @ApiModelProperty(value = "用户签名")
+    private String sign;
+
+    @ApiModelProperty(value = "是否禁用 1（true）已禁用，  0（false）未禁用")
+    private Boolean isDisabled;
+
+    @ApiModelProperty(value = "逻辑删除 1（true）已删除， 0（false）未删除")
+    private Boolean isDeleted;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField(fill = FieldFill.INSERT)
+    private Date gmtCreate;
+
+    @ApiModelProperty(value = "更新时间")
+    @TableField(fill = FieldFill.INSERT_UPDATE)
+    private Date gmtModified;
+
+
+}
Index: service/service_crm/src/main/java/com/atguigu/crm/mapper/BannerMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_crm/src/main/java/com/atguigu/crm/mapper/BannerMapper.java b/service/service_crm/src/main/java/com/atguigu/crm/mapper/BannerMapper.java
new file mode 100644
--- /dev/null	(date 1610019626988)
+++ b/service/service_crm/src/main/java/com/atguigu/crm/mapper/BannerMapper.java	(date 1610019626988)
@@ -0,0 +1,16 @@
+package com.atguigu.crm.mapper;
+
+import com.atguigu.crm.entity.Banner;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 首页banner表 Mapper 接口
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-07
+ */
+public interface BannerMapper extends BaseMapper<Banner> {
+
+}
Index: common/spring_security/src/main/java/com/atguigu/serurity/entity/SecurityUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/spring_security/src/main/java/com/atguigu/serurity/entity/SecurityUser.java b/common/spring_security/src/main/java/com/atguigu/serurity/entity/SecurityUser.java
new file mode 100644
--- /dev/null	(date 1578814884000)
+++ b/common/spring_security/src/main/java/com/atguigu/serurity/entity/SecurityUser.java	(date 1578814884000)
@@ -0,0 +1,82 @@
+package com.atguigu.serurity.entity;
+
+import lombok.Data;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.security.core.GrantedAuthority;
+import org.springframework.security.core.authority.SimpleGrantedAuthority;
+import org.springframework.security.core.userdetails.UserDetails;
+import org.springframework.util.StringUtils;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.List;
+
+/**
+ * <p>
+ * 安全认证用户详情信息
+ * </p>
+ *
+ * @author qy
+ * @since 2019-11-08
+ */
+@Data
+@Slf4j
+public class SecurityUser implements UserDetails {
+
+    //当前登录用户
+    private transient User currentUserInfo;
+
+    //当前权限
+    private List<String> permissionValueList;
+
+    public SecurityUser() {
+    }
+
+    public SecurityUser(User user) {
+        if (user != null) {
+            this.currentUserInfo = user;
+        }
+    }
+
+    @Override
+    public Collection<? extends GrantedAuthority> getAuthorities() {
+        Collection<GrantedAuthority> authorities = new ArrayList<>();
+        for(String permissionValue : permissionValueList) {
+            if(StringUtils.isEmpty(permissionValue)) continue;
+            SimpleGrantedAuthority authority = new SimpleGrantedAuthority(permissionValue);
+            authorities.add(authority);
+        }
+
+        return authorities;
+    }
+
+    @Override
+    public String getPassword() {
+        return currentUserInfo.getPassword();
+    }
+
+    @Override
+    public String getUsername() {
+        return currentUserInfo.getUsername();
+    }
+
+    @Override
+    public boolean isAccountNonExpired() {
+        return true;
+    }
+
+    @Override
+    public boolean isAccountNonLocked() {
+        return true;
+    }
+
+    @Override
+    public boolean isCredentialsNonExpired() {
+        return true;
+    }
+
+    @Override
+    public boolean isEnabled() {
+        return true;
+    }
+}
Index: service/service_crm/target/classes/com/atguigu/crm/mapper/xml/BannerMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_crm/target/classes/com/atguigu/crm/mapper/xml/BannerMapper.xml b/service/service_crm/target/classes/com/atguigu/crm/mapper/xml/BannerMapper.xml
new file mode 100644
--- /dev/null	(date 1610104892799)
+++ b/service/service_crm/target/classes/com/atguigu/crm/mapper/xml/BannerMapper.xml	(date 1610104892799)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.crm.mapper.BannerMapper">
+
+</mapper>
Index: common/spring_security/src/main/java/com/atguigu/serurity/filter/TokenAuthenticationFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/spring_security/src/main/java/com/atguigu/serurity/filter/TokenAuthenticationFilter.java b/common/spring_security/src/main/java/com/atguigu/serurity/filter/TokenAuthenticationFilter.java
new file mode 100644
--- /dev/null	(date 1584194164000)
+++ b/common/spring_security/src/main/java/com/atguigu/serurity/filter/TokenAuthenticationFilter.java	(date 1584194164000)
@@ -0,0 +1,87 @@
+package com.atguigu.serurity.filter;
+
+import com.atguigu.commonutils.R;
+import com.atguigu.commonutils.ResponseUtil;
+import com.atguigu.serurity.security.TokenManager;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.security.authentication.AuthenticationManager;
+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
+import org.springframework.security.core.GrantedAuthority;
+import org.springframework.security.core.authority.SimpleGrantedAuthority;
+import org.springframework.security.core.context.SecurityContextHolder;
+import org.springframework.security.web.authentication.www.BasicAuthenticationFilter;
+import org.springframework.util.StringUtils;
+
+import javax.servlet.FilterChain;
+import javax.servlet.ServletException;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.List;
+
+/**
+ * <p>
+ * 访问过滤器
+ * </p>
+ *
+ * @author qy
+ * @since 2019-11-08
+ */
+public class TokenAuthenticationFilter extends BasicAuthenticationFilter {
+    private TokenManager tokenManager;
+    private RedisTemplate redisTemplate;
+
+    public TokenAuthenticationFilter(AuthenticationManager authManager, TokenManager tokenManager,RedisTemplate redisTemplate) {
+        super(authManager);
+        this.tokenManager = tokenManager;
+        this.redisTemplate = redisTemplate;
+    }
+
+    @Override
+    protected void doFilterInternal(HttpServletRequest req, HttpServletResponse res, FilterChain chain)
+            throws IOException, ServletException {
+        logger.info("================="+req.getRequestURI());
+        if(req.getRequestURI().indexOf("admin") == -1) {
+            chain.doFilter(req, res);
+            return;
+        }
+
+        UsernamePasswordAuthenticationToken authentication = null;
+        try {
+            authentication = getAuthentication(req);
+        } catch (Exception e) {
+            ResponseUtil.out(res, R.error());
+        }
+
+        if (authentication != null) {
+            SecurityContextHolder.getContext().setAuthentication(authentication);
+        } else {
+            ResponseUtil.out(res, R.error());
+        }
+        chain.doFilter(req, res);
+    }
+
+    private UsernamePasswordAuthenticationToken getAuthentication(HttpServletRequest request) {
+        // token置于header里
+        String token = request.getHeader("token");
+        if (token != null && !"".equals(token.trim())) {
+            String userName = tokenManager.getUserFromToken(token);
+
+            List<String> permissionValueList = (List<String>) redisTemplate.opsForValue().get(userName);
+            Collection<GrantedAuthority> authorities = new ArrayList<>();
+            for(String permissionValue : permissionValueList) {
+                if(StringUtils.isEmpty(permissionValue)) continue;
+                SimpleGrantedAuthority authority = new SimpleGrantedAuthority(permissionValue);
+                authorities.add(authority);
+            }
+
+            if (!StringUtils.isEmpty(userName)) {
+                return new UsernamePasswordAuthenticationToken(userName, token, authorities);
+            }
+            return null;
+        }
+        return null;
+    }
+}
\ No newline at end of file
Index: common/spring_security/src/main/java/com/atguigu/serurity/config/TokenWebSecurityConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/spring_security/src/main/java/com/atguigu/serurity/config/TokenWebSecurityConfig.java b/common/spring_security/src/main/java/com/atguigu/serurity/config/TokenWebSecurityConfig.java
new file mode 100644
--- /dev/null	(date 1584276396000)
+++ b/common/spring_security/src/main/java/com/atguigu/serurity/config/TokenWebSecurityConfig.java	(date 1584276396000)
@@ -0,0 +1,88 @@
+package com.atguigu.serurity.config;
+
+import com.atguigu.serurity.filter.TokenAuthenticationFilter;
+import com.atguigu.serurity.filter.TokenLoginFilter;
+import com.atguigu.serurity.security.DefaultPasswordEncoder;
+import com.atguigu.serurity.security.TokenLogoutHandler;
+import com.atguigu.serurity.security.TokenManager;
+import com.atguigu.serurity.security.UnauthorizedEntryPoint;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
+import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;
+import org.springframework.security.config.annotation.web.builders.HttpSecurity;
+import org.springframework.security.config.annotation.web.builders.WebSecurity;
+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
+import org.springframework.security.core.userdetails.UserDetailsService;
+
+/**
+ * <p>
+ * Security配置类
+ * </p>
+ *
+ * @author qy
+ * @since 2019-11-18
+ */
+@Configuration
+@EnableWebSecurity
+@EnableGlobalMethodSecurity(prePostEnabled = true)
+public class TokenWebSecurityConfig extends WebSecurityConfigurerAdapter {
+
+    private UserDetailsService userDetailsService;
+    private TokenManager tokenManager;
+    private DefaultPasswordEncoder defaultPasswordEncoder;
+    private RedisTemplate redisTemplate;
+
+    @Autowired
+    public TokenWebSecurityConfig(UserDetailsService userDetailsService, DefaultPasswordEncoder defaultPasswordEncoder,
+                                  TokenManager tokenManager, RedisTemplate redisTemplate) {
+        this.userDetailsService = userDetailsService;
+        this.defaultPasswordEncoder = defaultPasswordEncoder;
+        this.tokenManager = tokenManager;
+        this.redisTemplate = redisTemplate;
+    }
+
+    /**
+     * 配置设置
+     * @param http
+     * @throws Exception
+     */
+    @Override
+    protected void configure(HttpSecurity http) throws Exception {
+        http.exceptionHandling()
+                .authenticationEntryPoint(new UnauthorizedEntryPoint())
+                .and().csrf().disable()
+                .authorizeRequests()
+                .anyRequest().authenticated()
+                .and().logout().logoutUrl("/admin/acl/index/logout")
+                .addLogoutHandler(new TokenLogoutHandler(tokenManager,redisTemplate)).and()
+                .addFilter(new TokenLoginFilter(authenticationManager(), tokenManager, redisTemplate))
+                .addFilter(new TokenAuthenticationFilter(authenticationManager(), tokenManager, redisTemplate)).httpBasic();
+    }
+
+    /**
+     * 密码处理
+     * @param auth
+     * @throws Exception
+     */
+    @Override
+    public void configure(AuthenticationManagerBuilder auth) throws Exception {
+        auth.userDetailsService(userDetailsService).passwordEncoder(defaultPasswordEncoder);
+    }
+
+    /**
+     * 配置哪些请求不拦截
+     * @param web
+     * @throws Exception
+     */
+    @Override
+    public void configure(WebSecurity web) throws Exception {
+//        web.ignoring().antMatchers("/api/**",
+//                "/swagger-resources/**", "/webjars/**", "/v2/**", "/swagger-ui.html/**"
+//               );
+        web.ignoring().antMatchers("/*/**"
+        );
+    }
+}
\ No newline at end of file
Index: service/service_crm/src/main/java/com/atguigu/crm/controller/BannerFront.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_crm/src/main/java/com/atguigu/crm/controller/BannerFront.java b/service/service_crm/src/main/java/com/atguigu/crm/controller/BannerFront.java
new file mode 100644
--- /dev/null	(date 1611310101810)
+++ b/service/service_crm/src/main/java/com/atguigu/crm/controller/BannerFront.java	(date 1611310101810)
@@ -0,0 +1,34 @@
+package com.atguigu.crm.controller;
+
+
+import com.atguigu.Result.R;
+import com.atguigu.crm.entity.Banner;
+import com.atguigu.crm.service.BannerService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.cache.annotation.Cacheable;
+import org.springframework.stereotype.Component;
+import org.springframework.web.bind.annotation.CrossOrigin;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+import java.util.List;
+
+
+//前端用户获取数据接口
+@RestController
+@RequestMapping("/crm/bannerfront")
+@CrossOrigin
+public class    BannerFront {
+
+    @Autowired
+    private BannerService bannerService;
+
+    //redis缓存注解
+    @Cacheable(key = "'banner'",value = "AllList")
+    @GetMapping("getList")
+    public R getList(){
+        List<Banner> banners = bannerService.getAll();
+        return R.ok().data("AllList",banners);
+    }
+}
Index: common/spring_security/src/main/java/com/atguigu/serurity/entity/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/spring_security/src/main/java/com/atguigu/serurity/entity/User.java b/common/spring_security/src/main/java/com/atguigu/serurity/entity/User.java
new file mode 100644
--- /dev/null	(date 1578814883000)
+++ b/common/spring_security/src/main/java/com/atguigu/serurity/entity/User.java	(date 1578814883000)
@@ -0,0 +1,41 @@
+package com.atguigu.serurity.entity;
+
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * 用户实体类
+ * </p>
+ *
+ * @author qy
+ * @since 2019-11-08
+ */
+@Data
+@ApiModel(description = "用户实体类")
+public class User implements Serializable {
+
+	private static final long serialVersionUID = 1L;
+
+	@ApiModelProperty(value = "微信openid")
+	private String username;
+
+	@ApiModelProperty(value = "密码")
+	private String password;
+
+	@ApiModelProperty(value = "昵称")
+	private String nickName;
+
+	@ApiModelProperty(value = "用户头像")
+	private String salt;
+
+	@ApiModelProperty(value = "用户签名")
+	private String token;
+
+}
+
+
+
Index: service/service_crm/src/main/java/com/atguigu/crm/controller/BannerController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_crm/src/main/java/com/atguigu/crm/controller/BannerController.java b/service/service_crm/src/main/java/com/atguigu/crm/controller/BannerController.java
new file mode 100644
--- /dev/null	(date 1610020792749)
+++ b/service/service_crm/src/main/java/com/atguigu/crm/controller/BannerController.java	(date 1610020792749)
@@ -0,0 +1,69 @@
+package com.atguigu.crm.controller;
+
+
+import com.atguigu.Result.R;
+import com.atguigu.crm.entity.Banner;
+import com.atguigu.crm.service.BannerService;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.*;
+
+/**
+ * <p>
+ * 首页banner表 前端控制器
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-07
+ */
+@RestController
+@RequestMapping("/crm/banner")
+@CrossOrigin
+public class BannerController {
+
+    @Autowired
+    private BannerService bannerService;
+
+    //分页获取banner
+    @GetMapping("getBanner/{current}/{limit}")
+    public R getBanner(@PathVariable long current,
+                       @PathVariable long limit){
+        Page<Banner> page = new Page<>(current,limit);
+        bannerService.page(page,null);
+
+        return R.ok().data("total",page.getTotal()).data("list",page.getRecords());
+    }
+
+    //添加banner
+    @PostMapping("addBanner")
+    public R addBanner(@RequestBody Banner banner){
+        bannerService.save(banner);
+        return R.ok();
+    }
+
+    //删除banner
+    @DeleteMapping("delete/{id}")
+    public R delete(@PathVariable long id){
+        bannerService.removeById(id);
+        return R.ok();
+    }
+
+    //编辑banner
+    @PostMapping("update")
+    public R update(@RequestBody Banner banner){
+        bannerService.updateById(banner);
+        return R.ok();
+    }
+
+    //查询单个banner
+    @GetMapping("getBanner/{id}")
+    public R getBanner(@PathVariable long id){
+        Banner banner = bannerService.getById(id);
+        return R.ok().data("banner",banner);
+    }
+
+
+
+}
+
Index: common/spring_security/src/main/java/com/atguigu/serurity/security/TokenLogoutHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/spring_security/src/main/java/com/atguigu/serurity/security/TokenLogoutHandler.java b/common/spring_security/src/main/java/com/atguigu/serurity/security/TokenLogoutHandler.java
new file mode 100644
--- /dev/null	(date 1584276271000)
+++ b/common/spring_security/src/main/java/com/atguigu/serurity/security/TokenLogoutHandler.java	(date 1584276271000)
@@ -0,0 +1,43 @@
+package com.atguigu.serurity.security;
+
+import com.atguigu.commonutils.R;
+import com.atguigu.commonutils.ResponseUtil;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.security.core.Authentication;
+import org.springframework.security.web.authentication.logout.LogoutHandler;
+
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+
+/**
+ * <p>
+ * 登出业务逻辑类
+ * </p>
+ *
+ * @author qy
+ * @since 2019-11-08
+ */
+public class TokenLogoutHandler implements LogoutHandler {
+
+    private TokenManager tokenManager;
+    private RedisTemplate redisTemplate;
+
+    public TokenLogoutHandler(TokenManager tokenManager, RedisTemplate redisTemplate) {
+        this.tokenManager = tokenManager;
+        this.redisTemplate = redisTemplate;
+    }
+
+    @Override
+    public void logout(HttpServletRequest request, HttpServletResponse response, Authentication authentication) {
+        String token = request.getHeader("token");
+        if (token != null) {
+            tokenManager.removeToken(token);
+
+            //清空当前用户缓存中的权限数据
+            String userName = tokenManager.getUserFromToken(token);
+            redisTemplate.delete(userName);
+        }
+        ResponseUtil.out(response, R.ok());
+    }
+
+}
\ No newline at end of file
Index: service/service_edu/src/main/java/com/atguigu/service/crm/courseFront.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/crm/courseFront.java b/service/service_edu/src/main/java/com/atguigu/service/crm/courseFront.java
new file mode 100644
--- /dev/null	(date 1611048109305)
+++ b/service/service_edu/src/main/java/com/atguigu/service/crm/courseFront.java	(date 1611048109305)
@@ -0,0 +1,86 @@
+package com.atguigu.service.crm;
+
+import com.alibaba.excel.event.Order;
+import com.atguigu.Result.JwtUtils;
+import com.atguigu.Result.R;
+import com.atguigu.Result.webVo.CoursePublishVoOrder;
+import com.atguigu.service.client.OrderClient;
+import com.atguigu.service.entity.EduCourse;
+import com.atguigu.service.entity.EduSubject;
+import com.atguigu.service.entity.vo.ChapterVo;
+import com.atguigu.service.entity.vo.CourseSearchVO;
+import com.atguigu.service.entity.vo.CourseWebVo;
+import com.atguigu.service.entity.vo.OneSubjectName;
+import com.atguigu.service.service.EduChapterService;
+import com.atguigu.service.service.EduCourseService;
+import com.atguigu.service.service.EduSubjectService;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
+import org.springframework.beans.BeanUtils;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.util.StringUtils;
+import org.springframework.web.bind.annotation.*;
+
+import javax.servlet.http.HttpServletRequest;
+import java.util.List;
+import java.util.Map;
+
+@RequestMapping("/eduservice/coursefron")
+@RestController
+@CrossOrigin
+public class courseFront {
+    @Autowired
+    private EduChapterService eduChapterService;
+    @Autowired
+    private OrderClient client;
+
+    @Autowired
+    private EduSubjectService subjectService;
+    @Autowired
+    private EduCourseService courseService;
+    //前端分页查询获取课程
+    @PostMapping("/course/{current}/{limit}")
+    public R getCourseList(@PathVariable long current,
+                           @PathVariable long limit,
+                           @RequestBody(required = false) CourseSearchVO courseSearchVO){
+       Page<EduCourse> page = new Page<>(current,limit);
+       Map map =  courseService.getCourseList(page,courseSearchVO);
+
+        return R.ok().data(map);
+    }
+    //前端获取所有一级分类
+    @GetMapping("/subjectList")
+    public R getSubjectList(){
+        List<OneSubjectName> allSubjectList = subjectService.getAllSubjectList();
+
+        return R.ok().data("subjectList",allSubjectList);
+    }
+    //根据课程id 获取课程页面详情参数
+    @GetMapping("courseFronInfo/{id}")
+    public R getCourseInfo(@PathVariable String id, HttpServletRequest request){
+        CourseWebVo courseWebVo =  courseService.getCourseInfo(id);
+        //根据课程id 获取课程大纲
+        List<ChapterVo> allChapterList = eduChapterService.getAllChapterList(id);
+        //根据用户ID和课程ID获取该用户是否购买过课程
+        //代表已经登陆
+        if(!(request.getHeader("token")==null)){
+            //通过用户id和课程id 查询对应的支付记录，如果表中status状态为1 则表示已经购买过，由于一个课程存在多次订单，这里用count来查找已经支付了的订单更合适
+            boolean flag = client.geCourseInfo(id, JwtUtils.getMemberIdByJwtToken(request));
+            //如果是true，则表示已经购买
+            return R.ok().data("courseWebVo",courseWebVo).data("allChapterList",allChapterList).data("isBuy",flag);
+        }
+        return R.ok().data("courseWebVo",courseWebVo).data("allChapterList",allChapterList);
+    }
+
+    @GetMapping("courseInfo/{id}")
+    public CoursePublishVoOrder getCourseInfoOrder(@PathVariable String id){
+        //根据课程id 获取课程信息
+        CourseWebVo courseWebVo =  courseService.getCourseInfo(id);
+        CoursePublishVoOrder coursePublishVoOrder = new CoursePublishVoOrder();
+        BeanUtils.copyProperties(courseWebVo,coursePublishVoOrder);
+        return coursePublishVoOrder;
+    }
+
+
+
+}
Index: common/spring_security/src/main/java/com/atguigu/serurity/security/DefaultPasswordEncoder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/spring_security/src/main/java/com/atguigu/serurity/security/DefaultPasswordEncoder.java b/common/spring_security/src/main/java/com/atguigu/serurity/security/DefaultPasswordEncoder.java
new file mode 100644
--- /dev/null	(date 1584276271000)
+++ b/common/spring_security/src/main/java/com/atguigu/serurity/security/DefaultPasswordEncoder.java	(date 1584276271000)
@@ -0,0 +1,37 @@
+package com.atguigu.serurity.security;
+
+import com.atguigu.commonutils.MD5;
+import org.springframework.security.crypto.password.PasswordEncoder;
+import org.springframework.stereotype.Component;
+
+/**
+ * <p>
+ * t密码的处理方法类型
+ * </p>
+ *
+ * @author qy
+ * @since 2019-11-08
+ */
+@Component
+public class DefaultPasswordEncoder implements PasswordEncoder {
+
+    public DefaultPasswordEncoder() {
+        this(-1);
+    }
+
+    /**
+     * @param strength
+     *            the log rounds to use, between 4 and 31
+     */
+    public DefaultPasswordEncoder(int strength) {
+
+    }
+
+    public String encode(CharSequence rawPassword) {
+        return MD5.encrypt(rawPassword.toString());
+    }
+
+    public boolean matches(CharSequence rawPassword, String encodedPassword) {
+        return encodedPassword.equals(MD5.encrypt(rawPassword.toString()));
+    }
+}
\ No newline at end of file
Index: common/spring_security/src/main/java/com/atguigu/serurity/filter/TokenLoginFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/spring_security/src/main/java/com/atguigu/serurity/filter/TokenLoginFilter.java b/common/spring_security/src/main/java/com/atguigu/serurity/filter/TokenLoginFilter.java
new file mode 100644
--- /dev/null	(date 1584276271000)
+++ b/common/spring_security/src/main/java/com/atguigu/serurity/filter/TokenLoginFilter.java	(date 1584276271000)
@@ -0,0 +1,91 @@
+package com.atguigu.serurity.filter;
+
+import com.atguigu.commonutils.R;
+import com.atguigu.commonutils.ResponseUtil;
+import com.atguigu.serurity.entity.SecurityUser;
+import com.atguigu.serurity.entity.User;
+import com.atguigu.serurity.security.TokenManager;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.security.authentication.AuthenticationManager;
+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
+import org.springframework.security.core.Authentication;
+import org.springframework.security.core.AuthenticationException;
+import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;
+import org.springframework.security.web.util.matcher.AntPathRequestMatcher;
+
+import javax.servlet.FilterChain;
+import javax.servlet.ServletException;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.io.IOException;
+import java.util.ArrayList;
+
+/**
+ * <p>
+ * 登录过滤器，继承UsernamePasswordAuthenticationFilter，对用户名密码进行登录校验
+ * </p>
+ *
+ * @author qy
+ * @since 2019-11-08
+ */
+public class TokenLoginFilter extends UsernamePasswordAuthenticationFilter {
+
+    private AuthenticationManager authenticationManager;
+    private TokenManager tokenManager;
+    private RedisTemplate redisTemplate;
+
+    public TokenLoginFilter(AuthenticationManager authenticationManager, TokenManager tokenManager, RedisTemplate redisTemplate) {
+        this.authenticationManager = authenticationManager;
+        this.tokenManager = tokenManager;
+        this.redisTemplate = redisTemplate;
+        this.setPostOnly(false);
+        this.setRequiresAuthenticationRequestMatcher(new AntPathRequestMatcher("/admin/acl/login","POST"));
+    }
+
+    @Override
+    public Authentication attemptAuthentication(HttpServletRequest req, HttpServletResponse res)
+            throws AuthenticationException {
+        try {
+            User user = new ObjectMapper().readValue(req.getInputStream(), User.class);
+
+            return authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(user.getUsername(), user.getPassword(), new ArrayList<>()));
+        } catch (IOException e) {
+            throw new RuntimeException(e);
+        }
+
+    }
+
+    /**
+     * 登录成功
+     * @param req
+     * @param res
+     * @param chain
+     * @param auth
+     * @throws IOException
+     * @throws ServletException
+     */
+    @Override
+    protected void successfulAuthentication(HttpServletRequest req, HttpServletResponse res, FilterChain chain,
+                                            Authentication auth) throws IOException, ServletException {
+        SecurityUser user = (SecurityUser) auth.getPrincipal();
+        String token = tokenManager.createToken(user.getCurrentUserInfo().getUsername());
+        redisTemplate.opsForValue().set(user.getCurrentUserInfo().getUsername(), user.getPermissionValueList());
+
+        ResponseUtil.out(res, R.ok().data("token", token));
+    }
+
+    /**
+     * 登录失败
+     * @param request
+     * @param response
+     * @param e
+     * @throws IOException
+     * @throws ServletException
+     */
+    @Override
+    protected void unsuccessfulAuthentication(HttpServletRequest request, HttpServletResponse response,
+                                              AuthenticationException e) throws IOException, ServletException {
+        ResponseUtil.out(response, R.error());
+    }
+}
Index: service/service_edu/src/main/java/com/atguigu/service/crm/TeacherByPageController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/crm/TeacherByPageController.java b/service/service_edu/src/main/java/com/atguigu/service/crm/TeacherByPageController.java
new file mode 100644
--- /dev/null	(date 1610602940159)
+++ b/service/service_edu/src/main/java/com/atguigu/service/crm/TeacherByPageController.java	(date 1610602940159)
@@ -0,0 +1,46 @@
+package com.atguigu.service.crm;
+
+import com.atguigu.Result.R;
+import com.atguigu.service.entity.EduCourse;
+import com.atguigu.service.entity.EduTeacher;
+import com.atguigu.service.service.EduCourseService;
+import com.atguigu.service.service.EduTeacherService;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.*;
+
+import java.util.List;
+import java.util.Map;
+
+@RestController
+@RequestMapping("/eduservice/getTeacherList")
+@CrossOrigin
+public class TeacherByPageController {
+
+    @Autowired
+    private EduTeacherService eduTeacherService;
+    @Autowired
+    private EduCourseService eduCourseService;
+
+    //分页查询教师接口
+    @GetMapping("/getTeacherList/{current}/{limit}")
+    public R getList(@PathVariable long current,
+                     @PathVariable long limit){
+        Page<EduTeacher> page = new Page<>(current,limit);
+        Map<String,Object> map = eduTeacherService.findByPage(page);
+        return R.ok().data(map);
+    }
+    //查询老师详情
+    @GetMapping("/geTeacherInfo/{id}")
+    public R getInfo(@PathVariable String id){
+        EduTeacher teacherInfo = eduTeacherService.getById(id);
+        //查询老师演讲的课程
+        QueryWrapper<EduCourse> eduCourseQueryWrapper = new QueryWrapper<>();
+        eduCourseQueryWrapper.eq("teacher_id",teacherInfo.getId());
+        List<EduCourse> courseList = eduCourseService.list(eduCourseQueryWrapper);
+        System.out.println("1111");
+        return R.ok().data("teacherInfo",teacherInfo).data("courseList",courseList);
+    }
+
+}
Index: common/spring_security/src/main/java/com/atguigu/serurity/security/TokenManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/spring_security/src/main/java/com/atguigu/serurity/security/TokenManager.java b/common/spring_security/src/main/java/com/atguigu/serurity/security/TokenManager.java
new file mode 100644
--- /dev/null	(date 1578814883000)
+++ b/common/spring_security/src/main/java/com/atguigu/serurity/security/TokenManager.java	(date 1578814883000)
@@ -0,0 +1,40 @@
+package com.atguigu.serurity.security;
+
+import io.jsonwebtoken.CompressionCodecs;
+import io.jsonwebtoken.Jwts;
+import io.jsonwebtoken.SignatureAlgorithm;
+import org.springframework.stereotype.Component;
+
+import java.util.Date;
+
+/**
+ * <p>
+ * token管理
+ * </p>
+ *
+ * @author qy
+ * @since 2019-11-08
+ */
+@Component
+public class TokenManager {
+
+    private long tokenExpiration = 24*60*60*1000;
+    private String tokenSignKey = "123456";
+
+    public String createToken(String username) {
+        String token = Jwts.builder().setSubject(username)
+                .setExpiration(new Date(System.currentTimeMillis() + tokenExpiration))
+                .signWith(SignatureAlgorithm.HS512, tokenSignKey).compressWith(CompressionCodecs.GZIP).compact();
+        return token;
+    }
+
+    public String getUserFromToken(String token) {
+        String user = Jwts.parser().setSigningKey(tokenSignKey).parseClaimsJws(token).getBody().getSubject();
+        return user;
+    }
+
+    public void removeToken(String token) {
+        //jwttoken无需删除，客户端扔掉即可。
+    }
+
+}
Index: service/service_edu/src/main/java/com/atguigu/service/crm/IndexController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/crm/IndexController.java b/service/service_edu/src/main/java/com/atguigu/service/crm/IndexController.java
new file mode 100644
--- /dev/null	(date 1610104982358)
+++ b/service/service_edu/src/main/java/com/atguigu/service/crm/IndexController.java	(date 1610104982358)
@@ -0,0 +1,42 @@
+package com.atguigu.service.crm;
+
+import com.atguigu.Result.R;
+import com.atguigu.service.entity.EduCourse;
+import com.atguigu.service.entity.EduTeacher;
+import com.atguigu.service.service.EduCourseService;
+import com.atguigu.service.service.EduTeacherService;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.cache.annotation.Cacheable;
+import org.springframework.web.bind.annotation.CrossOrigin;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+import java.util.List;
+
+@RestController
+@RequestMapping("/eduservice/index")
+@CrossOrigin
+public class IndexController {
+    @Autowired
+    private EduCourseService courseService;
+    @Autowired
+    private EduTeacherService teacherService;
+        //查询前8条热门课程，查询前4条名师
+    @GetMapping("index")
+    @Cacheable(key = "'AllData'",value = "AllList")
+    public R index() {
+        //查询前8条热门课程
+        QueryWrapper<EduCourse> wrapper = new QueryWrapper<>();
+        wrapper.orderByDesc("id");
+        wrapper.last("limit 8");
+        List<EduCourse> eduList = courseService.list(wrapper);
+        //查询前4条名师
+        QueryWrapper<EduTeacher> wrapperTeacher = new QueryWrapper<>();
+        wrapperTeacher.orderByDesc("id");
+        wrapperTeacher.last("limit 4");
+        List<EduTeacher> teacherList = teacherService.list(wrapperTeacher);
+        return R.ok().data("eduList",eduList).data("teacherList",teacherList);
+    }
+}
\ No newline at end of file
Index: service/service_edu/src/main/java/com/atguigu/service/config/EduConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/config/EduConfig.java b/service/service_edu/src/main/java/com/atguigu/service/config/EduConfig.java
new file mode 100644
--- /dev/null	(date 1609048617348)
+++ b/service/service_edu/src/main/java/com/atguigu/service/config/EduConfig.java	(date 1609048617348)
@@ -0,0 +1,26 @@
+package com.atguigu.service.config;
+
+import com.baomidou.mybatisplus.core.injector.ISqlInjector;
+import com.baomidou.mybatisplus.extension.injector.LogicSqlInjector;
+import com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;
+import org.mybatis.spring.annotation.MapperScan;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+
+@Configuration
+@MapperScan("com.atguigu.service.mapper")
+public class EduConfig {
+
+    //逻辑删除插件
+    @Bean
+    public LogicSqlInjector injector(){
+        return new LogicSqlInjector();
+    }
+
+
+    //分页查询插件
+    @Bean
+    public PaginationInterceptor paginationInterceptor(){
+        return new PaginationInterceptor();
+    }
+}
Index: service/service_edu/src/main/java/com/atguigu/service/entity/EduTeacher.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/entity/EduTeacher.java b/service/service_edu/src/main/java/com/atguigu/service/entity/EduTeacher.java
new file mode 100644
--- /dev/null	(date 1609164026002)
+++ b/service/service_edu/src/main/java/com/atguigu/service/entity/EduTeacher.java	(date 1609164026002)
@@ -0,0 +1,66 @@
+package com.atguigu.service.entity;
+
+import com.baomidou.mybatisplus.annotation.*;
+
+import java.util.Date;
+
+import java.io.Serializable;
+
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
+
+/**
+ * <p>
+ * 讲师
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-26
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@Accessors(chain = true)
+@ApiModel(value="EduTeacher对象", description="讲师")
+public class EduTeacher implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @ApiModelProperty(value = "讲师ID")
+    @TableId(value = "id", type = IdType.ID_WORKER_STR)
+    private String id;
+
+    @ApiModelProperty(value = "讲师姓名")
+    private String name;
+
+    @ApiModelProperty(value = "讲师简介")
+    private String intro;
+
+    @ApiModelProperty(value = "讲师资历,一句话说明讲师")
+    private String career;
+
+    @ApiModelProperty(value = "头衔 1高级讲师 2首席讲师")
+    private Integer level;
+
+    @ApiModelProperty(value = "讲师头像")
+    private String avatar;
+
+    @ApiModelProperty(value = "排序")
+    private Integer sort;
+
+    @ApiModelProperty(value = "逻辑删除 1（true）已删除， 0（false）未删除")
+    @TableLogic
+    private Integer isDeleted;
+
+        @ApiModelProperty(value = "创建时间")
+    @TableField(fill = FieldFill.INSERT)
+    private Date gmtCreate;
+
+    @ApiModelProperty(value = "更新时间")
+    @TableField(fill = FieldFill.INSERT_UPDATE)
+    private Date gmtModified;
+
+
+}
Index: common/spring_security/src/main/java/com/atguigu/serurity/security/UnauthorizedEntryPoint.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/spring_security/src/main/java/com/atguigu/serurity/security/UnauthorizedEntryPoint.java b/common/spring_security/src/main/java/com/atguigu/serurity/security/UnauthorizedEntryPoint.java
new file mode 100644
--- /dev/null	(date 1584276271000)
+++ b/common/spring_security/src/main/java/com/atguigu/serurity/security/UnauthorizedEntryPoint.java	(date 1584276271000)
@@ -0,0 +1,29 @@
+package com.atguigu.serurity.security;
+
+import com.atguigu.commonutils.R;
+import com.atguigu.commonutils.ResponseUtil;
+import org.springframework.security.core.AuthenticationException;
+import org.springframework.security.web.AuthenticationEntryPoint;
+
+import javax.servlet.ServletException;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.io.IOException;
+
+/**
+ * <p>
+ * 未授权的统一处理方式
+ * </p>
+ *
+ * @author qy
+ * @since 2019-11-08
+ */
+public class UnauthorizedEntryPoint implements AuthenticationEntryPoint {
+
+    @Override
+    public void commence(HttpServletRequest request, HttpServletResponse response,
+                         AuthenticationException authException) throws IOException, ServletException {
+
+        ResponseUtil.out(response, R.error());
+    }
+}
Index: service/service_edu/src/main/java/com/atguigu/service/client/OrderClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/client/OrderClient.java b/service/service_edu/src/main/java/com/atguigu/service/client/OrderClient.java
new file mode 100644
--- /dev/null	(date 1611047991106)
+++ b/service/service_edu/src/main/java/com/atguigu/service/client/OrderClient.java	(date 1611047991106)
@@ -0,0 +1,14 @@
+package com.atguigu.service.client;
+
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+
+@FeignClient("service-order")
+public interface OrderClient {
+
+
+    @GetMapping("/order/order/getCoursePayStatus/{courseId}/{memeberId}")
+    public boolean geCourseInfo(@PathVariable("courseId") String courseId,
+                                @PathVariable("memeberId") String memeberId);
+}
Index: service/service_edu/src/main/java/com/atguigu/service/client/VodClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/client/VodClient.java b/service/service_edu/src/main/java/com/atguigu/service/client/VodClient.java
new file mode 100644
--- /dev/null	(date 1609940415045)
+++ b/service/service_edu/src/main/java/com/atguigu/service/client/VodClient.java	(date 1609940415045)
@@ -0,0 +1,22 @@
+package com.atguigu.service.client;
+
+import com.atguigu.Result.R;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.context.annotation.ComponentScan;
+import org.springframework.stereotype.Component;
+import org.springframework.web.bind.annotation.DeleteMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.RequestParam;
+
+import java.util.List;
+
+@FeignClient(value = "service-vod",fallback = com.atguigu.service.client.Impl.VodClient.class)
+@Component
+public interface VodClient {
+
+    @DeleteMapping("/VodService/deleteFile/{id}")
+    public R deleteFile(@PathVariable("id") String id);
+
+    @DeleteMapping("/VodService/delete")
+    public R delete(@RequestParam("videoIdList") List<String> videoIdList);
+}
Index: service/service.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service.iml b/service/service.iml
new file mode 100644
--- /dev/null	(date 1611309697939)
+++ b/service/service.iml	(date 1611309697939)
@@ -0,0 +1,178 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="service_base" />
+    <orderEntry type="module" module-name="common_utils" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-pool2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.7.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.google.code.findbugs:jsr305:3.0.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-core:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.ws.rs:jsr311-api:1.1.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-serialization:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.fasterxml.jackson.module:jackson-module-afterburner:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-metrics-event-stream:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-javanica:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.ow2.asm:asm:5.0.4" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.4" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava-reactive-streams:1.2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.28" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.yaml:snakeyaml:1.25" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-el:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.0.18.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:1.3.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.4.6" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-generator:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-configuration-processor:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:8.0.18" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.velocity:velocity-engine-core:2.0" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-lang3:3.9" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.reflections:reflections:0.9.11" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.21.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:18.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.1.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.projectlombok:lombok:1.18.10" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi:3.17" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.13" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-collections4:4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml-schemas:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.xmlbeans:xmlbeans:2.6.0" level="project" />
+    <orderEntry type="library" name="Maven: stax:stax-api:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.virtuald:curvesapi:1.04" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.3.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.12" level="project" />
+    <orderEntry type="library" name="Maven: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.gson:gson:2.8.2" level="project" />
+    <orderEntry type="library" name="Maven: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest-core:2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest:2.1" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: service/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/pom.xml b/service/pom.xml
new file mode 100644
--- /dev/null	(date 1611316961087)
+++ b/service/pom.xml	(date 1611316961087)
@@ -0,0 +1,152 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>guli</artifactId>
+        <groupId>com.atguigu</groupId>
+        <version>0.0.1-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>service</artifactId>
+    <packaging>pom</packaging>
+    <modules>
+        <module>service_edu</module>
+        <module>service_oss</module>
+        <module>service_vod</module>
+        <module>service_crm</module>
+        <module>service_msm</module>
+        <module>service_ucenter</module>
+        <module>service_order</module>
+        <module>service_ucenter</module>
+        <module>service_order</module>
+        <module>service_statistics</module>
+        <module>service_acl</module>
+    </modules>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+
+        <dependency>
+            <groupId>com.atguigu</groupId>
+            <artifactId>service_base</artifactId>
+            <version>0.0.1-SNAPSHOT</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
+        </dependency>
+
+        <!--hystrix依赖，主要是用  @HystrixCommand -->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
+        </dependency>
+
+        <!--服务注册-->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
+        </dependency>
+        <!--服务调用-->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-openfeign</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+
+        <!--mybatis-plus-->
+        <dependency>
+            <groupId>com.baomidou</groupId>
+            <artifactId>mybatis-plus-boot-starter</artifactId>
+        </dependency>
+
+        <!--mysql-->
+        <dependency>
+            <groupId>mysql</groupId>
+            <artifactId>mysql-connector-java</artifactId>
+        </dependency>
+
+        <!-- velocity 模板引擎, Mybatis Plus 代码生成器需要 -->
+        <dependency>
+            <groupId>org.apache.velocity</groupId>
+            <artifactId>velocity-engine-core</artifactId>
+        </dependency>
+
+        <!--swagger-->
+        <dependency>
+            <groupId>io.springfox</groupId>
+            <artifactId>springfox-swagger2</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>io.springfox</groupId>
+            <artifactId>springfox-swagger-ui</artifactId>
+        </dependency>
+
+        <!--lombok用来简化实体类：需要安装lombok插件-->
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+        </dependency>
+
+        <!--xls-->
+        <dependency>
+            <groupId>org.apache.poi</groupId>
+            <artifactId>poi</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.apache.poi</groupId>
+            <artifactId>poi-ooxml</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>commons-fileupload</groupId>
+            <artifactId>commons-fileupload</artifactId>
+        </dependency>
+
+        <!--httpclient-->
+        <dependency>
+            <groupId>org.apache.httpcomponents</groupId>
+            <artifactId>httpclient</artifactId>
+        </dependency>
+        <!--commons-io-->
+        <dependency>
+            <groupId>commons-io</groupId>
+            <artifactId>commons-io</artifactId>
+        </dependency>
+        <!--gson-->
+        <dependency>
+            <groupId>com.google.code.gson</groupId>
+            <artifactId>gson</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>junit</groupId>
+            <artifactId>junit</artifactId>
+            <version>4.12</version>
+        </dependency>
+    </dependencies>
+
+    <build>
+        <resources>
+            <resource>
+                <directory>src/main/java</directory>
+                <includes>
+                    <include>**/*.xml</include>
+                </includes>
+                <filtering>false</filtering>
+            </resource>
+        </resources>
+    </build>
+</project>
Index: service/service_edu/src/main/java/com/atguigu/service/entity/EduVideo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/entity/EduVideo.java b/service/service_edu/src/main/java/com/atguigu/service/entity/EduVideo.java
new file mode 100644
--- /dev/null	(date 1609915435904)
+++ b/service/service_edu/src/main/java/com/atguigu/service/entity/EduVideo.java	(date 1609915435904)
@@ -0,0 +1,83 @@
+package com.atguigu.service.entity;
+
+import com.baomidou.mybatisplus.annotation.FieldFill;
+import com.baomidou.mybatisplus.annotation.IdType;
+import java.util.Date;
+
+import com.baomidou.mybatisplus.annotation.TableField;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
+
+/**
+ * <p>
+ * 课程视频
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@Accessors(chain = true)
+@ApiModel(value="EduVideo对象", description="课程视频")
+public class EduVideo implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @ApiModelProperty(value = "视频ID")
+    @TableId(value = "id", type = IdType.ID_WORKER_STR)
+    private String id;
+
+    @ApiModelProperty(value = "课程ID")
+    private String courseId;
+
+    @ApiModelProperty(value = "章节ID")
+    private String chapterId;
+
+    @ApiModelProperty(value = "节点名称")
+    private String title;
+
+    @ApiModelProperty(value = "云端视频资源")
+    @TableField(value = "video_source_id")
+    private String videoSourceId;
+
+    @ApiModelProperty(value = "原始文件名称")
+    @TableField(value = "video_original_name")
+    private String videoOriginalName;
+
+    @ApiModelProperty(value = "排序字段")
+    private Integer sort;
+
+    @ApiModelProperty(value = "播放次数")
+    private Long playCount;
+
+    @ApiModelProperty(value = "是否可以试听：0收费 1免费")
+    private Integer isFree;
+
+    @ApiModelProperty(value = "视频时长（秒）")
+    private Float duration;
+
+    @ApiModelProperty(value = "Empty未上传 Transcoding转码中  Normal正常")
+    private String status;
+
+    @ApiModelProperty(value = "视频源文件大小（字节）")
+    private Long size;
+
+    @ApiModelProperty(value = "乐观锁")
+    private Long version;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField(fill = FieldFill.INSERT)
+    private Date gmtCreate;
+
+    @ApiModelProperty(value = "更新时间")
+    @TableField(fill = FieldFill.INSERT_UPDATE)
+    private Date gmtModified;
+
+
+}
Index: service/service_edu/src/main/java/com/atguigu/service/entity/EduChapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/entity/EduChapter.java b/service/service_edu/src/main/java/com/atguigu/service/entity/EduChapter.java
new file mode 100644
--- /dev/null	(date 1609587815244)
+++ b/service/service_edu/src/main/java/com/atguigu/service/entity/EduChapter.java	(date 1609587815244)
@@ -0,0 +1,54 @@
+package com.atguigu.service.entity;
+
+import com.baomidou.mybatisplus.annotation.FieldFill;
+import com.baomidou.mybatisplus.annotation.IdType;
+import java.util.Date;
+
+import com.baomidou.mybatisplus.annotation.TableField;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
+
+/**
+ * <p>
+ * 课程
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@Accessors(chain = true)
+@ApiModel(value="EduChapter对象", description="课程")
+public class EduChapter implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @ApiModelProperty(value = "章节ID")
+    @TableId(value = "id", type = IdType.ID_WORKER_STR)
+    private String id;
+
+    @ApiModelProperty(value = "课程ID")
+    private String courseId;
+
+    @ApiModelProperty(value = "章节名称")
+    private String title;
+
+    @ApiModelProperty(value = "显示排序")
+    private Integer sort;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField(fill = FieldFill.INSERT)
+    private Date gmtCreate;
+
+    @ApiModelProperty(value = "更新时间")
+    @TableField(fill = FieldFill.INSERT_UPDATE)
+    private Date gmtModified;
+
+
+}
Index: service/service_edu/src/main/java/com/atguigu/service/entity/EduSubject.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/entity/EduSubject.java b/service/service_edu/src/main/java/com/atguigu/service/entity/EduSubject.java
new file mode 100644
--- /dev/null	(date 1609325330872)
+++ b/service/service_edu/src/main/java/com/atguigu/service/entity/EduSubject.java	(date 1609325330872)
@@ -0,0 +1,54 @@
+package com.atguigu.service.entity;
+
+import com.baomidou.mybatisplus.annotation.FieldFill;
+import com.baomidou.mybatisplus.annotation.IdType;
+import java.util.Date;
+
+import com.baomidou.mybatisplus.annotation.TableField;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
+
+/**
+ * <p>
+ * 课程科目
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-30
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@Accessors(chain = true)
+@ApiModel(value="EduSubject对象", description="课程科目")
+public class EduSubject implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @ApiModelProperty(value = "课程类别ID")
+    @TableId(value = "id", type = IdType.ID_WORKER_STR)
+    private String id;
+
+    @ApiModelProperty(value = "类别名称")
+    private String title;
+
+    @ApiModelProperty(value = "父ID")
+    private String parentId;
+
+    @ApiModelProperty(value = "排序字段")
+    private Integer sort;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField(fill = FieldFill.INSERT)
+    private Date gmtCreate;
+
+    @ApiModelProperty(value = "更新时间")
+    @TableField(fill = FieldFill.INSERT_UPDATE)
+    private Date gmtModified;
+
+
+}
Index: service/service_edu/src/main/java/com/atguigu/service/entity/EduCourse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/entity/EduCourse.java b/service/service_edu/src/main/java/com/atguigu/service/entity/EduCourse.java
new file mode 100644
--- /dev/null	(date 1609476643621)
+++ b/service/service_edu/src/main/java/com/atguigu/service/entity/EduCourse.java	(date 1609476643621)
@@ -0,0 +1,83 @@
+package com.atguigu.service.entity;
+
+import java.math.BigDecimal;
+
+import com.baomidou.mybatisplus.annotation.FieldFill;
+import com.baomidou.mybatisplus.annotation.IdType;
+import java.util.Date;
+
+import com.baomidou.mybatisplus.annotation.TableField;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
+
+/**
+ * <p>
+ * 课程
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@Accessors(chain = true)
+@ApiModel(value="EduCourse对象", description="课程")
+public class EduCourse implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @ApiModelProperty(value = "课程ID")
+    @TableId(value = "id", type = IdType.ID_WORKER_STR)
+    private String id;
+
+    @ApiModelProperty(value = "课程讲师ID")
+    private String teacherId;
+
+    @ApiModelProperty(value = "课程专业ID")
+    private String subjectId;
+
+    @ApiModelProperty(value = "课程专业父级ID")
+    private String subjectParentId;
+
+    @ApiModelProperty(value = "课程标题")
+    private String title;
+
+    @ApiModelProperty(value = "课程销售价格，设置为0则可免费观看")
+    private BigDecimal price;
+
+    @ApiModelProperty(value = "总课时")
+    private Integer lessonNum;
+
+    @ApiModelProperty(value = "课程封面图片路径")
+    private String cover;
+
+    @ApiModelProperty(value = "销售数量")
+    private Long buyCount;
+
+    @ApiModelProperty(value = "浏览数量")
+    private Long viewCount;
+
+    @ApiModelProperty(value = "乐观锁")
+    private Long version;
+
+    @ApiModelProperty(value = "课程状态 Draft未发布  Normal已发布")
+    private String status;
+
+    @ApiModelProperty(value = "逻辑删除 1（true）已删除， 0（false）未删除")
+    private Integer isDeleted;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField(fill = FieldFill.INSERT)
+    private Date gmtCreate;
+
+    @ApiModelProperty(value = "更新时间")
+    @TableField(fill = FieldFill.INSERT_UPDATE)
+    private Date gmtModified;
+
+
+}
Index: service/service_edu/src/main/java/com/atguigu/service/entity/EduCourseDescription.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/entity/EduCourseDescription.java b/service/service_edu/src/main/java/com/atguigu/service/entity/EduCourseDescription.java
new file mode 100644
--- /dev/null	(date 1609476672910)
+++ b/service/service_edu/src/main/java/com/atguigu/service/entity/EduCourseDescription.java	(date 1609476672910)
@@ -0,0 +1,48 @@
+package com.atguigu.service.entity;
+
+import com.baomidou.mybatisplus.annotation.FieldFill;
+import com.baomidou.mybatisplus.annotation.IdType;
+import java.util.Date;
+
+import com.baomidou.mybatisplus.annotation.TableField;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
+
+/**
+ * <p>
+ * 课程简介
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@Accessors(chain = true)
+@ApiModel(value="EduCourseDescription对象", description="课程简介")
+public class EduCourseDescription implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @ApiModelProperty(value = "课程ID")
+    @TableId(value = "id", type = IdType.INPUT)
+    private String id;
+
+    @ApiModelProperty(value = "课程简介")
+    private String description;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField(fill = FieldFill.INSERT)
+    private Date gmtCreate;
+
+    @ApiModelProperty(value = "更新时间")
+    @TableField(fill = FieldFill.INSERT_UPDATE)
+    private Date gmtModified;
+
+
+}
Index: service/service_edu/src/main/java/com/atguigu/service/entity/TeacherQuery.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/entity/TeacherQuery.java b/service/service_edu/src/main/java/com/atguigu/service/entity/TeacherQuery.java
new file mode 100644
--- /dev/null	(date 1609050289384)
+++ b/service/service_edu/src/main/java/com/atguigu/service/entity/TeacherQuery.java	(date 1609050289384)
@@ -0,0 +1,19 @@
+package com.atguigu.service.entity;
+
+import lombok.Data;
+
+@Data
+public class TeacherQuery {
+    //教师名称
+    private String name;
+
+    //教师等级
+    private Integer level;
+
+    //开始的时间
+    private String gmtCreat;
+
+    //结束的时间
+    private String gmtEnd;
+
+}
Index: service/service_acl/service_acl.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/service_acl.iml b/service/service_acl/service_acl.iml
new file mode 100644
--- /dev/null	(date 1611318591772)
+++ b/service/service_acl/service_acl.iml	(date 1611318591772)
@@ -0,0 +1,195 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="service_base" />
+    <orderEntry type="module" module-name="common_utils" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-pool2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.7.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.google.code.findbugs:jsr305:3.0.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-core:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.ws.rs:jsr311-api:1.1.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-serialization:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.fasterxml.jackson.module:jackson-module-afterburner:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-metrics-event-stream:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-javanica:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.ow2.asm:asm:5.0.4" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.4" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava-reactive-streams:1.2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.28" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.yaml:snakeyaml:1.25" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-el:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.0.18.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:1.3.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.4.6" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-generator:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-configuration-processor:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:8.0.18" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.velocity:velocity-engine-core:2.0" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-lang3:3.9" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.reflections:reflections:0.9.11" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.21.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:18.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.1.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.projectlombok:lombok:1.18.10" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi:3.17" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.13" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-collections4:4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml-schemas:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.xmlbeans:xmlbeans:2.6.0" level="project" />
+    <orderEntry type="library" name="Maven: stax:stax-api:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.virtuald:curvesapi:1.04" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.3.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.12" level="project" />
+    <orderEntry type="library" name="Maven: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.gson:gson:2.8.2" level="project" />
+    <orderEntry type="library" name="Maven: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest-core:2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest:2.1" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: service/service_edu/src/main/java/com/atguigu/service/mapper/EduSubjectMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/mapper/EduSubjectMapper.java b/service/service_edu/src/main/java/com/atguigu/service/mapper/EduSubjectMapper.java
new file mode 100644
--- /dev/null	(date 1609325136687)
+++ b/service/service_edu/src/main/java/com/atguigu/service/mapper/EduSubjectMapper.java	(date 1609325136687)
@@ -0,0 +1,16 @@
+package com.atguigu.service.mapper;
+
+import com.atguigu.service.entity.EduSubject;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 课程科目 Mapper 接口
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-30
+ */
+public interface EduSubjectMapper extends BaseMapper<EduSubject> {
+
+}
Index: service/service_edu/src/main/java/com/atguigu/service/mapper/EduCourseMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/mapper/EduCourseMapper.java b/service/service_edu/src/main/java/com/atguigu/service/mapper/EduCourseMapper.java
new file mode 100644
--- /dev/null	(date 1610629812193)
+++ b/service/service_edu/src/main/java/com/atguigu/service/mapper/EduCourseMapper.java	(date 1610629812193)
@@ -0,0 +1,22 @@
+package com.atguigu.service.mapper;
+
+import com.atguigu.service.entity.EduCourse;
+import com.atguigu.service.entity.vo.CoursePublishVo;
+import com.atguigu.service.entity.vo.CourseWebVo;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 课程 Mapper 接口
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+public interface EduCourseMapper extends BaseMapper<EduCourse> {
+
+    //获取课程信息
+    CoursePublishVo getCoursePublish(String id);
+
+    CourseWebVo getCourseInfo(String id);
+}
Index: service/service_acl/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/pom.xml b/service/service_acl/pom.xml
new file mode 100644
--- /dev/null	(date 1611317735180)
+++ b/service/service_acl/pom.xml	(date 1611317735180)
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>service</artifactId>
+        <groupId>com.atguigu</groupId>
+        <version>0.0.1-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>com.atguiguu</groupId>
+    <artifactId>service_acl</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>com.atguigu</groupId>
+            <artifactId>spring_security</artifactId>
+            <version>0.0.1-SNAPSHOT</version>
+        </dependency>
+        <dependency>
+            <groupId>com.alibaba</groupId>
+            <artifactId>fastjson</artifactId>
+        </dependency>
+    </dependencies>
+</project>
\ No newline at end of file
Index: service/service_edu/src/main/java/com/atguigu/service/mapper/EduVideoMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/mapper/EduVideoMapper.java b/service/service_edu/src/main/java/com/atguigu/service/mapper/EduVideoMapper.java
new file mode 100644
--- /dev/null	(date 1609417219745)
+++ b/service/service_edu/src/main/java/com/atguigu/service/mapper/EduVideoMapper.java	(date 1609417219745)
@@ -0,0 +1,16 @@
+package com.atguigu.service.mapper;
+
+import com.atguigu.service.entity.EduVideo;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 课程视频 Mapper 接口
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+public interface EduVideoMapper extends BaseMapper<EduVideo> {
+
+}
Index: service/service_crm/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_crm/pom.xml b/service/service_crm/pom.xml
new file mode 100644
--- /dev/null	(date 1610019513924)
+++ b/service/service_crm/pom.xml	(date 1610019513924)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>service</artifactId>
+        <groupId>com.atguigu</groupId>
+        <version>0.0.1-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>service_crm</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+</project>
\ No newline at end of file
Index: service/service_edu/src/main/java/com/atguigu/service/mapper/EduChapterMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/mapper/EduChapterMapper.java b/service/service_edu/src/main/java/com/atguigu/service/mapper/EduChapterMapper.java
new file mode 100644
--- /dev/null	(date 1609417219660)
+++ b/service/service_edu/src/main/java/com/atguigu/service/mapper/EduChapterMapper.java	(date 1609417219660)
@@ -0,0 +1,16 @@
+package com.atguigu.service.mapper;
+
+import com.atguigu.service.entity.EduChapter;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 课程 Mapper 接口
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+public interface EduChapterMapper extends BaseMapper<EduChapter> {
+
+}
Index: service/service_crm/service_crm.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_crm/service_crm.iml b/service/service_crm/service_crm.iml
new file mode 100644
--- /dev/null	(date 1611309697953)
+++ b/service/service_crm/service_crm.iml	(date 1611309697953)
@@ -0,0 +1,195 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="service_base" />
+    <orderEntry type="module" module-name="common_utils" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-pool2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.7.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.google.code.findbugs:jsr305:3.0.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-core:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.ws.rs:jsr311-api:1.1.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-serialization:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.fasterxml.jackson.module:jackson-module-afterburner:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-metrics-event-stream:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-javanica:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.ow2.asm:asm:5.0.4" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.4" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava-reactive-streams:1.2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.28" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.yaml:snakeyaml:1.25" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-el:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.0.18.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:1.3.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.4.6" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-generator:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-configuration-processor:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:8.0.18" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.velocity:velocity-engine-core:2.0" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-lang3:3.9" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.reflections:reflections:0.9.11" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.21.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:18.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.1.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.projectlombok:lombok:1.18.10" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi:3.17" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.13" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-collections4:4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml-schemas:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.xmlbeans:xmlbeans:2.6.0" level="project" />
+    <orderEntry type="library" name="Maven: stax:stax-api:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.virtuald:curvesapi:1.04" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.3.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.12" level="project" />
+    <orderEntry type="library" name="Maven: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.gson:gson:2.8.2" level="project" />
+    <orderEntry type="library" name="Maven: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest-core:2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest:2.1" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: service/service_edu/src/main/java/com/atguigu/service/mapper/EduTeacherMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/mapper/EduTeacherMapper.java b/service/service_edu/src/main/java/com/atguigu/service/mapper/EduTeacherMapper.java
new file mode 100644
--- /dev/null	(date 1608995078520)
+++ b/service/service_edu/src/main/java/com/atguigu/service/mapper/EduTeacherMapper.java	(date 1608995078520)
@@ -0,0 +1,16 @@
+package com.atguigu.service.mapper;
+
+import com.atguigu.service.entity.EduTeacher;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 讲师 Mapper 接口
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-26
+ */
+public interface EduTeacherMapper extends BaseMapper<EduTeacher> {
+
+}
Index: service/service_edu/src/main/java/com/atguigu/service/mapper/EduCourseDescriptionMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/mapper/EduCourseDescriptionMapper.java b/service/service_edu/src/main/java/com/atguigu/service/mapper/EduCourseDescriptionMapper.java
new file mode 100644
--- /dev/null	(date 1609417219709)
+++ b/service/service_edu/src/main/java/com/atguigu/service/mapper/EduCourseDescriptionMapper.java	(date 1609417219709)
@@ -0,0 +1,16 @@
+package com.atguigu.service.mapper;
+
+import com.atguigu.service.entity.EduCourseDescription;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 课程简介 Mapper 接口
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+public interface EduCourseDescriptionMapper extends BaseMapper<EduCourseDescription> {
+
+}
Index: service/service_edu/service_edu.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/service_edu.iml b/service/service_edu/service_edu.iml
new file mode 100644
--- /dev/null	(date 1611309697934)
+++ b/service/service_edu/service_edu.iml	(date 1611309697934)
@@ -0,0 +1,205 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: com.alibaba:easyexcel:2.1.1" level="project" />
+    <orderEntry type="library" name="Maven: cglib:cglib:3.1" level="project" />
+    <orderEntry type="library" name="Maven: org.ow2.asm:asm:4.2" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: org.ehcache:ehcache:3.8.1" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish.jaxb:jaxb-runtime:2.3.2" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.xml.bind:jakarta.xml.bind-api:2.3.2" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish.jaxb:txw2:2.3.2" level="project" />
+    <orderEntry type="library" name="Maven: com.sun.istack:istack-commons-runtime:3.0.8" level="project" />
+    <orderEntry type="library" name="Maven: org.jvnet.staxex:stax-ex:1.8.1" level="project" />
+    <orderEntry type="library" name="Maven: com.sun.xml.fastinfoset:FastInfoset:1.2.16" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.activation:jakarta.activation-api:1.2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.28" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.7.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.google.code.findbugs:jsr305:3.0.1" level="project" />
+    <orderEntry type="module" module-name="service_base" />
+    <orderEntry type="module" module-name="common_utils" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-pool2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-core:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.ws.rs:jsr311-api:1.1.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-serialization:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.fasterxml.jackson.module:jackson-module-afterburner:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-metrics-event-stream:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-javanica:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.4" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava-reactive-streams:1.2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.yaml:snakeyaml:1.25" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-el:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.0.18.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:1.3.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.4.6" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-generator:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-configuration-processor:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:8.0.18" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.velocity:velocity-engine-core:2.0" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-lang3:3.9" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.reflections:reflections:0.9.11" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.21.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:18.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.1.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.projectlombok:lombok:1.18.10" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi:3.17" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.13" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-collections4:4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml-schemas:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.xmlbeans:xmlbeans:2.6.0" level="project" />
+    <orderEntry type="library" name="Maven: stax:stax-api:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.virtuald:curvesapi:1.04" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.3.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.12" level="project" />
+    <orderEntry type="library" name="Maven: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.gson:gson:2.8.2" level="project" />
+    <orderEntry type="library" name="Maven: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest-core:2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest:2.1" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: service/service_edu/src/main/java/com/atguigu/service/service/EduSubjectService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/service/EduSubjectService.java b/service/service_edu/src/main/java/com/atguigu/service/service/EduSubjectService.java
new file mode 100644
--- /dev/null	(date 1609390386209)
+++ b/service/service_edu/src/main/java/com/atguigu/service/service/EduSubjectService.java	(date 1609390386209)
@@ -0,0 +1,23 @@
+package com.atguigu.service.service;
+
+import com.atguigu.service.entity.EduSubject;
+import com.atguigu.service.entity.vo.OneSubjectName;
+import com.baomidou.mybatisplus.extension.service.IService;
+import org.springframework.web.multipart.MultipartFile;
+
+import java.util.List;
+
+/**
+ * <p>
+ * 课程科目 服务类
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-30
+ */
+public interface EduSubjectService extends IService<EduSubject> {
+
+    void addSubject(MultipartFile file);
+
+    List<OneSubjectName> getAllSubjectList();
+}
Index: service/service_edu/src/main/java/com/atguigu/service/service/EduCourseService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/service/EduCourseService.java b/service/service_edu/src/main/java/com/atguigu/service/service/EduCourseService.java
new file mode 100644
--- /dev/null	(date 1610629812186)
+++ b/service/service_edu/src/main/java/com/atguigu/service/service/EduCourseService.java	(date 1610629812186)
@@ -0,0 +1,31 @@
+package com.atguigu.service.service;
+
+import com.atguigu.service.entity.EduCourse;
+import com.atguigu.service.entity.vo.*;
+import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+import java.util.List;
+import java.util.Map;
+
+/**
+ * <p>
+ * 课程 服务类
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+public interface EduCourseService extends IService<EduCourse> {
+
+    String saveCourse(CourseInfo courseInfo);
+
+    CoursePublishVo getCourse(String id);
+
+    void removeByCourseId(String id);
+
+
+    Map getCourseList(Page<EduCourse> page, CourseSearchVO courseSearchVO);
+
+    CourseWebVo getCourseInfo(String id);
+}
Index: service/service_edu/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/pom.xml b/service/service_edu/pom.xml
new file mode 100644
--- /dev/null	(date 1609930554757)
+++ b/service/service_edu/pom.xml	(date 1609930554757)
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>service</artifactId>
+        <groupId>com.atguigu</groupId>
+        <version>0.0.1-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>service_edu</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <!-- https://mvnrepository.com/artifact/com.alibaba/easyexcel -->
+        <dependency>
+            <groupId>com.alibaba</groupId>
+            <artifactId>easyexcel</artifactId>
+            <version>2.1.1</version>
+        </dependency>
+        <!--服务注册-->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
+        </dependency>
+        <!--服务调用-->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-openfeign</artifactId>
+        </dependency>
+    </dependencies>
+
+
+</project>
\ No newline at end of file
Index: service/service_edu/src/main/java/com/atguigu/service/service/EduChapterService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/service/EduChapterService.java b/service/service_edu/src/main/java/com/atguigu/service/service/EduChapterService.java
new file mode 100644
--- /dev/null	(date 1609836237175)
+++ b/service/service_edu/src/main/java/com/atguigu/service/service/EduChapterService.java	(date 1609836237175)
@@ -0,0 +1,30 @@
+package com.atguigu.service.service;
+
+import com.atguigu.service.entity.EduChapter;
+import com.atguigu.service.entity.vo.ChapterVo;
+import com.atguigu.service.entity.vo.CourseInfo;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+import java.util.List;
+
+/**
+ * <p>
+ * 课程 服务类
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+public interface EduChapterService extends IService<EduChapter> {
+
+
+    List<ChapterVo> getAllChapterList(String id);
+
+    CourseInfo getInfoByCourseId(String id);
+
+    void updateByCourseId(CourseInfo courseInfo);
+
+    boolean deleteByVideoNumb(String id);
+
+    void removeByCourseId(String id);
+}
Index: service/service_msm/service_msm.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_msm/service_msm.iml b/service/service_msm/service_msm.iml
new file mode 100644
--- /dev/null	(date 1611309697968)
+++ b/service/service_msm/service_msm.iml	(date 1611309697968)
@@ -0,0 +1,202 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.28" level="project" />
+    <orderEntry type="library" name="Maven: com.aliyun:aliyun-java-sdk-core:4.3.3" level="project" />
+    <orderEntry type="library" name="Maven: javax.xml.bind:jaxb-api:2.3.1" level="project" />
+    <orderEntry type="library" name="Maven: javax.activation:javax.activation-api:1.2.0" level="project" />
+    <orderEntry type="library" name="Maven: com.sun.xml.bind:jaxb-core:2.3.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.sun.xml.bind:jaxb-impl:2.3.2" level="project" />
+    <orderEntry type="library" name="Maven: javax.activation:activation:1.1.1" level="project" />
+    <orderEntry type="library" name="Maven: org.jacoco:org.jacoco.agent:runtime:0.8.3" level="project" />
+    <orderEntry type="module" module-name="service_base" />
+    <orderEntry type="module" module-name="common_utils" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-pool2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.7.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.google.code.findbugs:jsr305:3.0.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-core:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.ws.rs:jsr311-api:1.1.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-serialization:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.fasterxml.jackson.module:jackson-module-afterburner:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-metrics-event-stream:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-javanica:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.ow2.asm:asm:5.0.4" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.4" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava-reactive-streams:1.2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.yaml:snakeyaml:1.25" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-el:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.0.18.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:1.3.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.4.6" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-generator:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-configuration-processor:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:8.0.18" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.velocity:velocity-engine-core:2.0" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-lang3:3.9" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.reflections:reflections:0.9.11" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.21.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:18.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.1.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.projectlombok:lombok:1.18.10" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi:3.17" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.13" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-collections4:4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml-schemas:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.xmlbeans:xmlbeans:2.6.0" level="project" />
+    <orderEntry type="library" name="Maven: stax:stax-api:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.virtuald:curvesapi:1.04" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.3.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.12" level="project" />
+    <orderEntry type="library" name="Maven: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.gson:gson:2.8.2" level="project" />
+    <orderEntry type="library" name="Maven: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest-core:2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest:2.1" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: service/service_edu/src/main/java/com/atguigu/service/service/EduCourseDescriptionService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/service/EduCourseDescriptionService.java b/service/service_edu/src/main/java/com/atguigu/service/service/EduCourseDescriptionService.java
new file mode 100644
--- /dev/null	(date 1609836237171)
+++ b/service/service_edu/src/main/java/com/atguigu/service/service/EduCourseDescriptionService.java	(date 1609836237171)
@@ -0,0 +1,17 @@
+package com.atguigu.service.service;
+
+import com.atguigu.service.entity.EduCourseDescription;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * 课程简介 服务类
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+public interface EduCourseDescriptionService extends IService<EduCourseDescription> {
+
+    void removeByCourseId(String id);
+}
Index: service/service_edu/src/main/java/com/atguigu/service/controller/EduTeacherController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/controller/EduTeacherController.java b/service/service_edu/src/main/java/com/atguigu/service/controller/EduTeacherController.java
new file mode 100644
--- /dev/null	(date 1609214906506)
+++ b/service/service_edu/src/main/java/com/atguigu/service/controller/EduTeacherController.java	(date 1609214906506)
@@ -0,0 +1,121 @@
+package com.atguigu.service.controller;
+
+
+import com.atguigu.Result.R;
+import com.atguigu.service.entity.EduTeacher;
+import com.atguigu.service.entity.TeacherQuery;
+import com.atguigu.service.service.EduTeacherService;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.core.metadata.IPage;
+
+import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.util.StringUtils;
+import org.springframework.web.bind.annotation.*;
+
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+/**
+ * <p>
+ * 讲师 前端控制器
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-26
+ */
+@RestController
+@RequestMapping("/service/edu-teacher")
+@CrossOrigin
+public class EduTeacherController {
+
+    @Autowired
+    private EduTeacherService teacherService;
+    //查找所有教师
+    @GetMapping("findAll")
+    public R findAll(){
+        List<EduTeacher> list = teacherService.list(null);
+        return R.ok().data("rows",list);
+    }
+    //删除教师
+    @DeleteMapping({"delete/{id}"})
+    public R deleted(@PathVariable String id){
+        boolean b = teacherService.removeById(id);
+        return b?R.ok():R.error();
+    }
+
+    //分页查询所有教师
+    @GetMapping("teacherList/{current}/{limit}")
+    public R teacherList(@PathVariable long current,
+                         @PathVariable long limit){
+        Page<EduTeacher> page = new Page<>(current,limit);
+        QueryWrapper<EduTeacher> wrapper = new QueryWrapper<>();
+        //排序
+        wrapper.orderByDesc("gmt_create");
+
+        teacherService.page(page, wrapper);
+
+        return R.ok().data("total",page.getTotal()).data("rows",page.getRecords());
+    }
+
+    //条件查询加分页
+    @PostMapping("getTeacher/{current}/{limit}")
+    public R getTeacher(@PathVariable long current,
+                        @PathVariable long limit,
+                        @RequestBody(required = false)TeacherQuery teacherQuery){
+        Page<EduTeacher> teacherPage = new Page<>(current,limit);
+
+        //查询条件 这里要判断一下参数是否合格
+        QueryWrapper<EduTeacher> queryWrapper = new QueryWrapper();
+        String name = teacherQuery.getName();
+        Integer level = teacherQuery.getLevel();
+        String gmtCreat = teacherQuery.getGmtCreat();
+        String gmtEnd = teacherQuery.getGmtEnd();
+        if(!StringUtils.isEmpty(name)){
+            queryWrapper.like("name",name);
+        }
+
+        if(!StringUtils.isEmpty(level)){
+            queryWrapper.eq("level",level);
+        }
+
+            if(!StringUtils.isEmpty(gmtCreat)){
+            queryWrapper.gt("gmt_create",gmtCreat);
+        }
+
+        if(!StringUtils.isEmpty(gmtEnd)){
+            queryWrapper.le("gmt_modified",gmtEnd);
+        }
+
+        teacherService.page(teacherPage,queryWrapper);
+        Map map = new HashMap();
+        map.put("total",teacherPage.getTotal());
+        map.put("rows",teacherPage.getRecords());
+
+        return R.ok().data(map);
+    }
+
+    //添加讲师
+    @PostMapping("addTeacher")
+    public R addTeacher(@RequestBody EduTeacher eduTeacher){
+        boolean save = teacherService.save(eduTeacher);
+        return save? R.ok(): R.error();
+    }
+
+    //修改讲师  必须先查询数据在修改
+    @GetMapping("getTeacher/{id}")
+    public R getTeacher(@PathVariable long id){
+        EduTeacher byId = teacherService.getById(id);
+        return R.ok().data("teacher",byId);
+    }
+
+    @PostMapping("editTeacher")
+    public R editTeacher(@RequestBody EduTeacher eduTeacher){
+        boolean b = teacherService.updateById(eduTeacher);
+        return b?R.ok(): R.error();
+
+    }
+
+}
+
Index: service/service_edu/src/main/java/com/atguigu/service/service/EduVideoService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/service/EduVideoService.java b/service/service_edu/src/main/java/com/atguigu/service/service/EduVideoService.java
new file mode 100644
--- /dev/null	(date 1609836237190)
+++ b/service/service_edu/src/main/java/com/atguigu/service/service/EduVideoService.java	(date 1609836237190)
@@ -0,0 +1,17 @@
+package com.atguigu.service.service;
+
+import com.atguigu.service.entity.EduVideo;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * 课程视频 服务类
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+public interface EduVideoService extends IService<EduVideo> {
+
+    void removeByCourseId(String id);
+}
Index: service/service_msm/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_msm/pom.xml b/service/service_msm/pom.xml
new file mode 100644
--- /dev/null	(date 1610107921118)
+++ b/service/service_msm/pom.xml	(date 1610107921118)
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>service</artifactId>
+        <groupId>com.atguigu</groupId>
+        <version>0.0.1-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>service_msm</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+    <dependencies>
+        <dependency>
+            <groupId>com.alibaba</groupId>
+            <artifactId>fastjson</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>com.aliyun</groupId>
+            <artifactId>aliyun-java-sdk-core</artifactId>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: service/service_edu/src/main/java/com/atguigu/service/service/EduTeacherService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/service/EduTeacherService.java b/service/service_edu/src/main/java/com/atguigu/service/service/EduTeacherService.java
new file mode 100644
--- /dev/null	(date 1610545618112)
+++ b/service/service_edu/src/main/java/com/atguigu/service/service/EduTeacherService.java	(date 1610545618112)
@@ -0,0 +1,20 @@
+package com.atguigu.service.service;
+
+import com.atguigu.service.entity.EduTeacher;
+import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+import java.util.Map;
+
+/**
+ * <p>
+ * 讲师 服务类
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-26
+ */
+public interface EduTeacherService extends IService<EduTeacher> {
+
+    Map<String, Object> findByPage(Page<EduTeacher> page);
+}
Index: service/service_oss/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_oss/pom.xml b/service/service_oss/pom.xml
new file mode 100644
--- /dev/null	(date 1609246980389)
+++ b/service/service_oss/pom.xml	(date 1609246980389)
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>service</artifactId>
+        <groupId>com.atguigu</groupId>
+        <version>0.0.1-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>service_oss</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+    <dependencies>
+        <dependency>
+            <groupId>com.aliyun.oss</groupId>
+            <artifactId>aliyun-sdk-oss</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>joda-time</groupId>
+            <artifactId>joda-time</artifactId>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: service/service_edu/src/main/java/com/atguigu/service/controller/EduChapterController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/controller/EduChapterController.java b/service/service_edu/src/main/java/com/atguigu/service/controller/EduChapterController.java
new file mode 100644
--- /dev/null	(date 1609590552672)
+++ b/service/service_edu/src/main/java/com/atguigu/service/controller/EduChapterController.java	(date 1609590552672)
@@ -0,0 +1,85 @@
+package com.atguigu.service.controller;
+
+
+import com.atguigu.Result.R;
+import com.atguigu.service.entity.EduChapter;
+import com.atguigu.service.entity.vo.ChapterVo;
+import com.atguigu.service.entity.vo.CourseInfo;
+import com.atguigu.service.service.EduChapterService;
+import com.atguigu.service.service.EduCourseService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.*;
+
+import java.util.List;
+
+/**
+ * <p>
+ * 课程 前端控制器
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+@RestController
+@RequestMapping("/service/chapter")
+@CrossOrigin
+public class EduChapterController {
+
+    @Autowired
+    private EduChapterService chapterService;
+
+
+
+    //获取课程ID获取课程大纲
+    @GetMapping("getAllChapter/{id}")
+    public R getAllChapterList(@PathVariable String id){
+        List<ChapterVo> chapterVoList =  chapterService.getAllChapterList(id);
+        return R.ok().data("AllList",chapterVoList);
+    }
+
+    //根据课程id获取课程信息
+    @GetMapping("getCourse/{id}")
+    public R getCourse(@PathVariable("id")String id){
+        CourseInfo courseInfo = chapterService.getInfoByCourseId(id);
+        return R.ok().data("courseInfo",courseInfo);
+    }
+
+    //修改课程信息
+    @PostMapping("updateCourse")
+    public R updateCourse(@RequestBody CourseInfo courseInfo){
+        chapterService.updateByCourseId(courseInfo);
+        return R.ok();
+    }
+
+    //添加章节信息
+    @PostMapping("addChapter")
+    public R addChapter(@RequestBody EduChapter chapter){
+        chapterService.save(chapter);
+        return R.ok();
+    }
+
+    //修改章节信息
+    @PostMapping("updateChapter")
+    public R updateChapter(@RequestBody EduChapter chapter){
+        chapterService.updateById(chapter);
+        return R.ok();
+    }
+
+    //删除章节信息
+    @DeleteMapping("delete/{id}")
+    public R deleteChapter(@PathVariable("id")String id){
+        //如果章节下有小节则不让删除
+        boolean flag =  chapterService.deleteByVideoNumb(id);
+        return flag? R.ok(): R.error();
+
+    }
+
+    //通过章节id获取章节信息
+    @GetMapping("getChapterById/{id}")
+    public R getChapterById(@PathVariable("id")String id){
+        EduChapter chapter = chapterService.getById(id);
+        return R.ok().data("chapter",chapter);
+    }
+
+}
+
Index: service/service_edu/src/main/java/com/atguigu/service/controller/EduSubjectController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/controller/EduSubjectController.java b/service/service_edu/src/main/java/com/atguigu/service/controller/EduSubjectController.java
new file mode 100644
--- /dev/null	(date 1609395644690)
+++ b/service/service_edu/src/main/java/com/atguigu/service/controller/EduSubjectController.java	(date 1609395644690)
@@ -0,0 +1,47 @@
+package com.atguigu.service.controller;
+
+
+import com.alibaba.excel.EasyExcel;
+import com.alibaba.excel.ExcelReader;
+import com.atguigu.Result.R;
+import com.atguigu.service.entity.vo.OneSubjectName;
+import com.atguigu.service.service.EduSubjectService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.*;
+
+import org.springframework.web.multipart.MultipartFile;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.List;
+
+/**
+ * <p>
+ * 课程科目 前端控制器
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-30
+ */
+@RestController
+@RequestMapping("/service/subject")
+@CrossOrigin
+public class EduSubjectController {
+
+    @Autowired
+    private EduSubjectService service;
+
+    @PostMapping("/addSubject")
+    public R uploadExcel(MultipartFile file){
+        //调用service进行文件的读取和存入数据库
+        service.addSubject(file);
+        return R.ok();
+    }
+    @GetMapping("/getAllSubjectList")
+    public R getAllList(){
+        List<OneSubjectName>  list = service.getAllSubjectList();
+        return R.ok().data("AllList",list);
+    }
+
+}
+
Index: service/service_oss/service_oss.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_oss/service_oss.iml b/service/service_oss/service_oss.iml
new file mode 100644
--- /dev/null	(date 1611309697959)
+++ b/service/service_oss/service_oss.iml	(date 1611309697959)
@@ -0,0 +1,213 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: com.aliyun.oss:aliyun-sdk-oss:3.1.0" level="project" />
+    <orderEntry type="library" name="Maven: org.jdom:jdom:1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.sun.jersey:jersey-json:1.9" level="project" />
+    <orderEntry type="library" name="Maven: org.codehaus.jettison:jettison:1.1" level="project" />
+    <orderEntry type="library" name="Maven: stax:stax-api:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.sun.xml.bind:jaxb-impl:2.2.3-1" level="project" />
+    <orderEntry type="library" name="Maven: org.codehaus.jackson:jackson-core-asl:1.8.3" level="project" />
+    <orderEntry type="library" name="Maven: org.codehaus.jackson:jackson-mapper-asl:1.8.3" level="project" />
+    <orderEntry type="library" name="Maven: org.codehaus.jackson:jackson-jaxrs:1.8.3" level="project" />
+    <orderEntry type="library" name="Maven: org.codehaus.jackson:jackson-xc:1.8.3" level="project" />
+    <orderEntry type="library" name="Maven: com.sun.jersey:jersey-core:1.9" level="project" />
+    <orderEntry type="library" name="Maven: com.aliyun:aliyun-java-sdk-core:4.3.3" level="project" />
+    <orderEntry type="library" name="Maven: javax.xml.bind:jaxb-api:2.3.1" level="project" />
+    <orderEntry type="library" name="Maven: javax.activation:javax.activation-api:1.2.0" level="project" />
+    <orderEntry type="library" name="Maven: com.sun.xml.bind:jaxb-core:2.3.0.1" level="project" />
+    <orderEntry type="library" name="Maven: javax.activation:activation:1.1.1" level="project" />
+    <orderEntry type="library" name="Maven: org.jacoco:org.jacoco.agent:runtime:0.8.3" level="project" />
+    <orderEntry type="library" name="Maven: com.aliyun:aliyun-java-sdk-ram:3.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.aliyun:aliyun-java-sdk-sts:3.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.aliyun:aliyun-java-sdk-ecs:4.2.0" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.1" level="project" />
+    <orderEntry type="module" module-name="service_base" />
+    <orderEntry type="module" module-name="common_utils" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-pool2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.7.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.google.code.findbugs:jsr305:3.0.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-serialization:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.fasterxml.jackson.module:jackson-module-afterburner:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-metrics-event-stream:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-javanica:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.ow2.asm:asm:5.0.4" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.4" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava-reactive-streams:1.2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.28" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.yaml:snakeyaml:1.25" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-el:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.0.18.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:1.3.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.4.6" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-generator:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-configuration-processor:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:8.0.18" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.velocity:velocity-engine-core:2.0" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-lang3:3.9" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.reflections:reflections:0.9.11" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.21.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:18.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.1.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.projectlombok:lombok:1.18.10" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi:3.17" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.13" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-collections4:4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml-schemas:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.xmlbeans:xmlbeans:2.6.0" level="project" />
+    <orderEntry type="library" name="Maven: com.github.virtuald:curvesapi:1.04" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.3.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.12" level="project" />
+    <orderEntry type="library" name="Maven: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.gson:gson:2.8.2" level="project" />
+    <orderEntry type="library" name="Maven: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest-core:2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest:2.1" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: service/service_edu/src/main/java/com/atguigu/service/controller/EduCourseDescriptionController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/controller/EduCourseDescriptionController.java b/service/service_edu/src/main/java/com/atguigu/service/controller/EduCourseDescriptionController.java
new file mode 100644
--- /dev/null	(date 1609417219723)
+++ b/service/service_edu/src/main/java/com/atguigu/service/controller/EduCourseDescriptionController.java	(date 1609417219723)
@@ -0,0 +1,21 @@
+package com.atguigu.service.controller;
+
+
+import org.springframework.web.bind.annotation.RequestMapping;
+
+import org.springframework.web.bind.annotation.RestController;
+
+/**
+ * <p>
+ * 课程简介 前端控制器
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+@RestController
+@RequestMapping("/service/edu-course-description")
+public class EduCourseDescriptionController {
+
+}
+
Index: service/service_edu/src/main/java/com/atguigu/service/controller/EduLoginController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/controller/EduLoginController.java b/service/service_edu/src/main/java/com/atguigu/service/controller/EduLoginController.java
new file mode 100644
--- /dev/null	(date 1611311137911)
+++ b/service/service_edu/src/main/java/com/atguigu/service/controller/EduLoginController.java	(date 1611311137911)
@@ -0,0 +1,23 @@
+package com.atguigu.service.controller;
+
+import com.atguigu.Result.R;
+import org.springframework.web.bind.annotation.*;
+
+import javax.crypto.interfaces.PBEKey;
+
+@RestController
+@RequestMapping("/eduservice/user")
+public class EduLoginController {
+
+
+    @PostMapping("login")
+    public R login(){
+        return R.ok().data("token","admin");
+    }
+
+    @GetMapping("info")
+    public R getInfo(){
+
+        return R.ok().data("roles","[admin]").data("name","Super name").data("avatar","https://www.baidu.com/link?url=6MXMfScjkj1TLYU51WDpakVVDfFIhGD4aHmnKpFHTwwddsdmR7e1V3NkoTOwuiO9chFbmeIlB3Cgm_Nie42bCzDJ7L3h6KPq0sTmXZcNXidoD3UUPG_WeLzHq0AuLwDHVdpDSum7JbDbL2qnUOfr1KVwKO18Dhbo5PdHeOy9zQQd6ocbdUdAzBUkiTfY2qwQyX4WBIy1I1Ed0mlUAhByVKhFd5Uk1-JeowXUekyx_zWbniHokijzH2OCWrCam31UBRehX31yxr2YcE5c3e2Jlr8CpGovVumqRM_J5d_Av3zf9T7eL8DSlfZ9Tsde2XStSfuWGpeWtQRjGO3VGzRfPUyfg7AFIcXnE5e1g57M4r96hOJicnRJdzls0-8yWyNb4LAN0JoIqlz2cqdtsQlumKXZqaB_CS0Tjcf9rfIjcDcdD4PiNrgYyOh5V9tZQAfaEWtCPw7MiJMdqpv7O6dJcrXTmPENGpuuudJK_i2MHTEXeWwEzXllWN8hNu9VqE-BeXIYpph53b1ztMW0kgA-ttxbqorN61veCK1ISM7wkK3roY4PRrA6t9TNpQ0XSjFCc_WUSwFgcWkVDxxjMeXEba&click_t=1609145368653&s_info=1905_902&wd=&eqid=d3a7393400012193000000065fe99c14");
+    }
+}
Index: service/service_vod/service_vod.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_vod/service_vod.iml b/service/service_vod/service_vod.iml
new file mode 100644
--- /dev/null	(date 1611309697973)
+++ b/service/service_vod/service_vod.iml	(date 1611309697973)
@@ -0,0 +1,216 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: com.aliyun:aliyun-java-sdk-core:4.3.3" level="project" />
+    <orderEntry type="library" name="Maven: javax.xml.bind:jaxb-api:2.3.1" level="project" />
+    <orderEntry type="library" name="Maven: javax.activation:javax.activation-api:1.2.0" level="project" />
+    <orderEntry type="library" name="Maven: com.sun.xml.bind:jaxb-core:2.3.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.sun.xml.bind:jaxb-impl:2.3.2" level="project" />
+    <orderEntry type="library" name="Maven: javax.activation:activation:1.1.1" level="project" />
+    <orderEntry type="library" name="Maven: org.jacoco:org.jacoco.agent:runtime:0.8.3" level="project" />
+    <orderEntry type="library" name="Maven: com.aliyun.oss:aliyun-sdk-oss:3.1.0" level="project" />
+    <orderEntry type="library" name="Maven: org.jdom:jdom:1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.sun.jersey:jersey-json:1.9" level="project" />
+    <orderEntry type="library" name="Maven: org.codehaus.jettison:jettison:1.1" level="project" />
+    <orderEntry type="library" name="Maven: stax:stax-api:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.codehaus.jackson:jackson-core-asl:1.8.3" level="project" />
+    <orderEntry type="library" name="Maven: org.codehaus.jackson:jackson-mapper-asl:1.8.3" level="project" />
+    <orderEntry type="library" name="Maven: org.codehaus.jackson:jackson-jaxrs:1.8.3" level="project" />
+    <orderEntry type="library" name="Maven: org.codehaus.jackson:jackson-xc:1.8.3" level="project" />
+    <orderEntry type="library" name="Maven: com.sun.jersey:jersey-core:1.9" level="project" />
+    <orderEntry type="library" name="Maven: com.aliyun:aliyun-java-sdk-ram:3.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.aliyun:aliyun-java-sdk-sts:3.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.aliyun:aliyun-java-sdk-ecs:4.2.0" level="project" />
+    <orderEntry type="library" name="Maven: com.aliyun:aliyun-java-sdk-vod:2.15.2" level="project" />
+    <orderEntry type="library" name="Maven: com.aliyun:aliyun-sdk-vod-upload:1.4.11" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.28" level="project" />
+    <orderEntry type="library" name="Maven: org.json:json:20170516" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.gson:gson:2.8.2" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.1" level="project" />
+    <orderEntry type="module" module-name="service_base" />
+    <orderEntry type="module" module-name="common_utils" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-pool2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.7.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.google.code.findbugs:jsr305:3.0.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-serialization:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.fasterxml.jackson.module:jackson-module-afterburner:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-metrics-event-stream:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-javanica:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.ow2.asm:asm:5.0.4" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.4" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava-reactive-streams:1.2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.yaml:snakeyaml:1.25" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-el:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.0.18.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:1.3.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.4.6" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-generator:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-configuration-processor:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:8.0.18" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.velocity:velocity-engine-core:2.0" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-lang3:3.9" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.reflections:reflections:0.9.11" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.21.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:18.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.1.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.projectlombok:lombok:1.18.10" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi:3.17" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.13" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-collections4:4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml-schemas:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.xmlbeans:xmlbeans:2.6.0" level="project" />
+    <orderEntry type="library" name="Maven: com.github.virtuald:curvesapi:1.04" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.3.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.12" level="project" />
+    <orderEntry type="library" name="Maven: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.6" level="project" />
+    <orderEntry type="library" name="Maven: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest-core:2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest:2.1" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: service/service_edu/src/main/java/com/atguigu/service/controller/EduVideoController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/controller/EduVideoController.java b/service/service_edu/src/main/java/com/atguigu/service/controller/EduVideoController.java
new file mode 100644
--- /dev/null	(date 1609942097991)
+++ b/service/service_edu/src/main/java/com/atguigu/service/controller/EduVideoController.java	(date 1609942097991)
@@ -0,0 +1,72 @@
+package com.atguigu.service.controller;
+
+
+import com.atguigu.Result.R;
+import com.atguigu.service.client.VodClient;
+import com.atguigu.service.entity.EduVideo;
+import com.atguigu.service.service.EduVideoService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.util.StringUtils;
+import org.springframework.web.bind.annotation.*;
+
+/**
+ * <p>
+ * 课程视频 前端控制器
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+@RestController
+@RequestMapping("/service/video")
+@CrossOrigin
+public class EduVideoController {
+    @Autowired
+    private EduVideoService videoService;
+
+    @Autowired
+    private VodClient client;
+    //添加小节
+    @PostMapping("addVideo")
+    public R addVideo(@RequestBody(required = false) EduVideo eduVideo){
+        System.out.println(eduVideo);
+      videoService.save(eduVideo);
+     return R.ok();
+    }
+
+
+    //删除小节
+    @DeleteMapping("deleteVideo/{id}")
+    public R deleteVideo(@PathVariable String id){
+        //删除小节的同时去删除视频信息
+        //根据小节id查询视频id
+        EduVideo video = videoService.getById(id);
+        String vid = video.getVideoSourceId();
+        //根据视频id删除视频在删除小节 判断是否有视频id
+        if(!StringUtils.isEmpty(vid)){
+            client.deleteFile(vid);
+        }
+
+
+
+
+        videoService.removeById(id);
+        return R.ok();
+    }
+
+    //编辑小节
+    @PostMapping("editVideo")
+    public R editVideo(@RequestBody EduVideo eduVideo){
+        EduVideo byId = videoService.getById(eduVideo.getId());
+        videoService.updateById(eduVideo);
+        return R.ok().data("video",byId);
+    }
+    //获取小节信息
+    @GetMapping("getVideo/{id}")
+    public R getVideo(@PathVariable("id")String id){
+        EduVideo e = videoService.getById(id);
+        return R.ok().data("video",e);
+    }
+
+}
+
Index: service/service_vod/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_vod/pom.xml b/service/service_vod/pom.xml
new file mode 100644
--- /dev/null	(date 1609854049006)
+++ b/service/service_vod/pom.xml	(date 1609854049006)
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>service</artifactId>
+        <groupId>com.atguigu</groupId>
+        <version>0.0.1-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>service_vod</artifactId>
+
+    <dependencies>
+        <dependency>
+            <groupId>com.aliyun</groupId>
+            <artifactId>aliyun-java-sdk-core</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.aliyun.oss</groupId>
+            <artifactId>aliyun-sdk-oss</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.aliyun</groupId>
+            <artifactId>aliyun-java-sdk-vod</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.aliyun</groupId>
+            <artifactId>aliyun-sdk-vod-upload</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.alibaba</groupId>
+            <artifactId>fastjson</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.json</groupId>
+            <artifactId>json</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.google.code.gson</groupId>
+            <artifactId>gson</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>joda-time</groupId>
+            <artifactId>joda-time</artifactId>
+        </dependency>
+    </dependencies>
+</project>
Index: service/service_edu/src/main/java/com/atguigu/service/controller/EduCourseController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/src/main/java/com/atguigu/service/controller/EduCourseController.java b/service/service_edu/src/main/java/com/atguigu/service/controller/EduCourseController.java
new file mode 100644
--- /dev/null	(date 1610779077597)
+++ b/service/service_edu/src/main/java/com/atguigu/service/controller/EduCourseController.java	(date 1610779077597)
@@ -0,0 +1,121 @@
+package com.atguigu.service.controller;
+
+
+import com.atguigu.Result.R;
+import com.atguigu.Result.webVo.CoursePublishVoOrder;
+import com.atguigu.service.client.VodClient;
+import com.atguigu.service.entity.EduCourse;
+import com.atguigu.service.entity.vo.CourseInfo;
+import com.atguigu.service.entity.vo.CoursePublishVo;
+import com.atguigu.service.entity.vo.QueryCourseVo;
+import com.atguigu.service.service.EduCourseService;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
+import org.springframework.beans.BeanUtils;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.*;
+
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+/**
+ * <p>
+ * 课程 前端控制器
+ * </p>
+ *
+ * @author testjava
+ * @since 2020-12-31
+ */
+@RestController
+@RequestMapping("/service/course")
+@CrossOrigin
+public class EduCourseController {
+
+
+    @Autowired
+    private EduCourseService courseService;
+
+
+
+    //查询所有课程
+    @GetMapping("getAll")
+    public R getAllCourse(){
+        List<EduCourse> list = courseService.list(null);
+
+        return R.ok().data("list",list);
+    }
+    //删除课程信息
+    @DeleteMapping("delete/{id}")
+    public R deleteCourse(@PathVariable("id")String id){
+        //删除课程并同时删除视频资源
+        courseService.removeByCourseId(id);
+        return R.ok();
+    }
+
+    //添加课程
+    @PostMapping("/addCourse")
+    public R addCourse(@RequestBody CourseInfo courseInfo){
+    String cid =  courseService.saveCourse(courseInfo);
+    return R.ok().data("courseId",cid);
+    }
+
+    //获取课程信息
+    @GetMapping("getCourse/{id}")
+    public R getCourse(@PathVariable("id")String id){
+        CoursePublishVo coursePublishVo =  courseService.getCourse(id);
+        return R.ok().data("courseVo",coursePublishVo);
+    }
+
+    //更改课程发布的状态
+        @PutMapping("publishCourse/{id}")
+    public R publishCourse(@PathVariable("id")String id){
+        EduCourse course = new EduCourse();
+        course.setId(id);
+        course.setStatus("Normal");
+        courseService.updateById(course);
+        return R.ok();
+    }
+
+    //课程的模糊查询带分页
+    @PostMapping("queryCourse/{current}/{limit}")
+    public R queryCourse(@PathVariable Integer current,
+                         @PathVariable Integer limit,
+                         @RequestBody QueryCourseVo queryCourseVo){
+        System.out.println(queryCourseVo);
+
+        QueryWrapper<EduCourse> queryWrapper = new QueryWrapper<>();
+
+        Page<EduCourse> page = new Page<>(current,limit);
+        String status = queryCourseVo.getStatus();
+        String title = queryCourseVo.getTitle();
+        if(status!=null){
+            queryWrapper.eq("status",status);
+        }
+
+        if(title!=null){
+            queryWrapper.eq("title",title);
+        }
+
+        courseService.page(page,queryWrapper);
+        Map map =new HashMap();
+        map.put("list",page.getRecords());
+        map.put("total",page.getTotal());
+
+        return R.ok().data(map);
+    }
+
+    @GetMapping("getCourseVo/{id}")
+    public CoursePublishVoOrder getCourseVo(@PathVariable("id")String id){
+        CoursePublishVo coursePublishVo =  courseService.getCourse(id);
+        CoursePublishVoOrder publishVoOrder = new CoursePublishVoOrder();
+        BeanUtils.copyProperties(coursePublishVo,publishVoOrder);
+
+        return publishVoOrder;
+    }
+
+
+
+
+}
+
Index: service/service_order/service_order.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/service_order.iml b/service/service_order/service_order.iml
new file mode 100644
--- /dev/null	(date 1611309697984)
+++ b/service/service_order/service_order.iml	(date 1611309697984)
@@ -0,0 +1,196 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.28" level="project" />
+    <orderEntry type="library" name="Maven: com.github.wxpay:wxpay-sdk:0.0.3" level="project" />
+    <orderEntry type="module" module-name="service_base" />
+    <orderEntry type="module" module-name="common_utils" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-pool2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.7.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.google.code.findbugs:jsr305:3.0.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-core:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.ws.rs:jsr311-api:1.1.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-serialization:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.fasterxml.jackson.module:jackson-module-afterburner:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-metrics-event-stream:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-javanica:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.ow2.asm:asm:5.0.4" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.4" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava-reactive-streams:1.2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.yaml:snakeyaml:1.25" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-el:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.0.18.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:1.3.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.4.6" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-generator:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-configuration-processor:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:8.0.18" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.velocity:velocity-engine-core:2.0" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-lang3:3.9" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.reflections:reflections:0.9.11" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.21.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:18.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.1.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.projectlombok:lombok:1.18.10" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi:3.17" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.13" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-collections4:4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml-schemas:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.xmlbeans:xmlbeans:2.6.0" level="project" />
+    <orderEntry type="library" name="Maven: stax:stax-api:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.virtuald:curvesapi:1.04" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.3.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.12" level="project" />
+    <orderEntry type="library" name="Maven: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.gson:gson:2.8.2" level="project" />
+    <orderEntry type="library" name="Maven: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest-core:2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest:2.1" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: service/service_order/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/pom.xml b/service/service_order/pom.xml
new file mode 100644
--- /dev/null	(date 1611037086510)
+++ b/service/service_order/pom.xml	(date 1611037086510)
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>service</artifactId>
+        <groupId>com.atguigu</groupId>
+        <version>0.0.1-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>service_order</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+    <dependencies>
+        <dependency>
+            <groupId>com.alibaba</groupId>
+            <artifactId>fastjson</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>com.github.wxpay</groupId>
+            <artifactId>wxpay-sdk</artifactId>
+            <version>0.0.3</version>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: service/service_ucenter/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_ucenter/pom.xml b/service/service_ucenter/pom.xml
new file mode 100644
--- /dev/null	(date 1610522403639)
+++ b/service/service_ucenter/pom.xml	(date 1610522403639)
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>service</artifactId>
+        <groupId>com.atguigu</groupId>
+        <version>0.0.1-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>service_ucenter</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <!--httpclient-->
+        <dependency>
+            <groupId>org.apache.httpcomponents</groupId>
+            <artifactId>httpclient</artifactId>
+        </dependency>
+        <!--commons-io-->
+        <dependency>
+            <groupId>commons-io</groupId>
+            <artifactId>commons-io</artifactId>
+        </dependency>
+        <!--gson-->
+        <dependency>
+            <groupId>com.google.code.gson</groupId>
+            <artifactId>gson</artifactId>
+        </dependency>
+    </dependencies>
+</project>
\ No newline at end of file
Index: service/service_ucenter/service_ucenter.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_ucenter/service_ucenter.iml b/service/service_ucenter/service_ucenter.iml
new file mode 100644
--- /dev/null	(date 1611309697963)
+++ b/service/service_ucenter/service_ucenter.iml	(date 1611309697963)
@@ -0,0 +1,195 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.12" level="project" />
+    <orderEntry type="library" name="Maven: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.13" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.gson:gson:2.8.2" level="project" />
+    <orderEntry type="module" module-name="service_base" />
+    <orderEntry type="module" module-name="common_utils" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-pool2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.7.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.google.code.findbugs:jsr305:3.0.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-core:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.ws.rs:jsr311-api:1.1.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-serialization:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.fasterxml.jackson.module:jackson-module-afterburner:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-metrics-event-stream:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-javanica:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.ow2.asm:asm:5.0.4" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.4" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava-reactive-streams:1.2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.28" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.yaml:snakeyaml:1.25" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-el:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.0.18.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:1.3.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.4.6" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-generator:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-configuration-processor:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:8.0.18" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.velocity:velocity-engine-core:2.0" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-lang3:3.9" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.reflections:reflections:0.9.11" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.21.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:18.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.1.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.projectlombok:lombok:1.18.10" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-collections4:4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml-schemas:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.xmlbeans:xmlbeans:2.6.0" level="project" />
+    <orderEntry type="library" name="Maven: stax:stax-api:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.virtuald:curvesapi:1.04" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.3.1" level="project" />
+    <orderEntry type="library" name="Maven: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest-core:2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest:2.1" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: service/service_statistics/service_statistics.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_statistics/service_statistics.iml b/service/service_statistics/service_statistics.iml
new file mode 100644
--- /dev/null	(date 1611309697944)
+++ b/service/service_statistics/service_statistics.iml	(date 1611309697944)
@@ -0,0 +1,195 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="service_base" />
+    <orderEntry type="module" module-name="common_utils" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.43.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-pool2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.7.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.60" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.google.code.findbugs:jsr305:3.0.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-core:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.ws.rs:jsr311-api:1.1.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-hystrix:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-serialization:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.fasterxml.jackson.module:jackson-module-afterburner:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-metrics-event-stream:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-javanica:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.ow2.asm:asm:5.0.4" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.4" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava-reactive-streams:1.2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-alibaba-nacos-discovery:0.2.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.0.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.28" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.4.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.12.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.yaml:snakeyaml:1.25" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.10.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-el:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.27" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.0.18.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:1.3.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.4.6" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-generator:3.0.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-configuration-processor:2.2.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:8.0.18" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.velocity:velocity-engine-core:2.0" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-lang3:3.9" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.29" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.13" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.reflections:reflections:0.9.11" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.21.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:18.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.1.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.projectlombok:lombok:1.18.10" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi:3.17" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.13" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-collections4:4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml-schemas:3.17" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.xmlbeans:xmlbeans:2.6.0" level="project" />
+    <orderEntry type="library" name="Maven: stax:stax-api:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.virtuald:curvesapi:1.04" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.3.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.12" level="project" />
+    <orderEntry type="library" name="Maven: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.gson:gson:2.8.2" level="project" />
+    <orderEntry type="library" name="Maven: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest-core:2.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest:2.1" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduVideoMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduVideoMapper.xml b/service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduVideoMapper.xml
new file mode 100644
--- /dev/null	(date 1611039146147)
+++ b/service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduVideoMapper.xml	(date 1611039146147)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.service.mapper.EduVideoMapper">
+
+</mapper>
Index: service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduTeacherMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduTeacherMapper.xml b/service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduTeacherMapper.xml
new file mode 100644
--- /dev/null	(date 1611039146149)
+++ b/service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduTeacherMapper.xml	(date 1611039146149)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.service.mapper.EduTeacherMapper">
+
+</mapper>
Index: service/service_statistics/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_statistics/pom.xml b/service/service_statistics/pom.xml
new file mode 100644
--- /dev/null	(date 1611050077200)
+++ b/service/service_statistics/pom.xml	(date 1611050077200)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>service</artifactId>
+        <groupId>com.atguigu</groupId>
+        <version>0.0.1-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>service_statistics</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+</project>
\ No newline at end of file
Index: service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduSubjectMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduSubjectMapper.xml b/service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduSubjectMapper.xml
new file mode 100644
--- /dev/null	(date 1611039146146)
+++ b/service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduSubjectMapper.xml	(date 1611039146146)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.service.mapper.EduSubjectMapper">
+
+</mapper>
Index: service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduCourseMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduCourseMapper.xml b/service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduCourseMapper.xml
new file mode 100644
--- /dev/null	(date 1611039146153)
+++ b/service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduCourseMapper.xml	(date 1611039146153)
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.service.mapper.EduCourseMapper">
+
+    <select id="getCoursePublish" resultType="com.atguigu.service.entity.vo.CoursePublishVo">
+        SELECT ec.title,et.name as teacherName,es1.title as subjectLevelOne,es2.title as subjectLevelTwo,ec.cover,ec.price,ec.lesson_num as lessonNum from
+            edu_course  ec
+                     LEFT JOIN edu_teacher et ON ec.teacher_id = et.id
+                           LEFT JOIN edu_course_description ecd ON ec.id = ecd.id
+                           LEFT JOIN edu_subject es1 ON ec.subject_parent_id = es1.id
+                           LEFT JOIN edu_subject es2 on ec.subject_id = es2.id
+        WHERE ec.id = #{id}
+    </select>
+
+    <select id="getCourseInfo" resultType="com.atguigu.service.entity.vo.CourseWebVo">
+        SELECT ec.title as title,ec.price as price
+                ,ec.lesson_num as lessonNum,
+               ec.cover as cover,
+               ec.buy_count as buyCount,
+               ec.view_count as viewCount,
+               ecd.description as description,
+               et.id as teacherId,
+               et.name as teacherName,
+               et.intro as intro,
+               et.avatar as avatar,
+               es1.id as subjectLevelOneId,
+               es2.id AS subjectLevelTwoId,
+               es1.title as subjectLevelOne,
+               es2.title as subjectLevelTwo
+        from
+            edu_course  ec
+                LEFT JOIN edu_teacher et ON ec.teacher_id = et.id
+                LEFT JOIN edu_course_description ecd ON ec.id = ecd.id
+                LEFT JOIN edu_subject es1 ON ec.subject_parent_id = es1.id
+                LEFT JOIN edu_subject es2 on ec.subject_id = es2.id
+        WHERE ec.id = #{id}
+    </select>
+
+
+</mapper>
Index: service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduCourseDescriptionMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduCourseDescriptionMapper.xml b/service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduCourseDescriptionMapper.xml
new file mode 100644
--- /dev/null	(date 1611039146150)
+++ b/service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduCourseDescriptionMapper.xml	(date 1611039146150)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.service.mapper.EduCourseDescriptionMapper">
+
+</mapper>
Index: service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduChapterMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduChapterMapper.xml b/service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduChapterMapper.xml
new file mode 100644
--- /dev/null	(date 1611039146151)
+++ b/service/service_edu/target/classes/com/atguigu/service/mapper/xml/EduChapterMapper.xml	(date 1611039146151)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.service.mapper.EduChapterMapper">
+
+</mapper>
Index: service/service_msm/src/main/java/com/atguigu/msm/utils/RandomUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_msm/src/main/java/com/atguigu/msm/utils/RandomUtil.java b/service/service_msm/src/main/java/com/atguigu/msm/utils/RandomUtil.java
new file mode 100644
--- /dev/null	(date 1610108793179)
+++ b/service/service_msm/src/main/java/com/atguigu/msm/utils/RandomUtil.java	(date 1610108793179)
@@ -0,0 +1,64 @@
+package com.atguigu.msm.utils;
+
+import java.text.DecimalFormat;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Random;
+
+/**
+ * 获取随机数
+ * 
+ * @author qianyi
+ *
+ */
+public class RandomUtil {
+
+	private static final Random random = new Random();
+
+	private static final DecimalFormat fourdf = new DecimalFormat("0000");
+
+	private static final DecimalFormat sixdf = new DecimalFormat("000000");
+
+	public static String getFourBitRandom() {
+		return fourdf.format(random.nextInt(10000));
+	}
+
+	public static String getSixBitRandom() {
+		return sixdf.format(random.nextInt(1000000));
+	}
+
+	/**
+	 * 给定数组，抽取n个数据
+	 * @param list
+	 * @param n
+	 * @return
+	 */
+	public static ArrayList getRandom(List list, int n) {
+
+		Random random = new Random();
+
+		HashMap<Object, Object> hashMap = new HashMap<Object, Object>();
+
+		// 生成随机数字并存入HashMap
+		for (int i = 0; i < list.size(); i++) {
+
+			int number = random.nextInt(100) + 1;
+
+			hashMap.put(number, i);
+		}
+
+		// 从HashMap导入数组
+		Object[] robjs = hashMap.values().toArray();
+
+		ArrayList r = new ArrayList();
+
+		// 遍历数组并打印数据
+		for (int i = 0; i < n; i++) {
+			r.add(list.get((int) robjs[i]));
+			System.out.print(list.get((int) robjs[i]) + "\t");
+		}
+		System.out.print("\n");
+		return r;
+	}
+}
Index: service/service_oss/src/main/java/com/atguigu/eduoss/utils/ContantConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_oss/src/main/java/com/atguigu/eduoss/utils/ContantConfig.java b/service/service_oss/src/main/java/com/atguigu/eduoss/utils/ContantConfig.java
new file mode 100644
--- /dev/null	(date 1609248336176)
+++ b/service/service_oss/src/main/java/com/atguigu/eduoss/utils/ContantConfig.java	(date 1609248336176)
@@ -0,0 +1,30 @@
+package com.atguigu.eduoss.utils;
+
+import org.springframework.beans.factory.InitializingBean;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.stereotype.Component;
+//实现Spring提供的接口， 将私有属性对外暴露
+@Component
+public class ContantConfig implements InitializingBean {
+    @Value("${bucketName}")
+    private String bucketName;
+    @Value("${endpoint}")
+    private String endpoint;
+    @Value("${accessKeyId}")
+    private String accessKeyId;
+    @Value("${accessKeySecret}")
+    private String accessKeySecret;
+
+    public static String BUCKETNAME;
+    public static String ENDPOINT;
+    public static String ACCESSKEYID;
+    public static String ACEESEEKEYSECRET;
+    @Override
+    public void afterPropertiesSet() throws Exception {
+        BUCKETNAME = this.bucketName;
+        ENDPOINT = this.endpoint;
+        ACCESSKEYID = this.accessKeyId;
+        ACEESEEKEYSECRET = this.accessKeySecret;
+
+    }
+}
Index: service/service_msm/src/main/java/com/atguigu/msm/service/MsmService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_msm/src/main/java/com/atguigu/msm/service/MsmService.java b/service/service_msm/src/main/java/com/atguigu/msm/service/MsmService.java
new file mode 100644
--- /dev/null	(date 1610108945845)
+++ b/service/service_msm/src/main/java/com/atguigu/msm/service/MsmService.java	(date 1610108945845)
@@ -0,0 +1,6 @@
+package com.atguigu.msm.service;
+
+public interface MsmService {
+
+    boolean sendCode(String phone);
+}
Index: service/service_msm/src/main/java/com/atguigu/msm/controller/MsmController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_msm/src/main/java/com/atguigu/msm/controller/MsmController.java b/service/service_msm/src/main/java/com/atguigu/msm/controller/MsmController.java
new file mode 100644
--- /dev/null	(date 1610508349939)
+++ b/service/service_msm/src/main/java/com/atguigu/msm/controller/MsmController.java	(date 1610508349939)
@@ -0,0 +1,27 @@
+package com.atguigu.msm.controller;
+
+import com.atguigu.Result.R;
+import com.atguigu.msm.service.MsmService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.cache.annotation.Cacheable;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.web.bind.annotation.*;
+
+@RestController
+@RequestMapping("/msm")
+@CrossOrigin
+public class MsmController {
+    @Autowired
+    private MsmService msmService;
+
+
+    @GetMapping ("/send/{phone}")
+    public R sendMsm(@PathVariable String phone){
+        //发送验证码
+        boolean isSuccess= msmService.sendCode(phone);
+
+        return isSuccess?R.ok(): R.error().data("status","发送验证码失败");
+
+    }
+
+}
Index: service/service_oss/src/main/java/com/atguigu/eduoss/controller/EduOSSController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_oss/src/main/java/com/atguigu/eduoss/controller/EduOSSController.java b/service/service_oss/src/main/java/com/atguigu/eduoss/controller/EduOSSController.java
new file mode 100644
--- /dev/null	(date 1609318661443)
+++ b/service/service_oss/src/main/java/com/atguigu/eduoss/controller/EduOSSController.java	(date 1609318661443)
@@ -0,0 +1,29 @@
+package com.atguigu.eduoss.controller;
+
+import com.aliyun.oss.OSS;
+import com.aliyun.oss.OSSClientBuilder;
+import com.atguigu.Result.R;
+import com.atguigu.eduoss.service.OSSService;
+import com.atguigu.eduoss.utils.ContantConfig;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.*;
+import org.springframework.web.multipart.MultipartFile;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.UUID;
+
+@RestController
+@RequestMapping("/eduoss/upload")
+@CrossOrigin
+public class EduOSSController {
+
+    @Autowired
+    private OSSService ossService;
+    @PostMapping
+    public R UploadAvatar(@RequestParam("file") MultipartFile multipartFile) throws IOException {
+       String url =  ossService.uploadFile(multipartFile);
+       return R.ok().data("url",url);
+
+    }
+}
Index: service/service_oss/src/main/java/com/atguigu/eduoss/service/OSSService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_oss/src/main/java/com/atguigu/eduoss/service/OSSService.java b/service/service_oss/src/main/java/com/atguigu/eduoss/service/OSSService.java
new file mode 100644
--- /dev/null	(date 1609248561968)
+++ b/service/service_oss/src/main/java/com/atguigu/eduoss/service/OSSService.java	(date 1609248561968)
@@ -0,0 +1,7 @@
+package com.atguigu.eduoss.service;
+
+import org.springframework.web.multipart.MultipartFile;
+
+public interface OSSService {
+    String uploadFile(MultipartFile multipartFile);
+}
Index: service/service_vod/src/main/java/com/atguigu/Vod/Service/VodService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_vod/src/main/java/com/atguigu/Vod/Service/VodService.java b/service/service_vod/src/main/java/com/atguigu/Vod/Service/VodService.java
new file mode 100644
--- /dev/null	(date 1610713115788)
+++ b/service/service_vod/src/main/java/com/atguigu/Vod/Service/VodService.java	(date 1610713115788)
@@ -0,0 +1,16 @@
+package com.atguigu.Vod.Service;
+
+import com.aliyuncs.exceptions.ClientException;
+import org.springframework.web.multipart.MultipartFile;
+
+import java.util.List;
+
+public interface VodService {
+    String uploadVod(MultipartFile file);
+
+    void delete(String id);
+
+    void deleteIds(List videoIdList);
+
+    String getPlayAuth(String id) throws ClientException;
+}
Index: service/service_vod/src/main/java/com/atguigu/Vod/Utils/ConstantUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_vod/src/main/java/com/atguigu/Vod/Utils/ConstantUtils.java b/service/service_vod/src/main/java/com/atguigu/Vod/Utils/ConstantUtils.java
new file mode 100644
--- /dev/null	(date 1609910569165)
+++ b/service/service_vod/src/main/java/com/atguigu/Vod/Utils/ConstantUtils.java	(date 1609910569165)
@@ -0,0 +1,22 @@
+package com.atguigu.Vod.Utils;
+
+import org.springframework.beans.factory.InitializingBean;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.stereotype.Component;
+
+@Component
+public class ConstantUtils implements InitializingBean {
+    @Value("${aliyun.vod.file.keyid}")
+    private  String ACCESS_ID;
+    @Value("${aliyun.vod.file.keysecret}")
+    private  String ACCESS_KEY;
+
+    public static String ID;
+
+    public static String Key;
+    @Override
+    public void afterPropertiesSet() throws Exception {
+        this.ID = this.ACCESS_ID;
+        this.Key = this.ACCESS_KEY;
+    }
+}
Index: service/service_vod/src/main/java/com/atguigu/Vod/Utils/InitAliyun.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_vod/src/main/java/com/atguigu/Vod/Utils/InitAliyun.java b/service/service_vod/src/main/java/com/atguigu/Vod/Utils/InitAliyun.java
new file mode 100644
--- /dev/null	(date 1609924221285)
+++ b/service/service_vod/src/main/java/com/atguigu/Vod/Utils/InitAliyun.java	(date 1609924221285)
@@ -0,0 +1,17 @@
+package com.atguigu.Vod.Utils;
+
+import com.aliyun.oss.ClientException;
+import com.aliyuncs.DefaultAcsClient;
+import com.aliyuncs.profile.DefaultProfile;
+import org.springframework.stereotype.Component;
+
+@Component
+public class InitAliyun {
+
+    public static DefaultAcsClient initVodClient(String accessKeyId, String accessKeySecret) throws ClientException {
+        String regionId = "cn-shanghai";  // 点播服务接入区域
+        DefaultProfile profile = DefaultProfile.getProfile(regionId, accessKeyId, accessKeySecret);
+        DefaultAcsClient client = new DefaultAcsClient(profile);
+        return client;
+    }
+}
Index: service/service_order/src/main/java/com/atguigu/order/cliet/courseClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/main/java/com/atguigu/order/cliet/courseClient.java b/service/service_order/src/main/java/com/atguigu/order/cliet/courseClient.java
new file mode 100644
--- /dev/null	(date 1610976890662)
+++ b/service/service_order/src/main/java/com/atguigu/order/cliet/courseClient.java	(date 1610976890662)
@@ -0,0 +1,14 @@
+package com.atguigu.order.cliet;
+
+import com.atguigu.Result.webVo.CoursePublishVoOrder;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+
+@FeignClient("service-edu")
+public interface courseClient {
+
+    //通过课程id获取课程详情接口
+    @GetMapping("/eduservice/coursefron/courseInfo/{id}")
+    public CoursePublishVoOrder getCourseInfoOrder(@PathVariable("id") String id);
+}
Index: service/service_order/src/main/java/com/atguigu/order/cliet/memberClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/main/java/com/atguigu/order/cliet/memberClient.java b/service/service_order/src/main/java/com/atguigu/order/cliet/memberClient.java
new file mode 100644
--- /dev/null	(date 1610976523470)
+++ b/service/service_order/src/main/java/com/atguigu/order/cliet/memberClient.java	(date 1610976523470)
@@ -0,0 +1,17 @@
+package com.atguigu.order.cliet;
+
+import com.atguigu.Result.webVo.Memberorder;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+
+import javax.servlet.http.HttpServletRequest;
+
+@FeignClient("service-ucenter")
+public interface memberClient {
+
+    //根据会员id获取会员信息
+    @GetMapping("/ucenter/member/userInfo/{id}")
+    public Memberorder userInfovo(@PathVariable("id")String id);
+
+}
Index: service/service_vod/src/main/java/com/atguigu/Vod/controller/VodUploadController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_vod/src/main/java/com/atguigu/Vod/controller/VodUploadController.java b/service/service_vod/src/main/java/com/atguigu/Vod/controller/VodUploadController.java
new file mode 100644
--- /dev/null	(date 1610713208048)
+++ b/service/service_vod/src/main/java/com/atguigu/Vod/controller/VodUploadController.java	(date 1610713208048)
@@ -0,0 +1,47 @@
+package com.atguigu.Vod.controller;
+
+import com.aliyuncs.exceptions.ClientException;
+import com.atguigu.Result.R;
+import com.atguigu.Vod.Service.VodService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.*;
+import org.springframework.web.multipart.MultipartFile;
+
+import java.util.List;
+
+@RestController
+@RequestMapping("/VodService")
+@CrossOrigin
+public class VodUploadController {
+
+    @Autowired
+    private VodService vodService;
+
+    @PostMapping("upload")
+    public R uploadVod(MultipartFile file) {
+        String VodId =  vodService.uploadVod(file);
+        return R.ok().data("VodId",VodId);
+
+    }
+
+    @DeleteMapping("deleteFile/{id}")
+    public R deleteFile(@PathVariable String id){
+        vodService.delete(id);
+        return R.ok();
+    }
+    //删除多个视频接口
+    @DeleteMapping("delete")
+    public R delete(@RequestParam("videoIdList") List<String> videoIdList){
+        vodService.deleteIds(videoIdList);
+        return R.ok();
+    }
+    //通过id获取播放凭证
+    @GetMapping("getPlayAuth/{id}")
+    public R getPlayAuth(@PathVariable String id) throws ClientException {
+
+        String playAuth = vodService.getPlayAuth(id);
+
+        return R.ok().data("playAuth",playAuth);
+
+    }
+}
Index: service/service_order/src/main/java/com/atguigu/order/entity/TOrder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/main/java/com/atguigu/order/entity/TOrder.java b/service/service_order/src/main/java/com/atguigu/order/entity/TOrder.java
new file mode 100644
--- /dev/null	(date 1610977412015)
+++ b/service/service_order/src/main/java/com/atguigu/order/entity/TOrder.java	(date 1610977412015)
@@ -0,0 +1,82 @@
+package com.atguigu.order.entity;
+
+import java.math.BigDecimal;
+
+import com.baomidou.mybatisplus.annotation.FieldFill;
+import com.baomidou.mybatisplus.annotation.IdType;
+import java.util.Date;
+
+import com.baomidou.mybatisplus.annotation.TableField;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
+
+/**
+ * <p>
+ * 订单
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-18
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@Accessors(chain = true)
+@ApiModel(value="TOrder对象", description="订单")
+public class TOrder implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @TableId(value = "id", type = IdType.ID_WORKER_STR)
+    private String id;
+
+    @ApiModelProperty(value = "订单号")
+    private String orderNo;
+
+    @ApiModelProperty(value = "课程id")
+    private String courseId;
+
+    @ApiModelProperty(value = "课程名称")
+    private String courseTitle;
+
+    @ApiModelProperty(value = "课程封面")
+    private String courseCover;
+
+    @ApiModelProperty(value = "讲师名称")
+    private String teacherName;
+
+    @ApiModelProperty(value = "会员id")
+    private String memberId;
+
+    @ApiModelProperty(value = "会员昵称")
+    private String nickname;
+
+    @ApiModelProperty(value = "会员手机")
+    private String mobile;
+
+    @ApiModelProperty(value = "订单金额（分）")
+    private BigDecimal totalFee;
+
+    @ApiModelProperty(value = "支付类型（1：微信 2：支付宝）")
+    private Integer payType;
+
+    @ApiModelProperty(value = "订单状态（0：未支付 1：已支付）")
+    private Integer status;
+
+    @ApiModelProperty(value = "逻辑删除 1（true）已删除， 0（false）未删除")
+    private Integer isDeleted;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField(fill = FieldFill.INSERT)
+    private Date gmtCreate;
+
+    @ApiModelProperty(value = "更新时间")
+    @TableField(fill =FieldFill.INSERT_UPDATE)
+    private Date gmtModified;
+
+
+}
Index: service/service_order/src/main/java/com/atguigu/order/entity/TPayLog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/main/java/com/atguigu/order/entity/TPayLog.java b/service/service_order/src/main/java/com/atguigu/order/entity/TPayLog.java
new file mode 100644
--- /dev/null	(date 1611038541005)
+++ b/service/service_order/src/main/java/com/atguigu/order/entity/TPayLog.java	(date 1611038541005)
@@ -0,0 +1,70 @@
+package com.atguigu.order.entity;
+
+import java.math.BigDecimal;
+
+import com.baomidou.mybatisplus.annotation.FieldFill;
+import com.baomidou.mybatisplus.annotation.IdType;
+import java.util.Date;
+
+import com.baomidou.mybatisplus.annotation.TableField;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
+
+/**
+ * <p>
+ * 支付日志表
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-18
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@Accessors(chain = true)
+@ApiModel(value="TPayLog对象", description="支付日志表")
+public class TPayLog implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @TableId(value = "id", type = IdType.ID_WORKER)
+    private String id;
+
+    @ApiModelProperty(value = "订单号")
+    private String orderNo;
+
+    @ApiModelProperty(value = "支付完成时间")
+    private Date payTime;
+
+    @ApiModelProperty(value = "支付金额（分）")
+    private BigDecimal totalFee;
+
+    @ApiModelProperty(value = "交易流水号")
+    private String transactionId;
+
+    @ApiModelProperty(value = "交易状态")
+    private String tradeState;
+
+    @ApiModelProperty(value = "支付类型（1：微信 2：支付宝）")
+    private Integer payType;
+
+    @ApiModelProperty(value = "其他属性")
+    private String attr;
+
+    @ApiModelProperty(value = "逻辑删除 1（true）已删除， 0（false）未删除")
+    private Integer isDeleted;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField(fill = FieldFill.INSERT)
+    private Date gmtCreate;
+
+    @ApiModelProperty(value = "更新时间")
+    @TableField(fill = FieldFill.INSERT_UPDATE)
+    private Date gmtModified;
+
+
+}
Index: service/service_order/src/main/java/com/atguigu/order/utils/OrderNoUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/main/java/com/atguigu/order/utils/OrderNoUtil.java b/service/service_order/src/main/java/com/atguigu/order/utils/OrderNoUtil.java
new file mode 100644
--- /dev/null	(date 1611042461543)
+++ b/service/service_order/src/main/java/com/atguigu/order/utils/OrderNoUtil.java	(date 1611042461543)
@@ -0,0 +1,32 @@
+package com.atguigu.order.utils;
+
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.Random;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+/**
+ * 订单号工具类
+ *
+ * @author qy
+ * @since 1.0
+ */
+public class OrderNoUtil {
+
+    /**
+     * 获取订单号
+     * @return
+     */
+    public static String getOrderNo() {
+        SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmmss");
+        String newDate = sdf.format(new Date());
+        String result = "";
+        Random random = new Random();
+        for (int i = 0; i < 3; i++) {
+            result += random.nextInt(10);
+        }
+        return newDate + result;
+    }
+
+}
Index: service/service_order/src/main/java/com/atguigu/order/utils/HttpClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/main/java/com/atguigu/order/utils/HttpClient.java b/service/service_order/src/main/java/com/atguigu/order/utils/HttpClient.java
new file mode 100644
--- /dev/null	(date 1611037437040)
+++ b/service/service_order/src/main/java/com/atguigu/order/utils/HttpClient.java	(date 1611037437040)
@@ -0,0 +1,169 @@
+package com.atguigu.order.utils;
+
+import org.apache.http.Consts;
+import org.apache.http.HttpEntity;
+import org.apache.http.NameValuePair;
+import org.apache.http.client.ClientProtocolException;
+import org.apache.http.client.entity.UrlEncodedFormEntity;
+import org.apache.http.client.methods.*;
+import org.apache.http.conn.ssl.SSLConnectionSocketFactory;
+import org.apache.http.conn.ssl.SSLContextBuilder;
+import org.apache.http.conn.ssl.TrustStrategy;
+import org.apache.http.entity.StringEntity;
+import org.apache.http.impl.client.CloseableHttpClient;
+import org.apache.http.impl.client.HttpClients;
+import org.apache.http.message.BasicNameValuePair;
+import org.apache.http.util.EntityUtils;
+
+import javax.net.ssl.SSLContext;
+import java.io.IOException;
+import java.security.cert.CertificateException;
+import java.security.cert.X509Certificate;
+import java.text.ParseException;
+import java.util.HashMap;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Map;
+
+/**
+ * http请求客户端
+ * 
+ * @author qy
+ * 
+ */
+public class HttpClient {
+	private String url;
+	private Map<String, String> param;
+	private int statusCode;
+	private String content;
+	private String xmlParam;
+	private boolean isHttps;
+
+	public boolean isHttps() {
+		return isHttps;
+	}
+
+	public void setHttps(boolean isHttps) {
+		this.isHttps = isHttps;
+	}
+
+	public String getXmlParam() {
+		return xmlParam;
+	}
+
+	public void setXmlParam(String xmlParam) {
+		this.xmlParam = xmlParam;
+	}
+
+	public HttpClient(String url, Map<String, String> param) {
+		this.url = url;
+		this.param = param;
+	}
+
+	public HttpClient(String url) {
+		this.url = url;
+	}
+
+	public void setParameter(Map<String, String> map) {
+		param = map;
+	}
+
+	public void addParameter(String key, String value) {
+		if (param == null)
+			param = new HashMap<String, String>();
+		param.put(key, value);
+	}
+
+	public void post() throws ClientProtocolException, IOException {
+		HttpPost http = new HttpPost(url);
+		setEntity(http);
+		execute(http);
+	}
+
+	public void put() throws ClientProtocolException, IOException {
+		HttpPut http = new HttpPut(url);
+		setEntity(http);
+		execute(http);
+	}
+
+	public void get() throws ClientProtocolException, IOException {
+		if (param != null) {
+			StringBuilder url = new StringBuilder(this.url);
+			boolean isFirst = true;
+			for (String key : param.keySet()) {
+				if (isFirst)
+					url.append("?");
+				else
+					url.append("&");
+				url.append(key).append("=").append(param.get(key));
+			}
+			this.url = url.toString();
+		}
+		HttpGet http = new HttpGet(url);
+		execute(http);
+	}
+
+	/**
+	 * set http post,put param
+	 */
+	private void setEntity(HttpEntityEnclosingRequestBase http) {
+		if (param != null) {
+			List<NameValuePair> nvps = new LinkedList<NameValuePair>();
+			for (String key : param.keySet())
+				nvps.add(new BasicNameValuePair(key, param.get(key))); // 参数
+			http.setEntity(new UrlEncodedFormEntity(nvps, Consts.UTF_8)); // 设置参数
+		}
+		if (xmlParam != null) {
+			http.setEntity(new StringEntity(xmlParam, Consts.UTF_8));
+		}
+	}
+
+	private void execute(HttpUriRequest http) throws ClientProtocolException,
+			IOException {
+		CloseableHttpClient httpClient = null;
+		try {
+			if (isHttps) {
+				SSLContext sslContext = new SSLContextBuilder()
+						.loadTrustMaterial(null, new TrustStrategy() {
+							// 信任所有
+							public boolean isTrusted(X509Certificate[] chain,
+									String authType)
+									throws CertificateException {
+								return true;
+							}
+						}).build();
+				SSLConnectionSocketFactory sslsf = new SSLConnectionSocketFactory(
+						sslContext);
+				httpClient = HttpClients.custom().setSSLSocketFactory(sslsf)
+						.build();
+			} else {
+				httpClient = HttpClients.createDefault();
+			}
+			CloseableHttpResponse response = httpClient.execute(http);
+			try {
+				if (response != null) {
+					if (response.getStatusLine() != null)
+						statusCode = response.getStatusLine().getStatusCode();
+					HttpEntity entity = response.getEntity();
+					// 响应内容
+					content = EntityUtils.toString(entity, Consts.UTF_8);
+				}
+			} finally {
+				response.close();
+			}
+		} catch (Exception e) {
+			e.printStackTrace();
+		} finally {
+			httpClient.close();
+		}
+	}
+
+	public int getStatusCode() {
+		return statusCode;
+	}
+
+	public String getContent() throws ParseException, IOException {
+		return content;
+	}
+
+}
Index: service/service_order/src/main/java/com/atguigu/order/mapper/TPayLogMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/main/java/com/atguigu/order/mapper/TPayLogMapper.java b/service/service_order/src/main/java/com/atguigu/order/mapper/TPayLogMapper.java
new file mode 100644
--- /dev/null	(date 1610971251724)
+++ b/service/service_order/src/main/java/com/atguigu/order/mapper/TPayLogMapper.java	(date 1610971251724)
@@ -0,0 +1,16 @@
+package com.atguigu.order.mapper;
+
+import com.atguigu.order.entity.TPayLog;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 支付日志表 Mapper 接口
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-18
+ */
+public interface TPayLogMapper extends BaseMapper<TPayLog> {
+
+}
Index: service/service_order/src/main/java/com/atguigu/order/mapper/TOrderMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/main/java/com/atguigu/order/mapper/TOrderMapper.java b/service/service_order/src/main/java/com/atguigu/order/mapper/TOrderMapper.java
new file mode 100644
--- /dev/null	(date 1610971251709)
+++ b/service/service_order/src/main/java/com/atguigu/order/mapper/TOrderMapper.java	(date 1610971251709)
@@ -0,0 +1,16 @@
+package com.atguigu.order.mapper;
+
+import com.atguigu.order.entity.TOrder;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 订单 Mapper 接口
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-18
+ */
+public interface TOrderMapper extends BaseMapper<TOrder> {
+
+}
Index: service/service_order/src/main/java/com/atguigu/order/controller/TOrderController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/main/java/com/atguigu/order/controller/TOrderController.java b/service/service_order/src/main/java/com/atguigu/order/controller/TOrderController.java
new file mode 100644
--- /dev/null	(date 1611047976927)
+++ b/service/service_order/src/main/java/com/atguigu/order/controller/TOrderController.java	(date 1611047976927)
@@ -0,0 +1,63 @@
+package com.atguigu.order.controller;
+
+
+import com.atguigu.Result.R;
+import com.atguigu.order.entity.TOrder;
+import com.atguigu.order.service.TOrderService;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.*;
+
+import javax.servlet.http.HttpServletRequest;
+
+/**
+ * <p>
+ * 订单 前端控制器
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-18
+ */
+@RestController
+@RequestMapping("/order/order")
+@CrossOrigin
+public class TOrderController {
+
+    @Autowired
+    private TOrderService orderService;
+
+
+    //通过课程id创建订单号
+    @GetMapping("orderNo/{id}")
+    public R createOrder(@PathVariable String id, HttpServletRequest request){
+        String orderNo =  orderService.createrOrderNo(id,request);
+
+
+        return R.ok().data("orderNo",orderNo);
+    }
+
+
+    //通过订单号查询课程信息
+
+    @GetMapping("courseInfo/{id}")
+    public R getOrder(@PathVariable String id){
+        //通过订单号查询课程信息
+        TOrder serviceById = orderService.getByCourseId(id);
+
+        return R.ok().data("courseInfo",serviceById);
+    }
+
+    //通过用户id和课程id查询用户是否购买了课程
+    @GetMapping("getCoursePayStatus/{courseId}/{memeberId}")
+    public boolean geCourseInfo(@PathVariable String courseId,
+                          @PathVariable String memeberId){
+        QueryWrapper<TOrder> queryWrapper = new QueryWrapper<>();
+        queryWrapper.eq("course_id",courseId);
+        queryWrapper.eq("member_id",memeberId);
+        queryWrapper.eq("status",1);
+        int count = orderService.count(queryWrapper);
+        return count>0;
+    }
+
+}
+
Index: service/service_order/src/main/java/com/atguigu/order/controller/TPayLogController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/main/java/com/atguigu/order/controller/TPayLogController.java b/service/service_order/src/main/java/com/atguigu/order/controller/TPayLogController.java
new file mode 100644
--- /dev/null	(date 1611046940639)
+++ b/service/service_order/src/main/java/com/atguigu/order/controller/TPayLogController.java	(date 1611046940639)
@@ -0,0 +1,53 @@
+package com.atguigu.order.controller;
+
+
+import com.atguigu.Result.R;
+import com.atguigu.order.service.TPayLogService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.*;
+
+import java.util.Map;
+
+/**
+ * <p>
+ * 支付日志表 前端控制器
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-18
+ */
+@RestController
+@RequestMapping("/order/payLog")
+@CrossOrigin
+public class TPayLogController {
+    @Autowired
+    private TPayLogService tPayLogService ;
+
+    //根据订单号生成二维码
+    @GetMapping("createPay/{id}")
+    public R createPay(@PathVariable String id){
+        Map map =  tPayLogService.createPay(id);
+        return R.ok().data(map);
+    }
+
+    //根据订单号查询支付状态
+    @GetMapping("getPayLog/{id}")
+    public R getPayLog(@PathVariable String id){
+        Map map =  tPayLogService.getPayLog(id);
+        //如果查询的集合没内容则表示支付出错
+        System.out.println("=======map++++"+map);
+        //如果返回的map集合中 返回支付成功，则调用接口对订单表中插入数据，还有修改订单状态
+        if(map==null){
+            return null;
+        }
+        if (map.get("trade_state").equals("SUCCESS")){
+            tPayLogService.updatePayLog(map);
+            return R.ok().message("支付成功");
+        }
+
+
+        return R.ok().code(25000).message("支付中");
+    }
+
+}
+
Index: service/service_order/src/main/java/com/atguigu/order/service/TOrderService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/main/java/com/atguigu/order/service/TOrderService.java b/service/service_order/src/main/java/com/atguigu/order/service/TOrderService.java
new file mode 100644
--- /dev/null	(date 1610977573959)
+++ b/service/service_order/src/main/java/com/atguigu/order/service/TOrderService.java	(date 1610977573959)
@@ -0,0 +1,21 @@
+package com.atguigu.order.service;
+
+import com.atguigu.order.entity.TOrder;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+import javax.servlet.http.HttpServletRequest;
+
+/**
+ * <p>
+ * 订单 服务类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-18
+ */
+public interface TOrderService extends IService<TOrder> {
+
+    String createrOrderNo(String id, HttpServletRequest request);
+
+    TOrder getByCourseId(String id);
+}
Index: service/service_order/src/main/java/com/atguigu/order/service/TPayLogService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/src/main/java/com/atguigu/order/service/TPayLogService.java b/service/service_order/src/main/java/com/atguigu/order/service/TPayLogService.java
new file mode 100644
--- /dev/null	(date 1611038425779)
+++ b/service/service_order/src/main/java/com/atguigu/order/service/TPayLogService.java	(date 1611038425779)
@@ -0,0 +1,23 @@
+package com.atguigu.order.service;
+
+import com.atguigu.order.entity.TPayLog;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+import java.util.Map;
+
+/**
+ * <p>
+ * 支付日志表 服务类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-18
+ */
+public interface TPayLogService extends IService<TPayLog> {
+
+    Map createPay(String id);
+
+    Map getPayLog(String id);
+
+    void updatePayLog(Map id);
+}
Index: service/service_order/target/classes/com/atguigu/order/mapper/xml/TPayLogMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/target/classes/com/atguigu/order/mapper/xml/TPayLogMapper.xml b/service/service_order/target/classes/com/atguigu/order/mapper/xml/TPayLogMapper.xml
new file mode 100644
--- /dev/null	(date 1611039139183)
+++ b/service/service_order/target/classes/com/atguigu/order/mapper/xml/TPayLogMapper.xml	(date 1611039139183)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.order.mapper.TPayLogMapper">
+
+</mapper>
Index: service/service_order/target/classes/com/atguigu/order/mapper/xml/TOrderMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_order/target/classes/com/atguigu/order/mapper/xml/TOrderMapper.xml b/service/service_order/target/classes/com/atguigu/order/mapper/xml/TOrderMapper.xml
new file mode 100644
--- /dev/null	(date 1611039139184)
+++ b/service/service_order/target/classes/com/atguigu/order/mapper/xml/TOrderMapper.xml	(date 1611039139184)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.order.mapper.TOrderMapper">
+
+</mapper>
Index: service/service_ucenter/src/main/java/com/atguigu/ucenter/entity/Member.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_ucenter/src/main/java/com/atguigu/ucenter/entity/Member.java b/service/service_ucenter/src/main/java/com/atguigu/ucenter/entity/Member.java
new file mode 100644
--- /dev/null	(date 1610462051800)
+++ b/service/service_ucenter/src/main/java/com/atguigu/ucenter/entity/Member.java	(date 1610462051800)
@@ -0,0 +1,73 @@
+package com.atguigu.ucenter.entity;
+
+import com.baomidou.mybatisplus.annotation.*;
+
+import java.util.Date;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
+
+/**
+ * <p>
+ * 会员表
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-12
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@Accessors(chain = true)
+@TableName("ucenter_member")
+@ApiModel(value="Member对象", description="会员表")
+public class Member implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @ApiModelProperty(value = "会员id")
+    @TableId(value = "id", type = IdType.ID_WORKER_STR)
+    private String id;
+
+    @ApiModelProperty(value = "微信openid")
+    private String openid;
+
+    @ApiModelProperty(value = "手机号")
+    private String mobile;
+
+    @ApiModelProperty(value = "密码")
+    private String password;
+
+    @ApiModelProperty(value = "昵称")
+    private String nickname;
+
+    @ApiModelProperty(value = "性别 1 女，2 男")
+    private Integer sex;
+
+    @ApiModelProperty(value = "年龄")
+    private Integer age;
+
+    @ApiModelProperty(value = "用户头像")
+    private String avatar;
+
+    @ApiModelProperty(value = "用户签名")
+    private String sign;
+
+    @ApiModelProperty(value = "是否禁用 1（true）已禁用，  0（false）未禁用")
+    private Boolean isDisabled;
+
+    @ApiModelProperty(value = "逻辑删除 1（true）已删除， 0（false）未删除")
+    private Boolean isDeleted;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField(fill = FieldFill.INSERT)
+    private Date gmtCreate;
+
+    @ApiModelProperty(value = "更新时间")
+    @TableField(fill = FieldFill.INSERT_UPDATE)
+    private Date gmtModified;
+
+
+}
Index: service/service_ucenter/src/main/java/com/atguigu/ucenter/Utils/ConstantUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_ucenter/src/main/java/com/atguigu/ucenter/Utils/ConstantUtil.java b/service/service_ucenter/src/main/java/com/atguigu/ucenter/Utils/ConstantUtil.java
new file mode 100644
--- /dev/null	(date 1610520453852)
+++ b/service/service_ucenter/src/main/java/com/atguigu/ucenter/Utils/ConstantUtil.java	(date 1610520453852)
@@ -0,0 +1,30 @@
+package com.atguigu.ucenter.Utils;
+
+import org.springframework.beans.factory.InitializingBean;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.context.annotation.ComponentScan;
+import org.springframework.stereotype.Component;
+
+@Component
+public class ConstantUtil implements InitializingBean {
+
+
+    @Value("${wx.open.app_id}")
+    private   String appId;
+    @Value("${wx.open.app_secret}")
+    private   String appSecret;
+    @Value("${wx.open.redirect_url}")
+    private   String redirectUrl;
+
+    public static String APPID;
+    public static String AppSecret;
+    public static String RedirectUrl;
+
+
+    @Override
+    public void afterPropertiesSet() throws Exception {
+        APPID = this.appId;
+        AppSecret = this.appSecret;
+        RedirectUrl = this.redirectUrl;
+    }
+}
Index: service/service_ucenter/src/main/java/com/atguigu/ucenter/Utils/HttpClientUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_ucenter/src/main/java/com/atguigu/ucenter/Utils/HttpClientUtils.java b/service/service_ucenter/src/main/java/com/atguigu/ucenter/Utils/HttpClientUtils.java
new file mode 100644
--- /dev/null	(date 1610522565919)
+++ b/service/service_ucenter/src/main/java/com/atguigu/ucenter/Utils/HttpClientUtils.java	(date 1610522565919)
@@ -0,0 +1,344 @@
+package com.atguigu.ucenter.Utils;
+
+import org.apache.commons.io.IOUtils;
+import org.apache.commons.lang.StringUtils;
+import org.apache.http.Consts;
+import org.apache.http.HttpEntity;
+import org.apache.http.HttpResponse;
+import org.apache.http.NameValuePair;
+import org.apache.http.client.HttpClient;
+import org.apache.http.client.config.RequestConfig;
+import org.apache.http.client.config.RequestConfig.Builder;
+import org.apache.http.client.entity.UrlEncodedFormEntity;
+import org.apache.http.client.methods.HttpGet;
+import org.apache.http.client.methods.HttpPost;
+import org.apache.http.conn.ConnectTimeoutException;
+import org.apache.http.conn.ssl.SSLConnectionSocketFactory;
+import org.apache.http.conn.ssl.SSLContextBuilder;
+import org.apache.http.conn.ssl.TrustStrategy;
+import org.apache.http.conn.ssl.X509HostnameVerifier;
+import org.apache.http.entity.ContentType;
+import org.apache.http.entity.StringEntity;
+import org.apache.http.impl.client.CloseableHttpClient;
+import org.apache.http.impl.client.HttpClients;
+import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;
+import org.apache.http.message.BasicNameValuePair;
+
+import javax.net.ssl.SSLContext;
+import javax.net.ssl.SSLException;
+import javax.net.ssl.SSLSession;
+import javax.net.ssl.SSLSocket;
+import java.io.IOException;
+import java.net.SocketTimeoutException;
+import java.security.GeneralSecurityException;
+import java.security.cert.CertificateException;
+import java.security.cert.X509Certificate;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Map;
+import java.util.Map.Entry;
+import java.util.Set;
+
+/**
+ *  依赖的jar包有：commons-lang-2.6.jar、httpclient-4.3.2.jar、httpcore-4.3.1.jar、commons-io-2.4.jar
+ * @author zhaoyb
+ *
+ */
+public class HttpClientUtils {
+
+	public static final int connTimeout=10000;
+	public static final int readTimeout=10000;
+	public static final String charset="UTF-8";
+	private static HttpClient client = null;
+
+	static {
+		PoolingHttpClientConnectionManager cm = new PoolingHttpClientConnectionManager();
+		cm.setMaxTotal(128);
+		cm.setDefaultMaxPerRoute(128);
+		client = HttpClients.custom().setConnectionManager(cm).build();
+	}
+
+	public static String postParameters(String url, String parameterStr) throws ConnectTimeoutException, SocketTimeoutException, Exception{
+		return post(url,parameterStr,"application/x-www-form-urlencoded",charset,connTimeout,readTimeout);
+	}
+
+	public static String postParameters(String url, String parameterStr,String charset, Integer connTimeout, Integer readTimeout) throws ConnectTimeoutException, SocketTimeoutException, Exception{
+		return post(url,parameterStr,"application/x-www-form-urlencoded",charset,connTimeout,readTimeout);
+	}
+
+	public static String postParameters(String url, Map<String, String> params) throws ConnectTimeoutException,
+			SocketTimeoutException, Exception {
+		return postForm(url, params, null, connTimeout, readTimeout);
+	}
+
+	public static String postParameters(String url, Map<String, String> params, Integer connTimeout,Integer readTimeout) throws ConnectTimeoutException,
+			SocketTimeoutException, Exception {
+		return postForm(url, params, null, connTimeout, readTimeout);
+	}
+
+	public static String get(String url) throws Exception {
+		return get(url, charset, null, null);
+	}
+
+	public static String get(String url, String charset) throws Exception {
+		return get(url, charset, connTimeout, readTimeout);
+	}
+
+	/**
+	 * 发送一个 Post 请求, 使用指定的字符集编码.
+	 *
+	 * @param url
+	 * @param body RequestBody
+	 * @param mimeType 例如 application/xml "application/x-www-form-urlencoded" a=1&b=2&c=3
+	 * @param charset 编码
+	 * @param connTimeout 建立链接超时时间,毫秒.
+	 * @param readTimeout 响应超时时间,毫秒.
+	 * @return ResponseBody, 使用指定的字符集编码.
+	 * @throws ConnectTimeoutException 建立链接超时异常
+	 * @throws SocketTimeoutException  响应超时
+	 * @throws Exception
+	 */
+	public static String post(String url, String body, String mimeType,String charset, Integer connTimeout, Integer readTimeout)
+			throws ConnectTimeoutException, SocketTimeoutException, Exception {
+		HttpClient client = null;
+		HttpPost post = new HttpPost(url);
+		String result = "";
+		try {
+			if (StringUtils.isNotBlank(body)) {
+				HttpEntity entity = new StringEntity(body, ContentType.create(mimeType, charset));
+				post.setEntity(entity);
+			}
+			// 设置参数
+			Builder customReqConf = RequestConfig.custom();
+			if (connTimeout != null) {
+				customReqConf.setConnectTimeout(connTimeout);
+			}
+			if (readTimeout != null) {
+				customReqConf.setSocketTimeout(readTimeout);
+			}
+			post.setConfig(customReqConf.build());
+
+			HttpResponse res;
+			if (url.startsWith("https")) {
+				// 执行 Https 请求.
+				client = createSSLInsecureClient();
+				res = client.execute(post);
+			} else {
+				// 执行 Http 请求.
+				client = HttpClientUtils.client;
+				res = client.execute(post);
+			}
+			result = IOUtils.toString(res.getEntity().getContent(), charset);
+		} finally {
+			post.releaseConnection();
+			if (url.startsWith("https") && client != null&& client instanceof CloseableHttpClient) {
+				((CloseableHttpClient) client).close();
+			}
+		}
+		return result;
+	}
+
+
+	/**
+	 * 提交form表单
+	 *
+	 * @param url
+	 * @param params
+	 * @param connTimeout
+	 * @param readTimeout
+	 * @return
+	 * @throws ConnectTimeoutException
+	 * @throws SocketTimeoutException
+	 * @throws Exception
+	 */
+	public static String postForm(String url, Map<String, String> params, Map<String, String> headers, Integer connTimeout,Integer readTimeout) throws ConnectTimeoutException,
+			SocketTimeoutException, Exception {
+
+		HttpClient client = null;
+		HttpPost post = new HttpPost(url);
+		try {
+			if (params != null && !params.isEmpty()) {
+				List<NameValuePair> formParams = new ArrayList<NameValuePair>();
+				Set<Entry<String, String>> entrySet = params.entrySet();
+				for (Entry<String, String> entry : entrySet) {
+					formParams.add(new BasicNameValuePair(entry.getKey(), entry.getValue()));
+				}
+				UrlEncodedFormEntity entity = new UrlEncodedFormEntity(formParams, Consts.UTF_8);
+				post.setEntity(entity);
+			}
+
+			if (headers != null && !headers.isEmpty()) {
+				for (Entry<String, String> entry : headers.entrySet()) {
+					post.addHeader(entry.getKey(), entry.getValue());
+				}
+			}
+			// 设置参数
+			Builder customReqConf = RequestConfig.custom();
+			if (connTimeout != null) {
+				customReqConf.setConnectTimeout(connTimeout);
+			}
+			if (readTimeout != null) {
+				customReqConf.setSocketTimeout(readTimeout);
+			}
+			post.setConfig(customReqConf.build());
+			HttpResponse res = null;
+			if (url.startsWith("https")) {
+				// 执行 Https 请求.
+				client = createSSLInsecureClient();
+				res = client.execute(post);
+			} else {
+				// 执行 Http 请求.
+				client = HttpClientUtils.client;
+				res = client.execute(post);
+			}
+			return IOUtils.toString(res.getEntity().getContent(), "UTF-8");
+		} finally {
+			post.releaseConnection();
+			if (url.startsWith("https") && client != null
+					&& client instanceof CloseableHttpClient) {
+				((CloseableHttpClient) client).close();
+			}
+		}
+	}
+
+
+
+
+	/**
+	 * 发送一个 GET 请求
+	 *
+	 * @param url
+	 * @param charset
+	 * @param connTimeout  建立链接超时时间,毫秒.
+	 * @param readTimeout  响应超时时间,毫秒.
+	 * @return
+	 * @throws ConnectTimeoutException   建立链接超时
+	 * @throws SocketTimeoutException   响应超时
+	 * @throws Exception
+	 */
+	public static String get(String url, String charset, Integer connTimeout,Integer readTimeout)
+			throws ConnectTimeoutException,SocketTimeoutException, Exception {
+
+		HttpClient client = null;
+		HttpGet get = new HttpGet(url);
+		String result = "";
+		try {
+			// 设置参数
+			Builder customReqConf = RequestConfig.custom();
+			if (connTimeout != null) {
+				customReqConf.setConnectTimeout(connTimeout);
+			}
+			if (readTimeout != null) {
+				customReqConf.setSocketTimeout(readTimeout);
+			}
+			get.setConfig(customReqConf.build());
+
+			HttpResponse res = null;
+
+			if (url.startsWith("https")) {
+				// 执行 Https 请求.
+				client = createSSLInsecureClient();
+				res = client.execute(get);
+			} else {
+				// 执行 Http 请求.
+				client = HttpClientUtils.client;
+				res = client.execute(get);
+			}
+
+			result = IOUtils.toString(res.getEntity().getContent(), charset);
+		} finally {
+			get.releaseConnection();
+			if (url.startsWith("https") && client != null && client instanceof CloseableHttpClient) {
+				((CloseableHttpClient) client).close();
+			}
+		}
+		return result;
+	}
+
+
+	/**
+	 * 从 response 里获取 charset
+	 *
+	 * @param ressponse
+	 * @return
+	 */
+	@SuppressWarnings("unused")
+	private static String getCharsetFromResponse(HttpResponse ressponse) {
+		// Content-Type:text/html; charset=GBK
+		if (ressponse.getEntity() != null  && ressponse.getEntity().getContentType() != null && ressponse.getEntity().getContentType().getValue() != null) {
+			String contentType = ressponse.getEntity().getContentType().getValue();
+			if (contentType.contains("charset=")) {
+				return contentType.substring(contentType.indexOf("charset=") + 8);
+			}
+		}
+		return null;
+	}
+
+
+
+	/**
+	 * 创建 SSL连接
+	 * @return
+	 * @throws GeneralSecurityException
+	 */
+	private static CloseableHttpClient createSSLInsecureClient() throws GeneralSecurityException {
+		try {
+			SSLContext sslContext = new SSLContextBuilder().loadTrustMaterial(null, new TrustStrategy() {
+				public boolean isTrusted(X509Certificate[] chain,String authType) throws CertificateException {
+					return true;
+				}
+			}).build();
+
+			SSLConnectionSocketFactory sslsf = new SSLConnectionSocketFactory(sslContext, new X509HostnameVerifier() {
+
+				@Override
+				public boolean verify(String arg0, SSLSession arg1) {
+					return true;
+				}
+
+				@Override
+				public void verify(String host, SSLSocket ssl)
+						throws IOException {
+				}
+
+				@Override
+				public void verify(String host, X509Certificate cert)
+						throws SSLException {
+				}
+
+				@Override
+				public void verify(String host, String[] cns,
+								   String[] subjectAlts) throws SSLException {
+				}
+
+			});
+
+			return HttpClients.custom().setSSLSocketFactory(sslsf).build();
+
+		} catch (GeneralSecurityException e) {
+			throw e;
+		}
+	}
+
+	public static void main(String[] args) {
+		try {
+			String str= post("https://localhost:443/ssl/test.shtml","name=12&page=34","application/x-www-form-urlencoded", "UTF-8", 10000, 10000);
+			//String str= get("https://localhost:443/ssl/test.shtml?name=12&page=34","GBK");
+            /*Map<String,String> map = new HashMap<String,String>();
+            map.put("name", "111");
+            map.put("page", "222");
+            String str= postForm("https://localhost:443/ssl/test.shtml",map,null, 10000, 10000);*/
+			System.out.println(str);
+		} catch (ConnectTimeoutException e) {
+			// TODO Auto-generated catch block
+			e.printStackTrace();
+		} catch (SocketTimeoutException e) {
+			// TODO Auto-generated catch block
+			e.printStackTrace();
+		} catch (Exception e) {
+			// TODO Auto-generated catch block
+			e.printStackTrace();
+		}
+	}
+
+}
\ No newline at end of file
Index: service/service_ucenter/src/main/java/com/atguigu/ucenter/service/MemberService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_ucenter/src/main/java/com/atguigu/ucenter/service/MemberService.java b/service/service_ucenter/src/main/java/com/atguigu/ucenter/service/MemberService.java
new file mode 100644
--- /dev/null	(date 1611050299375)
+++ b/service/service_ucenter/src/main/java/com/atguigu/ucenter/service/MemberService.java	(date 1611050299375)
@@ -0,0 +1,24 @@
+package com.atguigu.ucenter.service;
+
+import com.atguigu.ucenter.entity.Member;
+import com.atguigu.ucenter.entity.VO.RegisterVO;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * 会员表 服务类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-12
+ */
+public interface MemberService extends IService<Member> {
+
+    void register(RegisterVO registerVO);
+
+    String login(Member member);
+
+    Member getUserByOpenid(String openid);
+
+    Integer getStaInfo(String day);
+}
Index: service/service_ucenter/src/main/java/com/atguigu/ucenter/mapper/MemberMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_ucenter/src/main/java/com/atguigu/ucenter/mapper/MemberMapper.java b/service/service_ucenter/src/main/java/com/atguigu/ucenter/mapper/MemberMapper.java
new file mode 100644
--- /dev/null	(date 1611050299370)
+++ b/service/service_ucenter/src/main/java/com/atguigu/ucenter/mapper/MemberMapper.java	(date 1611050299370)
@@ -0,0 +1,17 @@
+package com.atguigu.ucenter.mapper;
+
+import com.atguigu.ucenter.entity.Member;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 会员表 Mapper 接口
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-12
+ */
+public interface MemberMapper extends BaseMapper<Member> {
+
+    Integer geStaInfo(String day);
+}
Index: service/service_acl/target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_acl/target/classes/application.properties b/service/service_acl/target/classes/application.properties
new file mode 100644
--- /dev/null	(date 1611318593860)
+++ b/service/service_acl/target/classes/application.properties	(date 1611318593860)
@@ -0,0 +1,35 @@
+# ����˿�
+server.port=8009
+# ������
+spring.application.name=service-acl
+
+# mysql���ݿ�����
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+spring.datasource.url=jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8
+spring.datasource.username=root
+spring.datasource.password=Jinx1214
+
+#����json��ȫ��ʱ���ʽ
+spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
+spring.jackson.time-zone=GMT+8
+
+spring.redis.host=localhost
+spring.redis.port=6379
+spring.redis.database= 0
+spring.redis.timeout=1800000
+
+spring.redis.lettuce.pool.max-active=20
+spring.redis.lettuce.pool.max-wait=-1
+#��������ȴ�ʱ��(������ʾû����)
+spring.redis.lettuce.pool.max-idle=5
+spring.redis.lettuce.pool.min-idle=0
+#��С����
+
+#����mapper xml�ļ���·��
+mybatis-plus.mapper-locations=classpath:com/atguigu/acl/mapper/xml/*.xml
+
+# nacos�����ַ
+spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
+
+#mybatis��־
+mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
\ No newline at end of file
Index: service/service_ucenter/target/classes/com/atguigu/ucenter/mapper/xml/MemberMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_ucenter/target/classes/com/atguigu/ucenter/mapper/xml/MemberMapper.xml b/service/service_ucenter/target/classes/com/atguigu/ucenter/mapper/xml/MemberMapper.xml
new file mode 100644
--- /dev/null	(date 1611051297098)
+++ b/service/service_ucenter/target/classes/com/atguigu/ucenter/mapper/xml/MemberMapper.xml	(date 1611051297098)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.atguigu.ucenter.mapper.MemberMapper">
+    <select id="geStaInfo" resultType="int">
+        SELECT COUNT(*) FROM ucenter_member um WHERE DATE(um.gmt_create) = #{day}
+    </select>
+
+</mapper>
Index: service/service_ucenter/src/main/java/com/atguigu/ucenter/controller/OAuth2Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_ucenter/src/main/java/com/atguigu/ucenter/controller/OAuth2Controller.java b/service/service_ucenter/src/main/java/com/atguigu/ucenter/controller/OAuth2Controller.java
new file mode 100644
--- /dev/null	(date 1610541256615)
+++ b/service/service_ucenter/src/main/java/com/atguigu/ucenter/controller/OAuth2Controller.java	(date 1610541256615)
@@ -0,0 +1,106 @@
+package com.atguigu.ucenter.controller;
+
+import com.atguigu.Result.JwtUtils;
+import com.atguigu.ucenter.Utils.ConstantUtil;
+import com.atguigu.ucenter.Utils.HttpClientUtils;
+import com.atguigu.ucenter.entity.Member;
+import com.atguigu.ucenter.service.MemberService;
+import com.google.gson.Gson;
+import org.aspectj.weaver.ast.Var;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.CrossOrigin;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+
+import java.io.UnsupportedEncodingException;
+import java.net.URLEncoder;
+import java.util.HashMap;
+
+@Controller
+@RequestMapping("/api/ucenter/wx")
+@CrossOrigin
+public class OAuth2Controller {
+    @Autowired
+    private MemberService memberService;
+
+    @GetMapping("/callback")
+    public String callback(String code,String state){
+        //根据code去获取openid个assess_token
+        System.out.println(code);
+
+        String baseAccessTokenUrl = "https://api.weixin.qq.com/sns/oauth2/access_token" +
+                "?appid=%s" +
+                "&secret=%s" +
+                "&code=%s" +
+                "&grant_type=authorization_code";
+
+       String token =  String.format(
+                baseAccessTokenUrl,
+                ConstantUtil.APPID,
+                ConstantUtil.AppSecret,
+                code
+        );
+       //通过token获取信息
+        try {
+            String result = HttpClientUtils.get(token);
+            //将获取到的信息进行格式转换
+            Gson gson = new Gson();
+            HashMap hashMap = gson.fromJson(result, HashMap.class);
+            String access_token = (String) hashMap.get("access_token");
+            String openid = (String) hashMap.get("openid");
+            //判断数据库中 该用户id是否登陆过
+          Member member =  memberService.getUserByOpenid(openid);
+          if(member==null){
+              //请求微信资源服务器，通过openid 获取用户信息
+              //将用户信息添加到数据库中
+              member = new Member();
+              String baseUserInfoUrl = "https://api.weixin.qq.com/sns/userinfo" +
+              "?access_token=%s" +
+              "&openid=%s";
+              String userInfoUrl = String.format(baseUserInfoUrl, access_token, openid);
+              String UserInfo = HttpClientUtils.get(userInfoUrl);
+              //解析返回的字符串
+              HashMap MemberInfo = gson.fromJson(UserInfo, HashMap.class);
+
+              member.setNickname((String) MemberInfo.get("nickname"));
+              member.setAvatar((String) MemberInfo.get("headimgurl"));
+              member.setOpenid(openid);
+              memberService.save(member);
+          }
+            //将用户信息用jwt加密返回给前端浏览器地址
+            String jwtToken = JwtUtils.getJwtToken(member.getId(), member.getNickname());
+            return "redirect:http://localhost:3000?token="+jwtToken;
+        } catch (Exception e) {
+            e.printStackTrace();
+            throw new RuntimeException();
+        }
+
+
+
+    }
+
+    @GetMapping("/login")
+    public String login() throws UnsupportedEncodingException {
+        // 微信开放平台授权baseUrl
+
+        String baseUrl = "https://open.weixin.qq.com/connect/qrconnect" +
+        "?appid=%s" +
+        "&redirect_uri=%s" +
+        "&response_type=code" +
+        "&scope=snsapi_login" +
+        "&state=%s" +
+        "#wechat_redirect";
+        String redirectUrl = URLEncoder.encode(ConstantUtil.RedirectUrl,"UTF-8");
+
+        String rUrl =  String.format(
+                baseUrl,
+                ConstantUtil.APPID,
+                redirectUrl,
+                "atguigu"
+        );
+        return "redirect:"+rUrl;
+    }
+}
Index: service/service_ucenter/src/main/java/com/atguigu/ucenter/controller/MemberController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_ucenter/src/main/java/com/atguigu/ucenter/controller/MemberController.java b/service/service_ucenter/src/main/java/com/atguigu/ucenter/controller/MemberController.java
new file mode 100644
--- /dev/null	(date 1611050299367)
+++ b/service/service_ucenter/src/main/java/com/atguigu/ucenter/controller/MemberController.java	(date 1611050299367)
@@ -0,0 +1,74 @@
+package com.atguigu.ucenter.controller;
+
+
+import com.atguigu.Result.JwtUtils;
+import com.atguigu.Result.R;
+import com.atguigu.Result.webVo.Memberorder;
+import com.atguigu.ucenter.entity.Member;
+import com.atguigu.ucenter.entity.VO.RegisterVO;
+import com.atguigu.ucenter.service.MemberService;
+import com.netflix.client.http.HttpRequest;
+import org.springframework.beans.BeanUtils;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.*;
+
+import javax.servlet.http.HttpServletRequest;
+
+/**
+ * <p>
+ * 会员表 前端控制器
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-12
+ */
+@RestController
+@RequestMapping("/ucenter/member")
+@CrossOrigin
+public class MemberController {
+
+
+    @Autowired
+    private MemberService memberService;
+    //注册接口
+    @PostMapping("/register")
+    public R register(@RequestBody RegisterVO registerVO){
+        memberService.register(registerVO);
+        return R.ok();
+    }
+
+
+    //登陆页面
+    @PostMapping    ("/login")
+    public R login(@RequestBody Member member){
+        String token =  memberService.login(member);
+        return R.ok().data("token",token);
+    }
+    //根据token获取用户参数
+    @GetMapping("/userInfo")
+    public R userInfo(HttpServletRequest request){
+        String idToken = JwtUtils.getMemberIdByJwtToken(request);
+        //根据token中的id获取数据
+        Member memberServiceById = memberService.getById(idToken);
+        return R.ok().data("userInfo",memberServiceById);
+    }
+
+    @GetMapping("/userInfo/{id}")
+    public Memberorder userInfovo(@PathVariable String id){
+        //根据token中的id获取数据
+        Member memberServiceById = memberService.getById(id);
+        Memberorder memberorder = new Memberorder();
+        BeanUtils.copyProperties(memberServiceById,memberorder);
+        return memberorder;
+    }
+    //统计数据接口
+    @GetMapping("/getStaInfo/{day}")
+    public  R getStaInfo(@PathVariable String day){
+        //通过日期获取当日的注册人数
+        Integer count = memberService.getStaInfo(day);
+        return R.ok().data("count",count);
+
+    }
+
+}
+
Index: service/service_statistics/src/main/java/com/atguigu/statistics/client/memberClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_statistics/src/main/java/com/atguigu/statistics/client/memberClient.java b/service/service_statistics/src/main/java/com/atguigu/statistics/client/memberClient.java
new file mode 100644
--- /dev/null	(date 1611051295308)
+++ b/service/service_statistics/src/main/java/com/atguigu/statistics/client/memberClient.java	(date 1611051295308)
@@ -0,0 +1,13 @@
+package com.atguigu.statistics.client;
+
+import com.atguigu.Result.R;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+
+@FeignClient("service-ucenter")
+public interface memberClient {
+
+    @GetMapping("/ucenter/member/getStaInfo/{day}")
+    public R getStaInfo(@PathVariable("day") String day);
+}
Index: service/service_statistics/src/main/java/com/atguigu/statistics/entity/Daily.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_statistics/src/main/java/com/atguigu/statistics/entity/Daily.java b/service/service_statistics/src/main/java/com/atguigu/statistics/entity/Daily.java
new file mode 100644
--- /dev/null	(date 1611051403182)
+++ b/service/service_statistics/src/main/java/com/atguigu/statistics/entity/Daily.java	(date 1611051403182)
@@ -0,0 +1,58 @@
+package com.atguigu.statistics.entity;
+
+import com.baomidou.mybatisplus.annotation.*;
+
+import java.util.Date;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
+
+/**
+ * <p>
+ * 网站统计日数据
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-19
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@Accessors(chain = true)
+@TableName("statistics_daily")
+@ApiModel(value="Daily对象", description="网站统计日数据")
+public class Daily implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @ApiModelProperty(value = "主键")
+    @TableId(value = "id", type = IdType.ID_WORKER_STR)
+    private String id;
+
+    @ApiModelProperty(value = "统计日期")
+    private String dateCalculated;
+
+    @ApiModelProperty(value = "注册人数")
+    private Integer registerNum;
+
+    @ApiModelProperty(value = "登录人数")
+    private Integer loginNum;
+
+    @ApiModelProperty(value = "每日播放视频数")
+    private Integer videoViewNum;
+
+    @ApiModelProperty(value = "每日新增课程数")
+    private Integer courseNum;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField(fill = FieldFill.INSERT)
+    private Date gmtCreate;
+
+    @ApiModelProperty(value = "更新时间")
+    @TableField(fill = FieldFill.INSERT_UPDATE)
+    private Date gmtModified;
+
+
+}
Index: service/service_statistics/src/main/java/com/atguigu/statistics/client/ScheduleTask.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_statistics/src/main/java/com/atguigu/statistics/client/ScheduleTask.java b/service/service_statistics/src/main/java/com/atguigu/statistics/client/ScheduleTask.java
new file mode 100644
--- /dev/null	(date 1611141586649)
+++ b/service/service_statistics/src/main/java/com/atguigu/statistics/client/ScheduleTask.java	(date 1611141586649)
@@ -0,0 +1,38 @@
+package com.atguigu.statistics.client;
+
+import com.atguigu.statistics.service.DailyService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.scheduling.annotation.EnableScheduling;
+import org.springframework.scheduling.annotation.Scheduled;
+import org.springframework.stereotype.Component;
+
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
+import java.util.Date;
+
+@Component
+//定时任务注解
+@EnableScheduling
+public class ScheduleTask {
+
+    @Autowired
+    private DailyService dailyService;
+        //添加定时任务 每天凌晨一点将前一天的数据查询出来
+        @Scheduled(cron = "0 0 1 * * ? ")
+    public void Task(){
+            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
+            Calendar c = Calendar.getInstance();
+            c.setTime(new Date());
+            Date end = c.getTime();
+            String dqrq= format.format(end);//当前日期
+
+            c.add(Calendar.DATE, -1);
+            Date start = c.getTime();
+            String qyt= format.format(start);//前一天
+
+           dailyService.updateStaInfo(qyt);
+
+    }
+
+}
Index: service/service_crm/target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_crm/target/classes/application.properties b/service/service_crm/target/classes/application.properties
new file mode 100644
--- /dev/null	(date 1610104892796)
+++ b/service/service_crm/target/classes/application.properties	(date 1610104892796)
@@ -0,0 +1,38 @@
+# 服务端口
+server.port=8004
+# 服务名
+spring.application.name=service-cms
+# mysql数据库连接
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+
+spring.datasource.url=jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8
+
+spring.datasource.username=root
+
+spring.datasource.password=Jinx1214
+
+#返回json的全局时间格式
+
+spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
+
+spring.jackson.time-zone=GMT+8
+
+#配置mapper xml文件的路径
+
+mybatis-plus.mapper-locations=classpath:com/atguigu/cmsservice/mapper/xml/*.xml
+
+
+#redis配置
+
+spring.redis.host=127.0.0.1
+spring.redis.port=6379
+spring.redis.database= 0
+spring.redis.timeout=1800000
+spring.redis.lettuce.pool.max-active=20
+spring.redis.lettuce.pool.max-wait=-1
+#最大阻塞等待时间(负数表示没限制)
+spring.redis.lettuce.pool.max-idle=5
+spring.redis.lettuce.pool.min-idle=0
+#mybatis日志
+
+mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
\ No newline at end of file
Index: service/service_statistics/src/main/java/com/atguigu/statistics/service/DailyService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_statistics/src/main/java/com/atguigu/statistics/service/DailyService.java b/service/service_statistics/src/main/java/com/atguigu/statistics/service/DailyService.java
new file mode 100644
--- /dev/null	(date 1611142666210)
+++ b/service/service_statistics/src/main/java/com/atguigu/statistics/service/DailyService.java	(date 1611142666210)
@@ -0,0 +1,21 @@
+package com.atguigu.statistics.service;
+
+import com.atguigu.statistics.entity.Daily;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+import java.util.Map;
+
+/**
+ * <p>
+ * 网站统计日数据 服务类
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-19
+ */
+public interface DailyService extends IService<Daily> {
+
+    void updateStaInfo(String day);
+    //返回echarts数据模型接口
+    Map getDiaryInfo(String type, String start, String end);
+}
Index: service/service_statistics/src/main/java/com/atguigu/statistics/mapper/DailyMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/service_statistics/src/main/java/com/atguigu/statistics/mapper/DailyMapper.java b/service/service_statistics/src/main/java/com/atguigu/statistics/mapper/DailyMapper.java
new file mode 100644
--- /dev/null	(date 1611050464105)
+++ b/service/service_statistics/src/main/java/com/atguigu/statistics/mapper/DailyMapper.java	(date 1611050464105)
@@ -0,0 +1,16 @@
+package com.atguigu.statistics.mapper;
+
+import com.atguigu.statistics.entity.Daily;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 网站统计日数据 Mapper 接口
+ * </p>
+ *
+ * @author testjava
+ * @since 2021-01-19
+ */
+public interface DailyMapper extends BaseMapper<Daily> {
+
+}
